package com.hisun.DD;

import com.hisun.SC.*;
import com.hisun.CI.*;
import com.hisun.DC.*;

import java.lang.reflect.Method;

import java.io.IOException;
import java.sql.SQLException;

public class DDZSCINM {
    DBParm DDTSCHQ_RD;
    int JIBS_tmp_int;
    DBParm DDTMST_RD;
    DBParm DDTINF_RD;
    DBParm DDTCCY_RD;
    brParm DDTCCY_BR = new brParm();
    DBParm DDTPBBL_RD;
    DBParm DDTDREG_RD;
    DBParm DDTVCH_RD;
    DBParm DDTLOSS_RD;
    String JIBS_tmp_str[] = new String[10];
    boolean pgmRtn = false;
    String K_OUTPUT_FMT = "DD888";
    String CPN_DCZUAINQ = "DC-U-CARD-AC-INQ";
    String CPN_I_INQ_DDPRD = "DD-I-INQ-DDPRD";
    String WS_ERR_MSG = " ";
    double WS_DORM_BAL = 0;
    String WS_REL_AC = " ";
    char WS_STOP_FLG = ' ';
    char WS_DDTVCH_FLG = ' ';
    DDCMSG_ERROR_MSG DDCMSG_ERROR_MSG = new DDCMSG_ERROR_MSG();
    SCCEXCP SCCEXCP = new SCCEXCP();
    SCCCALL SCCCALL = new SCCCALL();
    SCCMSG SCCMSG = new SCCMSG();
    SCCFMT SCCFMT = new SCCFMT();
    SCCMPAG SCCMPAG = new SCCMPAG();
    DDCOCINM DDCOCINM = new DDCOCINM();
    DDCIPSBK DDCIPSBK = new DDCIPSBK();
    CICACCU CICACCU = new CICACCU();
    CICCUST CICCUST = new CICCUST();
    DCCUAINQ DCCUAINQ = new DCCUAINQ();
    DCCUCINF DCCUCINF = new DCCUCINF();
    DDRMST DDRMST = new DDRMST();
    DDRINF DDRINF = new DDRINF();
    DDRCCY DDRCCY = new DDRCCY();
    DDRPBBL DDRPBBL = new DDRPBBL();
    DDRVCH DDRVCH = new DDRVCH();
    DDRLOSS DDRLOSS = new DDRLOSS();
    DDCIQPRD DDCIQPRD = new DDCIQPRD();
    DDVMPRD DDVMPRD = new DDVMPRD();
    DDRDREG DDRDREG = new DDRDREG();
    DCCPACTY DCCPACTY = new DCCPACTY();
    DDRSCHQ DDRSCHQ = new DDRSCHQ();
    CICQACAC CICQACAC = new CICQACAC();
    CICQACRI CICQACRI = new CICQACRI();
    CICQACRL CICQACRL = new CICQACRL();
    SCCGWA SCCGWA;
    SCCGSCA_SC_AREA GWA_SC_AREA;
    DDCSCINM DDCSCINM;
    public void MP(SCCGWA SCCGWA, DDCSCINM DDCSCINM) throws IOException,SQLException,Exception {
        this.SCCGWA = SCCGWA;
        this.DDCSCINM = DDCSCINM;
        CEP.TRC(SCCGWA);
        A000_INIT_PROC();
        if (pgmRtn) return;
        B000_MAIN_PROC();
        if (pgmRtn) return;
        CEP.TRC(SCCGWA, "DDZSCINM return!");
        Z_RET();
        if (pgmRtn) return;
    }
    public void A000_INIT_PROC() throws IOException,SQLException,Exception {
        GWA_SC_AREA = (SCCGSCA_SC_AREA) SCCGWA.SC_AREA_PTR;
        IBS.init(SCCGWA, DDCOCINM);
    }
    public void B000_MAIN_PROC() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, DDCSCINM.INPUT_DATA.CCY);
        B010_CHECK_INPUT();
        if (pgmRtn) return;
        B011_CHECK_CUS_AC_PROC();
        if (pgmRtn) return;
        B020_CHK_AC_STS_PROC();
        if (pgmRtn) return;
        if (DDCSCINM.INPUT_DATA.FUNC != '1') {
            B030_GET_CI_ENG_NM_PROC();
            if (pgmRtn) return;
            B040_GET_CURR_BAL();
            if (pgmRtn) return;
            B050_FMT_OUTPUT();
            if (pgmRtn) return;
        }
    }
    public void B010_CHECK_INPUT() throws IOException,SQLException,Exception {
        if (DDCSCINM.INPUT_DATA.AC_NO.trim().length() == 0 
            && DDCSCINM.INPUT_DATA.CARD_NO.trim().length() == 0) {
            WS_ERR_MSG = DDCMSG_ERROR_MSG.DD_AC_NO_M_INPUT;
            S000_ERR_MSG_PROC();
            if (pgmRtn) return;
        }
    }
    public void B015_CHK_CARD_PROC() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, DDCSCINM.INPUT_DATA.CARD_NO);
        CEP.TRC(SCCGWA, DDCSCINM.INPUT_DATA.AC_NO);
        if (DDCSCINM.INPUT_DATA.CARD_NO.trim().length() > 0 
            && DDCSCINM.INPUT_DATA.AC_NO.trim().length() == 0) {
            IBS.init(SCCGWA, DCCPACTY);
            CEP.TRC(SCCGWA, "151515");
            DCCPACTY.INPUT.AC = DDCSCINM.INPUT_DATA.CARD_NO;
            DCCPACTY.INPUT.FUNC = '2';
            S000_CALL_DCZPACTY();
            if (pgmRtn) return;
            DDCSCINM.INPUT_DATA.AC_NO = DCCPACTY.OUTPUT.STD_AC;
            DDCOCINM.AC = DCCPACTY.OUTPUT.STD_AC;
            CEP.TRC(SCCGWA, DDCSCINM.INPUT_DATA.AC_NO);
            CEP.TRC(SCCGWA, DDCOCINM.AC);
        }
        CEP.TRC(SCCGWA, DCCPACTY.OUTPUT.STD_AC);
        CEP.TRC(SCCGWA, DDCSCINM.INPUT_DATA.CCY);
        CEP.TRC(SCCGWA, DDCSCINM.INPUT_DATA.CCY_TYP);
        if (DDCSCINM.INPUT_DATA.CCY_TYP != ' ') {
            IBS.init(SCCGWA, DDRCCY);
            DDRCCY.KEY.AC = DCCPACTY.OUTPUT.STD_AC;
            DDRCCY.CCY = DDCSCINM.INPUT_DATA.CCY;
            DDRCCY.CCY_TYPE = DDCSCINM.INPUT_DATA.CCY_TYP;
            T000_READ_CCY_PROC1();
            if (pgmRtn) return;
        }
    }
    public void B011_CHECK_CUS_AC_PROC() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, CICQACRI);
        CICQACRI.FUNC = 'A';
        CICQACRI.DATA.AGR_NO = DDCSCINM.INPUT_DATA.AC_NO;
        S000_CALL_CIZQACRI();
        if (pgmRtn) return;
        IBS.init(SCCGWA, CICQACRL);
        CICQACRL.DATA.AC_NO = DDCSCINM.INPUT_DATA.AC_NO;
        CICQACRL.DATA.AC_REL = "04";
        CICQACRL.FUNC = '3';
        CICQACRL.FUNC = 'I';
        IBS.CALLCPN(SCCGWA, "CI-INQ-ACRL", CICQACRL);
        CEP.TRC(SCCGWA, CICQACRL.O_DATA.O_REL_AC_NO);
        if (CICQACRL.RC.RC_CODE == 0) {
            WS_REL_AC = CICQACRL.O_DATA.O_REL_AC_NO;
        } else {
        }
        IBS.init(SCCGWA, CICQACRL);
        CICQACRL.DATA.AC_NO = DDCSCINM.INPUT_DATA.AC_NO;
        CICQACRL.DATA.AC_REL = "09";
        CICQACRL.FUNC = '3';
        CICQACRL.FUNC = 'I';
        IBS.CALLCPN(SCCGWA, "CI-INQ-ACRL", CICQACRL);
        CEP.TRC(SCCGWA, CICQACRL.O_DATA.O_REL_AC_NO);
        if (CICQACRL.RC.RC_CODE == 0) {
            WS_REL_AC = CICQACRL.O_DATA.O_REL_AC_NO;
        } else {
        }
        IBS.init(SCCGWA, CICQACRL);
        CICQACRL.DATA.AC_NO = DDCSCINM.INPUT_DATA.AC_NO;
        CICQACRL.DATA.AC_REL = "12";
        CICQACRL.FUNC = '3';
        CICQACRL.FUNC = 'I';
        IBS.CALLCPN(SCCGWA, "CI-INQ-ACRL", CICQACRL);
        if (CICQACRL.RC.RC_CODE == 0) {
            WS_REL_AC = CICQACRL.O_DATA.O_REL_AC_NO;
        } else {
        }
        IBS.init(SCCGWA, CICQACRL);
        CICQACRL.DATA.AC_NO = DDCSCINM.INPUT_DATA.AC_NO;
        CICQACRL.DATA.AC_REL = "13";
        CICQACRL.FUNC = '3';
        CICQACRL.FUNC = 'I';
        IBS.CALLCPN(SCCGWA, "CI-INQ-ACRL", CICQACRL);
        if (CICQACRL.RC.RC_CODE == 0) {
            WS_REL_AC = CICQACRL.O_DATA.O_REL_AC_NO;
        } else {
        }
        IBS.init(SCCGWA, CICQACRL);
        CICQACRL.DATA.AC_NO = DDCSCINM.INPUT_DATA.AC_NO;
        CICQACRL.DATA.AC_REL = "03";
        CICQACRL.FUNC = '3';
        CICQACRL.FUNC = 'I';
        IBS.CALLCPN(SCCGWA, "CI-INQ-ACRL", CICQACRL);
        if (CICQACRL.RC.RC_CODE == 0) {
            WS_REL_AC = CICQACRL.O_DATA.O_REL_AC_NO;
        } else {
        }
    }
    public void B020_CHK_AC_STS_PROC() throws IOException,SQLException,Exception {
        if (CICQACRI.O_DATA.O_FRM_APP.equalsIgnoreCase("DD")) {
            IBS.init(SCCGWA, DDRMST);
            DDRMST.KEY.CUS_AC = CICQACRI.O_DATA.O_AGR_NO;
            T000_READ_MST_PROC();
            if (pgmRtn) return;
            IBS.init(SCCGWA, DDRINF);
            DDRINF.KEY.CUS_AC = CICQACRI.O_DATA.O_AGR_NO;
            T000_READ_INF_PROC();
            if (pgmRtn) return;
        }
        DDRVCH.KEY.CUS_AC = DDRMST.KEY.CUS_AC;
        T000_READ_DDTVCH_PROC();
        if (pgmRtn) return;
        if (WS_DDTVCH_FLG == 'Y' 
            && DDRVCH.PSBK_STS != 'C') {
            if (DDRMST.CARD_FLG == 'Y') {
                DDCSCINM.OUTPUT_DATA.BV_TYP = 'X';
            } else {
                DDCSCINM.OUTPUT_DATA.BV_TYP = '9';
            }
            if (DDRVCH.KEY.BV_TYPE == 'B') {
                DDCSCINM.OUTPUT_DATA.BV_TYP = 'J';
            }
            DDCSCINM.OUTPUT_DATA.BV_CD = "001";
            DDCSCINM.OUTPUT_DATA.VCH_STS = DDRVCH.PSBK_STS;
            DDCSCINM.OUTPUT_DATA.PSBK_NO = DDRVCH.PSBK_NO;
            DDCSCINM.OUTPUT_DATA.PSBK_SEQ = DDRVCH.PSBK_SEQ;
        }
        if (DDCSCINM.INPUT_DATA.FUNC != '1') {
            R000_CHECK_MST_STUS();
            if (pgmRtn) return;
        }
        CEP.TRC(SCCGWA, DDRMST.AC_STS);
        CEP.TRC(SCCGWA, DDRMST.PROD_CODE);
    }
    public void B030_GET_CI_ENG_NM_PROC() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, CICCUST);
        CICCUST.FUNC = 'C';
        CICCUST.DATA.CI_NO = CICQACRI.O_DATA.O_CI_NO;
        S000_CALL_CIZCUST();
        if (pgmRtn) return;
        CEP.TRC(SCCGWA, DDRMST.AC_STS);
        CEP.TRC(SCCGWA, DDRMST.PROD_CODE);
    }
    public void B040_GET_CURR_BAL() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, DDRMST.PROD_CODE);
        for (DDCOCINM.CCY_COUNT = 1; DDCOCINM.CCY_COUNT <= 5; DDCOCINM.CCY_COUNT += 1) {
            CEP.TRC(SCCGWA, DDCOCINM.CCY_COUNT);
            DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY = " ";
            DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_CURR_BAL = 0;
            DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_AVA_BAL = 0;
            DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_PSBK_BAL = 0;
            DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_STS = ' ';
            DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_TYPE = ' ';
        }
        if (DDCSCINM.INPUT_DATA.CCY.trim().length() == 0) {
            IBS.init(SCCGWA, DDRCCY);
            DDCOCINM.CCY_COUNT = 0;
            DDCSCINM.OUTPUT_DATA.CCY_COUNT = 0;
            if (WS_REL_AC.trim().length() > 0) {
                DDRCCY.CUS_AC = WS_REL_AC;
            } else {
                DDRCCY.CUS_AC = CICQACRI.O_DATA.O_AGR_NO;
            }
            CEP.TRC(SCCGWA, DDRCCY.KEY.AC);
            T000_STBR_DDTCCY();
            if (pgmRtn) return;
            T000_READNEXT_DDTCCY();
            if (pgmRtn) return;
            CEP.TRC(SCCGWA, DDCOCINM.CCY_COUNT);
            CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.CCY_COUNT);
            CEP.TRC(SCCGWA, "TEST001");
            while (WS_STOP_FLG != '"Y"') {
                T000_READNEXT_DDTCCY();
                if (pgmRtn) return;
            }
            T000_ENDBR_DDTCCY();
            if (pgmRtn) return;
        } else {
            IBS.init(SCCGWA, DDRCCY);
            DDCOCINM.CCY_COUNT = 0;
            DDCSCINM.OUTPUT_DATA.CCY_COUNT = 0;
            if (WS_REL_AC.trim().length() > 0) {
                DDRCCY.CUS_AC = WS_REL_AC;
            } else {
                DDRCCY.CUS_AC = CICQACRI.O_DATA.O_AGR_NO;
            }
            DDRCCY.CCY = DDCSCINM.INPUT_DATA.CCY;
            T000_STBR_DDTCCY1();
            if (pgmRtn) return;
            T000_READ_CCY_PROC();
            if (pgmRtn) return;
            while (WS_STOP_FLG != '"Y"') {
                T000_READ_CCY_PROC();
                if (pgmRtn) return;
            }
            T000_ENDBR_DDTCCY();
            if (pgmRtn) return;
        }
        CEP.TRC(SCCGWA, DDRMST.AC_STS);
        CEP.TRC(SCCGWA, DDCOCINM.CCY_INFO[1-1].CCY);
        CEP.TRC(SCCGWA, DDCOCINM.CCY_INFO[1-1].CCY_CURR_BAL);
        CEP.TRC(SCCGWA, DDCOCINM.CCY_INFO[1-1].CCY_AVA_BAL);
        CEP.TRC(SCCGWA, DDCOCINM.CCY_INFO[1-1].CCY_PSBK_BAL);
        CEP.TRC(SCCGWA, DDCOCINM.CCY_INFO[1-1].CCY_STS);
        CEP.TRC(SCCGWA, DDCOCINM.CCY_INFO[1-1].CCY_TYPE);
        if (DDRMST.CI_TYP != '1') {
            IBS.init(SCCGWA, DDRCCY);
            if (WS_REL_AC.trim().length() > 0) {
                DDRCCY.CUS_AC = WS_REL_AC;
            } else {
                DDRCCY.CUS_AC = CICQACRI.O_DATA.O_AGR_NO;
            }
            T000_STBR_DDTCCY_FIRST();
            if (pgmRtn) return;
            DDCSCINM.OUTPUT_DATA.CCY_CCY = DDRCCY.CCY;
            DDCSCINM.OUTPUT_DATA.CCY_CCY_TYPE = DDRCCY.CCY_TYPE;
            DDCSCINM.OUTPUT_DATA.CURR_BAL = DDRCCY.CURR_BAL;
            DDCSCINM.OUTPUT_DATA.CURR_BAL = DDRCCY.CURR_BAL + DDRCCY.CCAL_TOT_BAL;
            DDCSCINM.OUTPUT_DATA.HOLD_BAL = DDRCCY.HOLD_BAL;
            DDCSCINM.OUTPUT_DATA.AVA_BAL = DDRCCY.CURR_BAL - DDRCCY.HOLD_BAL + DDRCCY.CCAL_TOT_BAL - DDRCCY.MARGIN_BAL;
            if (DDCSCINM.OUTPUT_DATA.AVA_BAL < 0) {
                DDCSCINM.OUTPUT_DATA.AVA_BAL = 0;
            }
            CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.CCY_CCY);
            CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.CCY_CCY_TYPE);
            CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.CURR_BAL);
            CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.HOLD_BAL);
            CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.AVA_BAL);
        }
    }
    public void B042_GET_SCHQ_AMT() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, DDRSCHQ);
        DDRSCHQ.KEY.AC = DDCSCINM.INPUT_DATA.AC_NO;
        DDRSCHQ.KEY.TYP = '1';
        T000_READ_DDTSCHQ();
        if (pgmRtn) return;
        DDCOCINM.REG_AMT = DDRSCHQ.AMT;
    }
    public void T000_READ_DDTSCHQ() throws IOException,SQLException,Exception {
        DDTSCHQ_RD = new DBParm();
        DDTSCHQ_RD.TableName = "DDTSCHQ";
        IBS.READ(SCCGWA, DDRSCHQ, DDTSCHQ_RD);
    }
    public void B045_GET_DORM_BAL() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, DDRMST.AC_STS);
        CEP.TRC(SCCGWA, DDRMST.PROD_CODE);
        if (DDRMST.AC_STS == 'D') {
            IBS.init(SCCGWA, DDRDREG);
            DDRDREG.KEY.AC = DDRCCY.KEY.AC;
            T000_READ_DDTDREG_PROC();
            if (pgmRtn) return;
        }
    }
    public void B047_GET_VCH_INFO() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, DDRMST.AC_STS);
        CEP.TRC(SCCGWA, DDRMST.PROD_CODE);
        CEP.TRC(SCCGWA, DDRVCH.UPT_CNT);
        CEP.TRC(SCCGWA, DDRVCH.PSBK_STS);
        CEP.TRC(SCCGWA, DDRVCH.LOST_NO);
        IBS.init(SCCGWA, DDRLOSS);
        if (DDRVCH.PSBK_STS != 'N' 
            && DDRVCH.PSBK_STS != 'C' 
            && DDRVCH.LOST_NO.trim().length() > 0) {
            DDRLOSS.KEY.LOS_NO = DDRVCH.LOST_NO;
            T000_READ_DDTLOSS_PROC();
            if (pgmRtn) return;
        }
    }
    public void B050_FMT_OUTPUT() throws IOException,SQLException,Exception {
        DDCOCINM.CI_NO = CICCUST.O_DATA.O_CI_NO;
        DDCSCINM.OUTPUT_DATA.CI_NO = CICCUST.O_DATA.O_CI_NO;
        DDCOCINM.AC = DDCSCINM.INPUT_DATA.AC_NO;
        if (CICQACRI.O_DATA.O_AC_CNM.trim().length() > 0) {
            DDCOCINM.AC_CNM = CICQACRI.O_DATA.O_AC_CNM;
            DDCSCINM.OUTPUT_DATA.AC_CNM = CICQACRI.O_DATA.O_AC_CNM;
        } else {
            DDCOCINM.AC_CNM = CICCUST.O_DATA.O_CI_NM;
            DDCSCINM.OUTPUT_DATA.AC_CNM = CICCUST.O_DATA.O_CI_NM;
        }
        if (CICQACRI.O_DATA.O_AC_ENM.trim().length() > 0) {
            DDCOCINM.AC_ENM = CICQACRI.O_DATA.O_AC_ENM;
            DDCSCINM.OUTPUT_DATA.AC_ENM = CICQACRI.O_DATA.O_AC_ENM;
        } else {
            DDCOCINM.AC_ENM = CICCUST.O_DATA.O_CI_ENM;
            DDCOCINM.AC_ENM = CICCUST.O_DATA.O_CI_ENM;
        }
        B060_GET_PRD_INF_PROC();
        if (pgmRtn) return;
        if (DDVMPRD.VAL.CUR_TYPE == 'L') {
            DDCOCINM.M_CCY_IND = '1';
        } else {
            DDCOCINM.M_CCY_IND = '2';
        }
        DDCOCINM.AC_PP = '2';
        DDCOCINM.CUS_TYP = CICCUST.O_DATA.O_CI_TYP;
        DDCOCINM.AC_REMARKS = " ";
        if (DDRMST.AC_STS_WORD == null) DDRMST.AC_STS_WORD = "";
        JIBS_tmp_int = DDRMST.AC_STS_WORD.length();
        for (int i=0;i<99-JIBS_tmp_int;i++) DDRMST.AC_STS_WORD += " ";
        if (DDRMST.AC_STS_WORD.substring(21 - 1, 21 + 1 - 1).equalsIgnoreCase("1")) {
            DDCOCINM.OVR_IND = 'Y';
        }
        if (DDRMST.AC_TYPE == 'F') {
            DDCOCINM.TMP_IND = 'Y';
        } else {
            DDCOCINM.TMP_IND = 'N';
        }
        DDCOCINM.AC_TYP = DDRMST.AC_TYPE;
        CEP.TRC(SCCGWA, DDCOCINM.AC_ENM);
        CEP.TRC(SCCGWA, DDCOCINM.CI_NO);
        CEP.TRC(SCCGWA, DDCOCINM.AC_CNM);
        CEP.TRC(SCCGWA, DDCOCINM.AC_TYP);
        R000_TRANS_MST_DATA_OUTPUT();
        if (pgmRtn) return;
        R000_TRANS_INF_DATA_OUTPUT();
        if (pgmRtn) return;
        R000_TRANS_MST_DATA_FMT();
        if (pgmRtn) return;
        R000_TRANS_INF_DATA_FMT();
        if (pgmRtn) return;
        if (DDRINF.LICENSE_TYPE1.trim().length() == 0) {
            DDCOCINM.LICENSE_TYPE1 = CICCUST.O_DATA.O_ID_TYPE;
            DDCSCINM.OUTPUT_DATA.LICENSE_TYPE1 = CICCUST.O_DATA.O_ID_TYPE;
        }
        if (DDRINF.LICENSE_NO1.trim().length() == 0) {
            DDCOCINM.LICENSE_NO1 = CICCUST.O_DATA.O_ID_NO;
            DDCOCINM.LICENSE_NO1 = CICCUST.O_DATA.O_ID_NO;
        }
        CEP.TRC(SCCGWA, DDCOCINM.CUS_TYP);
        CEP.TRC(SCCGWA, DDCOCINM.CI_NO);
        CEP.TRC(SCCGWA, DDCOCINM.AC_ENM);
        CEP.TRC(SCCGWA, DDCOCINM.AC_CNM);
        CEP.TRC(SCCGWA, DDCOCINM.PROD_CODE);
        CEP.TRC(SCCGWA, DDCOCINM.AC_STS);
        CEP.TRC(SCCGWA, DDCOCINM.AC_STS_WORD);
        CEP.TRC(SCCGWA, DDCOCINM.OPEN_DATE);
        CEP.TRC(SCCGWA, DDCOCINM.EFF_DATE);
        CEP.TRC(SCCGWA, DDCOCINM.EXP_DATE);
        CEP.TRC(SCCGWA, DDCOCINM.OPEN_DP);
        CEP.TRC(SCCGWA, DDCOCINM.OPEN_TLR);
        CEP.TRC(SCCGWA, DDCOCINM.CLOSE_DATE);
        CEP.TRC(SCCGWA, DDCOCINM.LAST_TLR);
        CEP.TRC(SCCGWA, DDCOCINM.LAST_DATE);
        CEP.TRC(SCCGWA, DDCOCINM.LAST_FN_DATE);
        CEP.TRC(SCCGWA, DDCOCINM.CARD_FLG);
        CEP.TRC(SCCGWA, DDCOCINM.FRG_TYPE);
        CEP.TRC(SCCGWA, DDCOCINM.FRG_CODE);
        CEP.TRC(SCCGWA, DDCOCINM.FRG_OPEN_NO);
        CEP.TRC(SCCGWA, DDCOCINM.CROS_DR_FLG);
        CEP.TRC(SCCGWA, DDCOCINM.CROS_CR_FLG);
        CEP.TRC(SCCGWA, DDCOCINM.SPC_KIND);
        CEP.TRC(SCCGWA, DDCOCINM.BASE_AC);
        CEP.TRC(SCCGWA, DDCOCINM.BASE_NO);
        CEP.TRC(SCCGWA, DDCOCINM.BASE_AC_AREA);
        CEP.TRC(SCCGWA, DDCOCINM.BASE_AC_BKNO);
        CEP.TRC(SCCGWA, DDCOCINM.BASE_AC_OPDT);
        CEP.TRC(SCCGWA, DDCOCINM.BASE_AC_BK);
        CEP.TRC(SCCGWA, DDCOCINM.LICENSE_TYPE1);
        CEP.TRC(SCCGWA, DDCOCINM.LICENSE_NO1);
        CEP.TRC(SCCGWA, DDCOCINM.LICENSE_DATE1);
        CEP.TRC(SCCGWA, DDCOCINM.LICENSE_TYPE2);
        CEP.TRC(SCCGWA, DDCOCINM.LICENSE_NO2);
        CEP.TRC(SCCGWA, DDCOCINM.LICENSE_DATE2);
        CEP.TRC(SCCGWA, DDCOCINM.CORP_NAME1);
        CEP.TRC(SCCGWA, DDCOCINM.CORP_NAME2);
        CEP.TRC(SCCGWA, DDCOCINM.CORP_NAME3);
        CEP.TRC(SCCGWA, DDCOCINM.CORP_NAME4);
        CEP.TRC(SCCGWA, DDCOCINM.CORP_NAME5);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_ORGNAME);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_ORGCODE);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_NO);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_CORP_FLG);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_NAME);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_IDTYPE);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_IDNO);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_DATE);
        CEP.TRC(SCCGWA, DDCOCINM.STAT_CODE);
        CEP.TRC(SCCGWA, DDCOCINM.PAY_MTH);
        CEP.TRC(SCCGWA, DDCOCINM.CHK_TYPE);
        CEP.TRC(SCCGWA, DDCOCINM.AMT_TYP);
        CEP.TRC(SCCGWA, DDCOCINM.TXN_TYP);
        CEP.TRC(SCCGWA, DDCOCINM.AC);
        CEP.TRC(SCCGWA, DDCOCINM.CI_NO);
        CEP.TRC(SCCGWA, DDCOCINM.AC_ENM);
        CEP.TRC(SCCGWA, DDCOCINM.AC_CNM);
        CEP.TRC(SCCGWA, DDCOCINM.PROD_CODE);
        CEP.TRC(SCCGWA, DDCOCINM.AC_STS);
        CEP.TRC(SCCGWA, DDCOCINM.AC_STS_WORD);
        CEP.TRC(SCCGWA, DDCOCINM.OPEN_DATE);
        CEP.TRC(SCCGWA, DDCOCINM.EFF_DATE);
        CEP.TRC(SCCGWA, DDCOCINM.EXP_DATE);
        CEP.TRC(SCCGWA, DDCOCINM.OWNER_BK);
        CEP.TRC(SCCGWA, DDCOCINM.OWNER_BR);
        CEP.TRC(SCCGWA, DDCOCINM.OWNER_BRDP);
        CEP.TRC(SCCGWA, DDCOCINM.OPEN_DP);
        CEP.TRC(SCCGWA, DDCOCINM.OPEN_TLR);
        CEP.TRC(SCCGWA, DDCOCINM.CLOSE_DATE);
        CEP.TRC(SCCGWA, DDCOCINM.CLOSE_AC_STS);
        CEP.TRC(SCCGWA, DDCOCINM.LAST_TLR);
        CEP.TRC(SCCGWA, DDCOCINM.LAST_DATE);
        CEP.TRC(SCCGWA, DDCOCINM.LAST_FN_DATE);
        CEP.TRC(SCCGWA, DDCOCINM.CARD_FLG);
        CEP.TRC(SCCGWA, DDCOCINM.FRG_TYPE);
        CEP.TRC(SCCGWA, DDCOCINM.FRG_CODE);
        CEP.TRC(SCCGWA, DDCOCINM.FRG_OPEN_NO);
        CEP.TRC(SCCGWA, DDCOCINM.DPPST_PERIOD1);
        CEP.TRC(SCCGWA, DDCOCINM.DPPST_DATE1);
        CEP.TRC(SCCGWA, DDCOCINM.ODPST_PERIOD1);
        CEP.TRC(SCCGWA, DDCOCINM.ODPST_DATE1);
        CEP.TRC(SCCGWA, DDCOCINM.DPPST_PERIOD2);
        CEP.TRC(SCCGWA, DDCOCINM.DPPST_DATE2);
        CEP.TRC(SCCGWA, DDCOCINM.ODPST_PERIOD2);
        CEP.TRC(SCCGWA, DDCOCINM.ODPST_DATE2);
        CEP.TRC(SCCGWA, DDCOCINM.CROS_DR_FLG);
        CEP.TRC(SCCGWA, DDCOCINM.CROS_CR_FLG);
        CEP.TRC(SCCGWA, DDCOCINM.SPC_KIND);
        CEP.TRC(SCCGWA, DDCOCINM.AC_OIC_NO);
        CEP.TRC(SCCGWA, DDCOCINM.RES_CNET);
        CEP.TRC(SCCGWA, DDCOCINM.SUB_DP);
        CEP.TRC(SCCGWA, DDCOCINM.BASE_AC);
        CEP.TRC(SCCGWA, DDCOCINM.BASE_NO);
        CEP.TRC(SCCGWA, DDCOCINM.BASE_AC_AREA);
        CEP.TRC(SCCGWA, DDCOCINM.BASE_AC_BKNO);
        CEP.TRC(SCCGWA, DDCOCINM.BASE_AC_OPDT);
        CEP.TRC(SCCGWA, DDCOCINM.BASE_AC_BK);
        CEP.TRC(SCCGWA, DDCOCINM.LICENSE_TYPE1);
        CEP.TRC(SCCGWA, DDCOCINM.LICENSE_NO1);
        CEP.TRC(SCCGWA, DDCOCINM.LICENSE_DATE1);
        CEP.TRC(SCCGWA, DDCOCINM.LICENSE_TYPE2);
        CEP.TRC(SCCGWA, DDCOCINM.LICENSE_NO2);
        CEP.TRC(SCCGWA, DDCOCINM.LICENSE_DATE2);
        CEP.TRC(SCCGWA, DDCOCINM.CORP_NAME1);
        CEP.TRC(SCCGWA, DDCOCINM.CORP_NAME2);
        CEP.TRC(SCCGWA, DDCOCINM.CORP_NAME3);
        CEP.TRC(SCCGWA, DDCOCINM.CORP_NAME4);
        CEP.TRC(SCCGWA, DDCOCINM.CORP_NAME5);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_ORGNAME);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_ORGCODE);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_NO);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_CORP_FLG);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_NAME);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_IDTYPE);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_IDNO);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_DATE);
        CEP.TRC(SCCGWA, DDCOCINM.STAT_CODE);
        CEP.TRC(SCCGWA, DDCOCINM.PAY_MTH);
        CEP.TRC(SCCGWA, DDCOCINM.CHK_TYPE);
        CEP.TRC(SCCGWA, DDCOCINM.M_CCY_IND);
        CEP.TRC(SCCGWA, DDCOCINM.AC_PP);
        CEP.TRC(SCCGWA, DDCOCINM.CUS_TYP);
        CEP.TRC(SCCGWA, DDCOCINM.AC_REMARKS);
        CEP.TRC(SCCGWA, DDCOCINM.CHEQUE_IND);
        CEP.TRC(SCCGWA, DDCOCINM.OVR_IND);
        CEP.TRC(SCCGWA, DDCOCINM.TMP_IND);
        CEP.TRC(SCCGWA, DDCOCINM.AC_TYP);
        CEP.TRC(SCCGWA, DDCOCINM.CCY_COUNT);
        if (!SCCGWA.COMM_AREA.BSP_FLG.equalsIgnoreCase("BSP") 
            && !SCCGWA.COMM_AREA.CHNL.equalsIgnoreCase("BAT")) {
            IBS.init(SCCGWA, SCCFMT);
            SCCFMT.FMTID = K_OUTPUT_FMT;
            SCCFMT.DATA_PTR = DDCOCINM;
            SCCFMT.DATA_LEN = 7186;
            IBS.FMT(SCCGWA, SCCFMT);
        }
    }
    public void B060_GET_PRD_INF_PROC() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, DDCIQPRD);
        DDCIQPRD.INPUT_DATA.PROD_CODE = DDRCCY.PROD_CODE;
        DDCIQPRD.DDVMPRD_PTR = DDVMPRD;
        CEP.TRC(SCCGWA, DDRMST.PROD_CODE);
        CEP.TRC(SCCGWA, DDRCCY.PROD_CODE);
        S000_CALL_DDZIQPRD();
        if (pgmRtn) return;
        CEP.TRC(SCCGWA, DDCIQPRD.INPUT_DATA.PROD_CODE);
    }
    public void R000_CHECK_MST_STUS() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, DDRMST.AC_STS);
    }
    public void R000_TRANS_MST_DATA_FMT() throws IOException,SQLException,Exception {
        DDCOCINM.PROD_CODE = CICQACRI.O_DATA.O_PROD_CD;
        if (CICQACRI.O_DATA.O_FRM_APP.equalsIgnoreCase("DD")) {
            DDCOCINM.AC_STS = DDRMST.AC_STS;
            DDCOCINM.AC_STS_WORD = DDRMST.AC_STS_WORD;
            DDCOCINM.OPEN_DATE = DDRMST.OPEN_DATE;
            DDCOCINM.EFF_DATE = DDRMST.EFF_DATE;
            DDCOCINM.EXP_DATE = DDRMST.EXP_DATE;
            DDCOCINM.OWNER_BK = DDRMST.OWNER_BK;
            DDCOCINM.OWNER_BR = DDRMST.OWNER_BR;
            DDCOCINM.OWNER_BRDP = DDRMST.OWNER_BRDP;
            DDCOCINM.OPEN_DP = DDRMST.OPEN_DP;
            DDCOCINM.OPEN_TLR = DDRMST.OPEN_TLR;
            DDCOCINM.CLOSE_DATE = DDRMST.CLOSE_DATE;
            DDCOCINM.CLOSE_AC_STS = DDRMST.CLOSE_AC_STS;
            DDCOCINM.LAST_TLR = DDRMST.LAST_TLR;
            DDCOCINM.LAST_DATE = DDRMST.LAST_DATE;
            DDCOCINM.LAST_FN_DATE = DDRMST.LAST_FN_DATE;
            DDCOCINM.CARD_FLG = DDRMST.CARD_FLG;
            DDCOCINM.FRG_TYPE = DDRMST.FRG_TYPE;
            DDCOCINM.FRG_CODE = DDRMST.FRG_CODE;
            DDCOCINM.FRG_OPEN_NO = DDRMST.FRG_OPEN_NO;
            DDCOCINM.CROS_DR_FLG = DDRMST.CROS_DR_FLG;
            DDCOCINM.CROS_CR_FLG = DDRMST.CROS_CR_FLG;
            CEP.TRC(SCCGWA, DDRMST.CROS_DR_FLG);
            CEP.TRC(SCCGWA, DDRMST.CROS_CR_FLG);
            DDCOCINM.SPC_KIND = DDRMST.SPC_KIND;
            DDCOCINM.CHK_TYPE = DDRMST.CHCK_IND;
            CEP.TRC(SCCGWA, DDCOCINM.FRG_TYPE);
            DDCOCINM.CURR_BAL = DDCSCINM.OUTPUT_DATA.CURR_BAL;
            DDCOCINM.HOLD_BAL = DDCSCINM.OUTPUT_DATA.HOLD_BAL;
            DDCOCINM.AVA_BAL = DDCSCINM.OUTPUT_DATA.AVA_BAL;
            DDCOCINM.CCY_CCY = DDCSCINM.OUTPUT_DATA.CCY_CCY;
            DDCOCINM.CCY_CCY_TYPE = DDCSCINM.OUTPUT_DATA.CCY_CCY_TYPE;
            DDCOCINM.AC_PURP = DDRMST.AC_PURP;
            DDCOCINM.CASH_FLG = DDRMST.CASH_FLG;
            DDCOCINM.APP_DT = DDRMST.PBC_APPR_DATE;
            DDCOCINM.GEN_RSN = DDRMST.GEN_RSN;
            DDCOCINM.FRG_IND = DDRMST.FRG_IND;
            CEP.TRC(SCCGWA, DDRMST.FRG_IND);
            if (DDRMST.AC_STS == 'C') {
                DDCOCINM.CLS_TLR = DDRMST.LAST_TLR;
            }
            DDCOCINM.YCHK_FLG = DDCSCINM.OUTPUT_DATA.YCHK_FLG;
            DDCOCINM.SIGN_OPT = DDCSCINM.OUTPUT_DATA.SIGN_OPT;
            DDCOCINM.SIGN_TYP = DDCSCINM.OUTPUT_DATA.SIGN_TYP;
        }
        DDCOCINM.DPPST_PERIOD1 = DDVMPRD.VAL.DEP_POST_PERIOD1;
        DDCOCINM.DPPST_DATE1 = DDVMPRD.VAL.DEP_POST_DATE1;
        DDCOCINM.ODPST_PERIOD1 = DDVMPRD.VAL.OD_POST_PERIOD1;
        DDCOCINM.ODPST_DATE1 = DDVMPRD.VAL.OD_POST_DATE1;
        DDCOCINM.DPPST_PERIOD2 = DDVMPRD.VAL.DEP_POST_PERIOD2;
        DDCOCINM.DPPST_DATE2 = DDVMPRD.VAL.DEP_POST_DATE2;
        DDCOCINM.ODPST_PERIOD2 = DDVMPRD.VAL.OD_POST_PERIOD2;
        DDCOCINM.ODPST_DATE2 = DDVMPRD.VAL.OD_POST_DATE2;
        DDCOCINM.AC_OIC_NO = DDRMST.AC_OIC_NO;
        DDCOCINM.RES_CNET = DDRMST.AC_OIC_CODE;
        DDCOCINM.SUB_DP = DDRMST.SUB_DP;
        CEP.TRC(SCCGWA, DDCOCINM.AC_OIC_NO);
        CEP.TRC(SCCGWA, DDCOCINM.RES_CNET);
        CEP.TRC(SCCGWA, DDCOCINM.SUB_DP);
    }
    public void R000_TRANS_INF_DATA_FMT() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, DDRMST.AC_TYPE);
        if (DDRMST.AC_TYPE == 'C') {
            DDCOCINM.BASE_AC = DDRMST.KEY.CUS_AC;
        } else {
            DDCOCINM.BASE_AC = DDRINF.BASE_AC;
        }
        DDCOCINM.BASE_NO = DDRINF.BASE_NO;
        DDCOCINM.BASE_AC_AREA = DDRINF.BASE_AC_AREA;
        DDCOCINM.BASE_AC_BKNO = DDRINF.BASE_AC_BKNO;
        DDCOCINM.BASE_AC_OPDT = DDRINF.BASE_AC_OPDT;
        DDCOCINM.BASE_AC_BK = DDRINF.BASE_AC_BK;
        DDCOCINM.LICENSE_TYPE1 = DDRINF.LICENSE_TYPE1;
        DDCOCINM.LICENSE_NO1 = DDRINF.LICENSE_NO1;
        DDCOCINM.LICENSE_DATE1 = DDRINF.LICENSE_DATE1;
        DDCOCINM.LICENSE_TYPE2 = DDRINF.LICENSE_TYPE2;
        DDCOCINM.LICENSE_NO2 = DDRINF.LICENSE_NO2;
        DDCOCINM.LICENSE_DATE2 = DDRINF.LICENSE_DATE2;
        DDCOCINM.CORP_NAME1 = DDRINF.CORP_NAME1;
        DDCOCINM.CORP_NAME2 = DDRINF.CORP_NAME2;
        DDCOCINM.CORP_NAME3 = DDRINF.CORP_NAME3;
        DDCOCINM.CORP_NAME4 = DDRINF.CORP_NAME4;
        DDCOCINM.CORP_NAME5 = DDRINF.CORP_NAME5;
        DDCOCINM.ADMIN_ORGNAME = DDRINF.ADMIN_ORGNAME;
        DDCOCINM.ADMIN_ORGCODE = DDRINF.ADMIN_ORGCODE;
        DDCOCINM.ADMIN_NO = DDRINF.ADMIN_NO;
        DDCOCINM.ADMIN_CORP_FLG = DDRINF.ADMIN_CORP_FLG;
        DDCOCINM.ADMIN_NAME = DDRINF.ADMIN_NAME;
        DDCOCINM.ADMIN_IDTYPE = DDRINF.ADMIN_IDTYPE;
        DDCOCINM.ADMIN_IDNO = DDRINF.ADMIN_IDNO;
        DDCOCINM.ADMIN_DATE = DDRINF.ADMIN_DATE;
        DDCOCINM.STAT_CODE = DDRINF.STAT_CODE;
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_NO);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_CORP_FLG);
        CEP.TRC(SCCGWA, DDCOCINM.ADMIN_NAME);
        DDCOCINM.AUTH_CNM1 = DDRINF.AUTH_CNM1;
        DDCOCINM.AUTH_TYP1 = DDRINF.AUTH_TYP1;
        DDCOCINM.AUTH_NO1 = DDRINF.AUTH_NO1;
        DDCOCINM.AUTH_TEL1 = DDRINF.AUTH_TEL_NO1;
        DDCOCINM.AUTH_CNM2 = DDRINF.AUTH_CNM2;
        DDCOCINM.AUTH_TYP2 = DDRINF.AUTH_TYP2;
        DDCOCINM.AUTH_NO2 = DDRINF.AUTH_NO2;
        DDCOCINM.AUTH_TEL2 = DDRINF.AUTH_TEL_NO2;
        DDCOCINM.AUTH_CNM3 = DDRINF.AUTH_CNM3;
        DDCOCINM.AUTH_TYP3 = DDRINF.AUTH_TYP3;
        DDCOCINM.AUTH_NO3 = DDRINF.AUTH_NO3;
        DDCOCINM.AUTH_TEL3 = DDRINF.AUTH_TEL_NO3;
        DDCOCINM.VER_TYPE1 = DDRINF.LAMT_VER_TYPE1;
        DDCOCINM.VER_NAME1 = DDRINF.LAMT_VER_NAME1;
        CEP.TRC(SCCGWA, DDCOCINM.VER_NAME1);
        DDCOCINM.VER_POS1 = DDRINF.LAMT_VER_POS1;
        DDCOCINM.VER_TEL1 = DDRINF.LAMT_VER_TEL1;
        DDCOCINM.VER_CELL1 = DDRINF.LAMT_VER_CELL1;
        DDCOCINM.VER_TYPE2 = DDRINF.LAMT_VER_TYPE2;
        DDCOCINM.VER_NAME2 = DDRINF.LAMT_VER_NAME2;
        DDCOCINM.VER_POS2 = DDRINF.LAMT_VER_POS2;
        DDCOCINM.VER_TEL2 = DDRINF.LAMT_VER_TEL2;
        DDCOCINM.VER_CELL2 = DDRINF.LAMT_VER_CELL2;
        DDCOCINM.VER_TYPE3 = DDRINF.LAMT_VER_TYPE3;
        DDCOCINM.VER_NAME3 = DDRINF.LAMT_VER_NAME3;
        DDCOCINM.VER_POS3 = DDRINF.LAMT_VER_POS3;
        DDCOCINM.VER_TEL3 = DDRINF.LAMT_VER_TEL3;
        DDCOCINM.VER_CELL3 = DDRINF.LAMT_VER_CELL3;
        DDCOCINM.FIN_STFNAME1 = DDRINF.FIN_STFNAME1;
        DDCOCINM.FIN_STFTEL1 = DDRINF.FIN_STFTEL1;
        DDCOCINM.FIN_STFCELL1 = DDRINF.FIN_STFCELL1;
        DDCOCINM.FIN_STFNAME2 = DDRINF.FIN_STFNAME2;
        DDCOCINM.FIN_STFTEL2 = DDRINF.FIN_STFTEL2;
        DDCOCINM.FIN_STFCELL2 = DDRINF.FIN_STFCELL2;
        DDCOCINM.FIN_STFNAME3 = DDRINF.FIN_STFNAME3;
        DDCOCINM.FIN_STFTEL3 = DDRINF.FIN_STFTEL3;
        DDCOCINM.FIN_STFCELL3 = DDRINF.FIN_STFCELL3;
        DDCOCINM.CHK_NAME1 = DDRINF.AMT_CHK_NAME1;
        DDCOCINM.CHK_CELL1 = DDRINF.AMT_CHK_CELL1;
        DDCOCINM.CHK_NAME2 = DDRINF.AMT_CHK_NAME2;
        DDCOCINM.CHK_CELL2 = DDRINF.AMT_CHK_CELL2;
        DDCOCINM.CHK_NAME3 = DDRINF.AMT_CHK_NAME3;
        DDCOCINM.CHK_CELL3 = DDRINF.AMT_CHK_CELL3;
        DDCOCINM.CHK_NAME4 = DDRINF.AMT_CHK_NAME4;
        DDCOCINM.CHK_CELL4 = DDRINF.AMT_CHK_CELL4;
        DDCOCINM.AMT_TYP = DDRINF.AMT_TYPE;
        DDCOCINM.TXN_TYP = DDRINF.TXN_TYPE;
    }
    public void R000_TRANS_MST_DATA_OUTPUT() throws IOException,SQLException,Exception {
        DDCSCINM.OUTPUT_DATA.PROD_CODE = CICQACRI.O_DATA.O_PROD_CD;
        if (CICQACRI.O_DATA.O_FRM_APP.equalsIgnoreCase("DD")) {
            DDCSCINM.OUTPUT_DATA.AC_STS = DDRMST.AC_STS;
            DDCSCINM.OUTPUT_DATA.AC_STS_WORD = DDRMST.AC_STS_WORD;
            DDCSCINM.OUTPUT_DATA.OPEN_DATE = DDRMST.OPEN_DATE;
            DDCSCINM.OUTPUT_DATA.EFF_DATE = DDRMST.EFF_DATE;
            DDCSCINM.OUTPUT_DATA.EXP_DATE = DDRMST.EXP_DATE;
            DDCSCINM.OUTPUT_DATA.OPEN_DP = DDRMST.OPEN_DP;
            DDCSCINM.OUTPUT_DATA.OPEN_TLR = DDRMST.OPEN_TLR;
            DDCSCINM.OUTPUT_DATA.OWNER_BK = DDRMST.OWNER_BK;
            DDCSCINM.OUTPUT_DATA.OWNER_BR = DDRMST.OWNER_BR;
            DDCSCINM.OUTPUT_DATA.OWNER_BRDP = DDRMST.OWNER_BRDP;
            DDCSCINM.OUTPUT_DATA.CLOSE_AC_STS = DDRMST.CLOSE_AC_STS;
            DDCSCINM.OUTPUT_DATA.LAST_TLR = DDRMST.LAST_TLR;
            DDCSCINM.OUTPUT_DATA.LAST_DATE = DDRMST.LAST_DATE;
            DDCSCINM.OUTPUT_DATA.LAST_FN_DATE = DDRMST.LAST_FN_DATE;
            DDCSCINM.OUTPUT_DATA.CARD_FLG = DDRMST.CARD_FLG;
            DDCSCINM.OUTPUT_DATA.FRG_TYPE = DDRMST.FRG_TYPE;
            DDCSCINM.OUTPUT_DATA.FRG_CODE = DDRMST.FRG_CODE;
            DDCSCINM.OUTPUT_DATA.FRG_OPEN_NO = DDRMST.FRG_OPEN_NO;
            DDCSCINM.OUTPUT_DATA.CROS_DR_FLG = DDRMST.CROS_DR_FLG;
            DDCSCINM.OUTPUT_DATA.CROS_CR_FLG = DDRMST.CROS_CR_FLG;
            CEP.TRC(SCCGWA, DDRMST.CROS_DR_FLG);
            CEP.TRC(SCCGWA, DDRMST.CROS_CR_FLG);
            DDCSCINM.OUTPUT_DATA.SPC_KIND = DDRMST.SPC_KIND.charAt(0);
            DDCSCINM.OUTPUT_DATA.M_CCY_IND = DDCOCINM.M_CCY_IND;
            DDCSCINM.OUTPUT_DATA.AC_PP = DDCOCINM.AC_PP;
            DDCSCINM.OUTPUT_DATA.AC_REMARKS = DDCOCINM.AC_REMARKS;
            DDCSCINM.OUTPUT_DATA.CHEQUE_IND = DDCOCINM.CHEQUE_IND;
            DDCSCINM.OUTPUT_DATA.OVR_IND = DDCOCINM.OVR_IND;
            DDCSCINM.OUTPUT_DATA.TMP_IND = DDCOCINM.TMP_IND;
            DDCSCINM.OUTPUT_DATA.AC_TYP = DDRMST.AC_TYPE;
            DDCSCINM.OUTPUT_DATA.AC_PURP = DDRMST.AC_PURP;
            DDCSCINM.OUTPUT_DATA.CASH_FLG = DDRMST.CASH_FLG;
            DDCSCINM.OUTPUT_DATA.APP_DT = DDRMST.PBC_APPR_DATE;
            DDCSCINM.OUTPUT_DATA.GEN_RSN = DDRMST.GEN_RSN;
            DDCSCINM.OUTPUT_DATA.FRG_IND = DDRMST.FRG_IND;
            CEP.TRC(SCCGWA, DDRMST.FRG_IND);
            if (DDRMST.AC_STS == 'C') {
                DDCSCINM.OUTPUT_DATA.CLS_TLR = DDRMST.LAST_TLR;
            }
            DDCSCINM.OUTPUT_DATA.YCHK_FLG = 'Y';
            if (DDRMST.AC_STS_WORD == null) DDRMST.AC_STS_WORD = "";
            JIBS_tmp_int = DDRMST.AC_STS_WORD.length();
            for (int i=0;i<99-JIBS_tmp_int;i++) DDRMST.AC_STS_WORD += " ";
            if (DDRMST.AC_STS_WORD.substring(14 - 1, 14 + 1 - 1).equalsIgnoreCase("1")) {
                DDCSCINM.OUTPUT_DATA.YCHK_FLG = 'N';
            }
            if (DDRMST.AC_STS_WORD == null) DDRMST.AC_STS_WORD = "";
            JIBS_tmp_int = DDRMST.AC_STS_WORD.length();
            for (int i=0;i<99-JIBS_tmp_int;i++) DDRMST.AC_STS_WORD += " ";
            if (DDRMST.AC_STS_WORD.substring(13 - 1, 13 + 1 - 1).equalsIgnoreCase("1")) {
                DDCSCINM.OUTPUT_DATA.YCHK_FLG = 'W';
            }
            DDCSCINM.OUTPUT_DATA.SIGN_OPT = 'N';
            if (DDRMST.AC_STS_WORD == null) DDRMST.AC_STS_WORD = "";
            JIBS_tmp_int = DDRMST.AC_STS_WORD.length();
            for (int i=0;i<99-JIBS_tmp_int;i++) DDRMST.AC_STS_WORD += " ";
            if (DDRMST.AC_STS_WORD.substring(98 - 1, 98 + 1 - 1).equalsIgnoreCase("1")) {
                DDCSCINM.OUTPUT_DATA.SIGN_OPT = 'Y';
                DDCSCINM.OUTPUT_DATA.SIGN_TYP = "98";
            }
            if (DDRMST.AC_STS_WORD == null) DDRMST.AC_STS_WORD = "";
            JIBS_tmp_int = DDRMST.AC_STS_WORD.length();
            for (int i=0;i<99-JIBS_tmp_int;i++) DDRMST.AC_STS_WORD += " ";
            if (DDRMST.AC_STS_WORD.substring(99 - 1, 99 + 1 - 1).equalsIgnoreCase("1")) {
                DDCSCINM.OUTPUT_DATA.SIGN_OPT = 'Y';
                DDCSCINM.OUTPUT_DATA.SIGN_TYP = "99";
            }
        }
        DDCSCINM.OUTPUT_DATA.CUS_TYP = CICCUST.O_DATA.O_CI_TYP;
        DDCSCINM.OUTPUT_DATA.DPPST_PERIOD1 = DDVMPRD.VAL.DEP_POST_PERIOD1;
        DDCSCINM.OUTPUT_DATA.DPPST_DATE1 = DDVMPRD.VAL.DEP_POST_DATE1;
        DDCSCINM.OUTPUT_DATA.ODPST_PERIOD1 = DDVMPRD.VAL.OD_POST_PERIOD1;
        DDCSCINM.OUTPUT_DATA.ODPST_DATE1 = DDVMPRD.VAL.OD_POST_DATE1;
        DDCSCINM.OUTPUT_DATA.DPPST_PERIOD2 = DDVMPRD.VAL.DEP_POST_PERIOD2;
        DDCSCINM.OUTPUT_DATA.DPPST_DATE2 = DDVMPRD.VAL.DEP_POST_DATE2;
        DDCSCINM.OUTPUT_DATA.ODPST_PERIOD2 = DDVMPRD.VAL.OD_POST_PERIOD2;
        DDCSCINM.OUTPUT_DATA.ODPST_DATE2 = DDVMPRD.VAL.OD_POST_DATE2;
        DDCSCINM.OUTPUT_DATA.PARM_CODE = DDVMPRD.KEY.PARM_CODE;
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.AC_TYP);
        DDCSCINM.OUTPUT_DATA.AC_OIC_NO = DDRMST.AC_OIC_NO;
        DDCSCINM.OUTPUT_DATA.RES_CENT = DDRMST.AC_OIC_CODE;
        DDCSCINM.OUTPUT_DATA.SUB_DP = DDRMST.SUB_DP;
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.AC_OIC_NO);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.RES_CENT);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.SUB_DP);
    }
    public void R000_TRANS_INF_DATA_OUTPUT() throws IOException,SQLException,Exception {
        DDCSCINM.OUTPUT_DATA.BASE_AC = DDRINF.BASE_AC;
        DDCSCINM.OUTPUT_DATA.BASE_NO = DDRINF.BASE_NO;
        DDCSCINM.OUTPUT_DATA.BASE_AC_AREA = DDRINF.BASE_AC_AREA;
        DDCSCINM.OUTPUT_DATA.BASE_AC_BKNO = DDRINF.BASE_AC_BKNO;
        DDCSCINM.OUTPUT_DATA.BASE_AC_OPDT = DDRINF.BASE_AC_OPDT;
        DDCSCINM.OUTPUT_DATA.BASE_AC_BK = DDRINF.BASE_AC_BK;
        DDCSCINM.OUTPUT_DATA.LICENSE_TYPE1 = DDRINF.LICENSE_TYPE1;
        DDCSCINM.OUTPUT_DATA.LICENSE_NO1 = DDRINF.LICENSE_NO1;
        DDCSCINM.OUTPUT_DATA.LICENSE_DATE1 = DDRINF.LICENSE_DATE1;
        DDCSCINM.OUTPUT_DATA.LICENSE_TYPE2 = DDRINF.LICENSE_TYPE2;
        DDCSCINM.OUTPUT_DATA.LICENSE_NO2 = DDRINF.LICENSE_NO2;
        DDCSCINM.OUTPUT_DATA.LICENSE_DATE2 = DDRINF.LICENSE_DATE2;
        DDCSCINM.OUTPUT_DATA.CORP_NAME1 = DDRINF.CORP_NAME1;
        DDCSCINM.OUTPUT_DATA.CORP_NAME2 = DDRINF.CORP_NAME2;
        DDCSCINM.OUTPUT_DATA.CORP_NAME3 = DDRINF.CORP_NAME3;
        DDCSCINM.OUTPUT_DATA.CORP_NAME4 = DDRINF.CORP_NAME4;
        DDCSCINM.OUTPUT_DATA.CORP_NAME5 = DDRINF.CORP_NAME5;
        DDCSCINM.OUTPUT_DATA.ADMIN_ORGNAME = DDRINF.ADMIN_ORGNAME;
        DDCSCINM.OUTPUT_DATA.ADMIN_ORGCODE = DDRINF.ADMIN_ORGCODE;
        DDCSCINM.OUTPUT_DATA.ADMIN_NO = DDRINF.ADMIN_NO;
        DDCSCINM.OUTPUT_DATA.ADMIN_CORP_FLG = DDRINF.ADMIN_CORP_FLG;
        DDCSCINM.OUTPUT_DATA.ADMIN_NAME = DDRINF.ADMIN_NAME;
        DDCSCINM.OUTPUT_DATA.ADMIN_IDTYPE = DDRINF.ADMIN_IDTYPE;
        DDCSCINM.OUTPUT_DATA.ADMIN_IDNO = DDRINF.ADMIN_IDNO;
        DDCSCINM.OUTPUT_DATA.ADMIN_DATE = DDRINF.ADMIN_DATE;
        DDCSCINM.OUTPUT_DATA.STAT_CODE = DDRINF.STAT_CODE;
        DDCSCINM.OUTPUT_DATA.AUTH_CNM1 = DDRINF.AUTH_CNM1;
        DDCSCINM.OUTPUT_DATA.AUTH_TYP1 = DDRINF.AUTH_TYP1;
        DDCSCINM.OUTPUT_DATA.AUTH_NO1 = DDRINF.AUTH_NO1;
        DDCSCINM.OUTPUT_DATA.AUTH_TEL1 = DDRINF.AUTH_TEL_NO1;
        DDCSCINM.OUTPUT_DATA.AUTH_CNM2 = DDRINF.AUTH_CNM2;
        DDCSCINM.OUTPUT_DATA.AUTH_TYP2 = DDRINF.AUTH_TYP2;
        DDCSCINM.OUTPUT_DATA.AUTH_NO2 = DDRINF.AUTH_NO2;
        DDCSCINM.OUTPUT_DATA.AUTH_TEL2 = DDRINF.AUTH_TEL_NO2;
        DDCSCINM.OUTPUT_DATA.AUTH_CNM3 = DDRINF.AUTH_CNM3;
        DDCSCINM.OUTPUT_DATA.AUTH_TYP3 = DDRINF.AUTH_TYP3;
        DDCSCINM.OUTPUT_DATA.AUTH_NO3 = DDRINF.AUTH_NO3;
        DDCSCINM.OUTPUT_DATA.AUTH_TEL3 = DDRINF.AUTH_TEL_NO3;
        DDCSCINM.OUTPUT_DATA.VER_TYPE1 = DDRINF.LAMT_VER_TYPE1;
        DDCSCINM.OUTPUT_DATA.VER_NAME1 = DDRINF.LAMT_VER_NAME1;
        DDCSCINM.OUTPUT_DATA.VER_POS1 = DDRINF.LAMT_VER_POS1;
        DDCSCINM.OUTPUT_DATA.VER_TEL1 = DDRINF.LAMT_VER_TEL1;
        DDCSCINM.OUTPUT_DATA.VER_CELL1 = DDRINF.LAMT_VER_CELL1;
        DDCSCINM.OUTPUT_DATA.VER_TYPE2 = DDRINF.LAMT_VER_TYPE2;
        DDCSCINM.OUTPUT_DATA.VER_NAME2 = DDRINF.LAMT_VER_NAME2;
        DDCSCINM.OUTPUT_DATA.VER_POS2 = DDRINF.LAMT_VER_POS2;
        DDCSCINM.OUTPUT_DATA.VER_TEL2 = DDRINF.LAMT_VER_TEL2;
        DDCSCINM.OUTPUT_DATA.VER_CELL2 = DDRINF.LAMT_VER_CELL2;
        DDCOCINM.VER_TYPE3 = DDRINF.LAMT_VER_TYPE3;
        DDCOCINM.VER_NAME3 = DDRINF.LAMT_VER_NAME3;
        DDCOCINM.VER_POS3 = DDRINF.LAMT_VER_POS3;
        DDCOCINM.VER_TEL3 = DDRINF.LAMT_VER_TEL3;
        DDCOCINM.VER_CELL3 = DDRINF.LAMT_VER_CELL3;
        DDCSCINM.OUTPUT_DATA.FIN_STFNAME1 = DDRINF.FIN_STFNAME1;
        DDCSCINM.OUTPUT_DATA.FIN_STFTEL1 = DDRINF.FIN_STFTEL1;
        DDCSCINM.OUTPUT_DATA.FIN_STFCELL1 = DDRINF.FIN_STFCELL1;
        DDCSCINM.OUTPUT_DATA.FIN_STFNAME2 = DDRINF.FIN_STFNAME2;
        DDCSCINM.OUTPUT_DATA.FIN_STFTEL2 = DDRINF.FIN_STFTEL2;
        DDCSCINM.OUTPUT_DATA.FIN_STFCELL2 = DDRINF.FIN_STFCELL2;
        DDCSCINM.OUTPUT_DATA.FIN_STFNAME3 = DDRINF.FIN_STFNAME3;
        DDCSCINM.OUTPUT_DATA.FIN_STFTEL3 = DDRINF.FIN_STFTEL3;
        DDCSCINM.OUTPUT_DATA.FIN_STFCELL3 = DDRINF.FIN_STFCELL3;
        DDCSCINM.OUTPUT_DATA.CHK_NAME1 = DDRINF.AMT_CHK_NAME1;
        DDCSCINM.OUTPUT_DATA.CHK_CELL1 = DDRINF.AMT_CHK_CELL1;
        DDCSCINM.OUTPUT_DATA.CHK_NAME2 = DDRINF.AMT_CHK_NAME2;
        DDCSCINM.OUTPUT_DATA.CHK_CELL2 = DDRINF.AMT_CHK_CELL2;
        DDCSCINM.OUTPUT_DATA.CHK_NAME3 = DDRINF.AMT_CHK_NAME3;
        DDCSCINM.OUTPUT_DATA.CHK_CELL3 = DDRINF.AMT_CHK_CELL3;
        DDCSCINM.OUTPUT_DATA.CHK_NAME4 = DDRINF.AMT_CHK_NAME4;
        DDCSCINM.OUTPUT_DATA.CHK_CELL4 = DDRINF.AMT_CHK_CELL4;
        DDCSCINM.OUTPUT_DATA.AMT_TYPE = DDRINF.AMT_TYPE;
        DDCSCINM.OUTPUT_DATA.TXN_TYPE = DDRINF.TXN_TYPE;
    }
    public void S000_CALL_DDZIQPRD() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, CPN_I_INQ_DDPRD, DDCIQPRD);
        if (DDCIQPRD.RC.RC_CODE != 0) {
            WS_ERR_MSG = IBS.CLS2CPY(SCCGWA, DDCIQPRD.RC);
            S000_ERR_MSG_PROC();
            if (pgmRtn) return;
        }
    }
    public void S000_CALL_DDZIPSBK() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "DD-I-PSBK-PROC", DDCIPSBK, true);
    }
    public void T000_READ_MST_PROC() throws IOException,SQLException,Exception {
        DDTMST_RD = new DBParm();
        DDTMST_RD.TableName = "DDTMST";
        IBS.READ(SCCGWA, DDRMST, DDTMST_RD);
        if (SCCGWA.COMM_AREA.DBIO_FLG == '1') {
            WS_ERR_MSG = DDCMSG_ERROR_MSG.DD_MST1_REC_NOTFND;
            S000_ERR_MSG_PROC();
            if (pgmRtn) return;
        }
    }
    public void T000_READ_INF_PROC() throws IOException,SQLException,Exception {
        DDTINF_RD = new DBParm();
        DDTINF_RD.TableName = "DDTINF";
        IBS.READ(SCCGWA, DDRINF, DDTINF_RD);
    }
    public void T000_READ_CCY_PROC1() throws IOException,SQLException,Exception {
        DDTCCY_RD = new DBParm();
        DDTCCY_RD.TableName = "DDTCCY";
        DDTCCY_RD.where = "AC = :DDRCCY.KEY.AC "
            + "AND CCY = :DDRCCY.CCY "
            + "AND CCY_TYPE = :DDRCCY.CCY_TYPE";
        IBS.READ(SCCGWA, DDRCCY, this, DDTCCY_RD);
    }
    public void T000_READ_CCY_PROC() throws IOException,SQLException,Exception {
        IBS.READNEXT(SCCGWA, DDRCCY, this, DDTCCY_BR);
        if (SCCGWA.COMM_AREA.DBIO_FLG == '0') {
            WS_STOP_FLG = '"N"';
            DDCOCINM.CCY_COUNT = (short) (DDCOCINM.CCY_COUNT + 1);
            DDCSCINM.OUTPUT_DATA.CCY_COUNT = (short) (DDCSCINM.OUTPUT_DATA.CCY_COUNT + 1);
            if (DDCOCINM.CCY_COUNT <= 5) {
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY = DDRCCY.CCY;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].M_CCY = DDRCCY.CCY;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_CURR_BAL = DDRCCY.CURR_BAL;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_CURR_BAL = DDRCCY.CURR_BAL;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_CURR_BAL = DDRCCY.CURR_BAL + DDRCCY.CCAL_TOT_BAL;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_AVA_BAL = DDRCCY.CURR_BAL - DDRCCY.HOLD_BAL + DDRCCY.CCAL_TOT_BAL;
                if (DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_AVA_BAL < 0) {
                    DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_AVA_BAL = 0;
                }
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_AVA_BAL = DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_AVA_BAL;
                DDCOCINM.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_LAST_DAYEND_BAL = DDRCCY.LAST_DAYEND_BAL;
                IBS.init(SCCGWA, DDRPBBL);
                DDRPBBL.KEY.CCY = DDRCCY.CCY;
                DDRPBBL.KEY.CCY_TYPE = DDRCCY.CCY_TYPE;
                T000_READ_DDTPBBL();
                if (pgmRtn) return;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_STS = DDRCCY.STS;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_STS = DDRCCY.STS;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_TYPE = DDRCCY.CCY_TYPE;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_TYPE = DDRCCY.CCY_TYPE;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_CINT_FLG = DDRCCY.CINT_FLG;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_CINT_FLG = DDRCCY.CINT_FLG;
            }
        } else if (SCCGWA.COMM_AREA.DBIO_FLG == '1') {
            WS_STOP_FLG = '"Y"';
        } else {
        }
    }
    public void T000_STBR_DDTCCY() throws IOException,SQLException,Exception {
        DDTCCY_BR.rp = new DBParm();
        DDTCCY_BR.rp.TableName = "DDTCCY";
        DDTCCY_BR.rp.where = "CUS_AC = :DDRCCY.CUS_AC";
        DDTCCY_BR.rp.order = "CCY";
        IBS.STARTBR(SCCGWA, DDRCCY, this, DDTCCY_BR);
        if (SCCGWA.COMM_AREA.DBIO_FLG == '0') {
            WS_STOP_FLG = '"N"';
        } else if (SCCGWA.COMM_AREA.DBIO_FLG == '1') {
            WS_STOP_FLG = '"Y"';
        } else {
        }
    }
    public void T000_STBR_DDTCCY1() throws IOException,SQLException,Exception {
        DDTCCY_BR.rp = new DBParm();
        DDTCCY_BR.rp.TableName = "DDTCCY";
        DDTCCY_BR.rp.where = "CUS_AC = :DDRCCY.CUS_AC "
            + "AND CCY = :DDRCCY.CCY";
        IBS.STARTBR(SCCGWA, DDRCCY, this, DDTCCY_BR);
        if (SCCGWA.COMM_AREA.DBIO_FLG == '0') {
            WS_STOP_FLG = '"N"';
        } else if (SCCGWA.COMM_AREA.DBIO_FLG == '1') {
            WS_STOP_FLG = '"Y"';
        } else {
        }
    }
    public void T000_READNEXT_DDTCCY() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, "TEST002");
        IBS.READNEXT(SCCGWA, DDRCCY, this, DDTCCY_BR);
        if (SCCGWA.COMM_AREA.DBIO_FLG == '0') {
            CEP.TRC(SCCGWA, "TEST003");
            WS_STOP_FLG = '"N"';
            DDCOCINM.CCY_COUNT = (short) (DDCOCINM.CCY_COUNT + 1);
            DDCSCINM.OUTPUT_DATA.CCY_COUNT = (short) (DDCSCINM.OUTPUT_DATA.CCY_COUNT + 1);
            if (DDCOCINM.CCY_COUNT <= 5) {
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY = DDRCCY.CCY;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].M_CCY = DDRCCY.CCY;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_CURR_BAL = DDRCCY.CURR_BAL;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_CURR_BAL = DDRCCY.CURR_BAL + DDRCCY.CCAL_TOT_BAL;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_CURR_BAL = DDRCCY.CURR_BAL;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_CURR_BAL = DDRCCY.CURR_BAL + DDRCCY.CCAL_TOT_BAL;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_AVA_BAL = DDRCCY.CURR_BAL - DDRCCY.HOLD_BAL + DDRCCY.CCAL_TOT_BAL;
                if (DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_AVA_BAL < 0) {
                    DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_AVA_BAL = 0;
                }
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_AVA_BAL = DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_AVA_BAL;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_STS = DDRCCY.STS;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_TYPE = DDRCCY.CCY_TYPE;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_STS = DDRCCY.STS;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_TYPE = DDRCCY.CCY_TYPE;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_POST_AC = DDRCCY.POST_AC;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_POST_AC = DDRCCY.POST_AC;
                IBS.init(SCCGWA, DDRDREG);
                DDRDREG.KEY.AC = DDRCCY.KEY.AC;
                T000_READ_DDTDREG_PROC();
                if (pgmRtn) return;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_DORM_BAL = DDRDREG.BAL;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_DORM_BAL = DDRDREG.BAL;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_OWNER_BK = DDRCCY.OWNER_BK;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_OWNER_BK = DDRCCY.OWNER_BK;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_OWNER_BR = DDRCCY.OWNER_BR;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_OWNER_BR = DDRCCY.OWNER_BR;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_OWNER_BRDP = DDRCCY.OWNER_BRDP;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_OWNER_BRDP = DDRCCY.OWNER_BRDP;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_OPEN_DP = DDRCCY.OPEN_DP;
                DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_OPEN_DP = DDRCCY.OPEN_DP;
                DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_LAST_DAYEND_BAL = DDRCCY.LAST_DAYEND_BAL;
            }
        } else if (SCCGWA.COMM_AREA.DBIO_FLG == '1') {
            WS_STOP_FLG = '"Y"';
        } else {
        }
    }
    public void T000_READ_DDTCCY_PROC() throws IOException,SQLException,Exception {
        DDTCCY_RD = new DBParm();
        DDTCCY_RD.TableName = "DDTCCY";
        IBS.READ(SCCGWA, DDRCCY, DDTCCY_RD);
    }
    public void T000_ENDBR_DDTCCY() throws IOException,SQLException,Exception {
        IBS.ENDBR(SCCGWA, DDTCCY_BR);
    }
    public void T000_READ_DDTPBBL() throws IOException,SQLException,Exception {
        DDTPBBL_RD = new DBParm();
        DDTPBBL_RD.TableName = "DDTPBBL";
        DDTPBBL_RD.col = "CUS_AC,CCY,CCY_TYPE,PSBK_BAL";
        IBS.READ(SCCGWA, DDRPBBL, DDTPBBL_RD);
        if (SCCGWA.COMM_AREA.DBIO_FLG == '0') {
            DDCOCINM.CCY_INFO[DDCOCINM.CCY_COUNT-1].CCY_PSBK_BAL = DDRPBBL.PSBK_BAL;
            DDCSCINM.OUTPUT_DATA.CCY_INFO[DDCSCINM.OUTPUT_DATA.CCY_COUNT-1].CCY_PSBK_BAL = DDRPBBL.PSBK_BAL;
        }
    }
    public void T000_READ_DDTDREG_PROC() throws IOException,SQLException,Exception {
        DDTDREG_RD = new DBParm();
        DDTDREG_RD.TableName = "DDTDREG";
        DDTDREG_RD.col = "AC, BAL";
        DDTDREG_RD.where = "AC = :DDRDREG.KEY.AC";
        DDTDREG_RD.fst = true;
        DDTDREG_RD.order = "APP_DATE, JRNNO DESC";
        IBS.READ(SCCGWA, DDRDREG, this, DDTDREG_RD);
        if (SCCGWA.COMM_AREA.DBIO_FLG == '0') {
            WS_DORM_BAL = DDRDREG.BAL;
        }
        CEP.TRC(SCCGWA, DDRDREG.BAL);
    }
    public void T000_READ_DDTVCH_PROC() throws IOException,SQLException,Exception {
        DDTVCH_RD = new DBParm();
        DDTVCH_RD.TableName = "DDTVCH";
        DDTVCH_RD.where = "CUS_AC = :DDRVCH.KEY.CUS_AC";
        DDTVCH_RD.fst = true;
        IBS.READ(SCCGWA, DDRVCH, this, DDTVCH_RD);
        CEP.TRC(SCCGWA, SCCGWA.COMM_AREA.DBIO_FLG);
        if (SCCGWA.COMM_AREA.DBIO_FLG == '0') {
            WS_DDTVCH_FLG = 'Y';
        } else {
            WS_DDTVCH_FLG = 'N';
        }
    }
    public void T000_READ_DDTLOSS_PROC() throws IOException,SQLException,Exception {
        DDTLOSS_RD = new DBParm();
        DDTLOSS_RD.TableName = "DDTLOSS";
        DDTLOSS_RD.col = "LOS_NO,STS,CRT_DATE";
        DDTLOSS_RD.where = "LOS_NO = :DDRLOSS.KEY.LOS_NO";
        IBS.READ(SCCGWA, DDRLOSS, this, DDTLOSS_RD);
        CEP.TRC(SCCGWA, SCCGWA.COMM_AREA.DBIO_FLG);
    }
    public void S000_CALL_DCZUCINF() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "DC-U-CARD-INF", DCCUCINF);
        if (DCCUCINF.RC.RC_CODE != 0) {
            WS_ERR_MSG = IBS.CLS2CPY(SCCGWA, DCCUCINF.RC);
            S000_ERR_MSG_PROC();
            if (pgmRtn) return;
        }
    }
    public void S000_CALL_CIZCUST() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "CI-CISOCUST", CICCUST);
        if (CICCUST.RC.RC_CODE != 0) {
            WS_ERR_MSG = IBS.CLS2CPY(SCCGWA, CICCUST.RC);
            S000_ERR_MSG_PROC();
            if (pgmRtn) return;
        }
    }
    public void T000_STBR_DDTCCY_FIRST() throws IOException,SQLException,Exception {
        DDTCCY_RD = new DBParm();
        DDTCCY_RD.TableName = "DDTCCY";
        DDTCCY_RD.where = "CUS_AC = :DDRCCY.CUS_AC";
        DDTCCY_RD.fst = true;
        IBS.READ(SCCGWA, DDRCCY, this, DDTCCY_RD);
        CEP.TRC(SCCGWA, SCCGWA.COMM_AREA.DBIO_FLG);
    }
    public void T000_READ_STARTBR_DDTCCY() throws IOException,SQLException,Exception {
        DDTCCY_BR.rp = new DBParm();
        DDTCCY_BR.rp.TableName = "DDTCCY";
        DDTCCY_BR.rp.where = "CUS_AC = :DDRCCY.CUS_AC";
        IBS.STARTBR(SCCGWA, DDRCCY, this, DDTCCY_BR);
    }
    public void S000_CALL_CIZQACRI() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "CI-INQ-ACR-INF", CICQACRI);
        if (CICQACRI.RC.RC_CODE != 0) {
            CEP.ERR(SCCGWA, CICQACRI.RC);
        }
    }
    public void S000_CALL_CIZQACAC() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "CI-INQ-ACAC", CICQACAC);
    }
    public void S000_CALL_CIZACCU() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "CI-INQ-ACCU", CICACCU);
    }
    public void S000_CALL_DCZPACTY() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "DC-INQ-AC-INF", DCCPACTY);
        if (DCCPACTY.RC.RC_CODE != 0) {
            WS_ERR_MSG = IBS.CLS2CPY(SCCGWA, DCCPACTY.RC);
            S000_ERR_MSG_PROC();
            if (pgmRtn) return;
        }
    }
    public void S000_ERR_MSG_PROC() throws IOException,SQLException,Exception {
        CEP.ERR(SCCGWA, WS_ERR_MSG);
    }
    public void B_MPAG() throws IOException,SQLException,Exception {
    if (!SCCGWA.COMM_AREA.BSP_FLG.equalsIgnoreCase("BSP") && !SCCGWA.COMM_AREA.CHNL.equalsIgnoreCase("BAT")) { //FROM #IFDEF ONL
        JIBS_tmp_str[9] = "SCZMPAG";
        Class<?>clazz = Class.forName(JIBS_tmp_str[9].trim());
        Object obj = clazz.newInstance();
        Method m = clazz.getDeclaredMethod("MP",new Class[]{SCCGWA.getClass(), SCCMPAG.getClass()});
        m.invoke(obj, SCCGWA, SCCMPAG);
        if (SCCGWA.COMM_AREA.EXCP_FLG == 'Y') {
            Z_RET();
            if (pgmRtn) return;
        }
    } else { //FROM #ELSE
    } //FROM #ENDIF
    }
    public void Z_RET() throws IOException,SQLException,Exception {
        pgmRtn = true;
        return;
    }
    public void B_DB_EXCP() throws IOException,SQLException,Exception {
        throw new SQLException(SCCGWA.e);
    }
}
