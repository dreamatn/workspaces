package com.hisun.DD;

import com.hisun.DC.*;
import com.hisun.SC.*;
import com.hisun.BP.*;

import java.io.IOException;
import java.sql.SQLException;

public class DDZSLNPY {
    DDZSLNPY_WS_OUTPUT_DATA WS_OUTPUT_DATA;
    DBParm DDTLPAY_RD;
    brParm DDTLPAY_BR = new brParm();
    String HIS_COPYBOOK_NAME = "DDCSLNPY";
    String HIS_TX_CD = "0116041";
    String HIS_TX_CODE = "0116042";
    String FMT_CODE = "DD342";
    String FMT_INQ_CODE = "DD642";
    String HIS_REMARKS = "MANTAIN AC-STS-WORD";
    DDZSLNPY_WS_VARIABLES WS_VARIABLES = new DDZSLNPY_WS_VARIABLES();
    DDZSLNPY_WS_OUPUT_DATA WS_OUPUT_DATA = new DDZSLNPY_WS_OUPUT_DATA();
    DDCMSG_ERROR_MSG ERROR_MSG = new DDCMSG_ERROR_MSG();
    DCCMSG_ERROR_MSG ERROR_MSG = new DCCMSG_ERROR_MSG();
    SCCEXCP SCCEXCP = new SCCEXCP();
    SCCFMT SCCFMT = new SCCFMT();
    SCCCALL SCCCALL = new SCCCALL();
    SCCMSG SCCMSG = new SCCMSG();
    DDRLPAY DDRLPAY = new DDRLPAY();
    BPCPFHIS BPCPFHIS = new BPCPFHIS();
    DDCUUPAY DDCUUPAY = new DDCUUPAY();
    SCCCKDT SCCCKDT = new SCCCKDT();
    BPCPNHIS BPCPNHIS = new BPCPNHIS();
    SCCCLDT SCCCLDT = new SCCCLDT();
    SCCGWA SCCGWA;
    SCCGSCA_SC_AREA SC_AREA;
    SCCGBPA_BP_AREA BP_AREA;
    BPCPQBNK_DATA_INFO DATA_INFO;
    DDCSMFLG DDCSMFLG;
    DDCSLNPY DDCSLNPY;
    public void MP(SCCGWA SCCGWA, DDCSLNPY DDCSLNPY) throws IOException,SQLException,Exception {
        this.SCCGWA = SCCGWA;
        this.DDCSLNPY = DDCSLNPY;
        CEP.TRC(SCCGWA);
        A000_INIT_PROC();
        B000_MAIN_PROC();
        CEP.TRC(SCCGWA, "DDZSLNPY return!");
        Z_RET();
    }
    public void A000_INIT_PROC() throws IOException,SQLException,Exception {
        BP_AREA = (SCCGBPA_BP_AREA) SCCGWA.BP_AREA_PTR;
        SC_AREA = (SCCGSCA_SC_AREA) SCCGWA.SC_AREA_PTR;
        WS_VARIABLES.MOD_FLG = 'N';
        IBS.init(SCCGWA, WS_VARIABLES);
    }
    public void B000_MAIN_PROC() throws IOException,SQLException,Exception {
        B010_CHECK_INPUT_DATA();
        CEP.TRC(SCCGWA, DDCSLNPY.FUNC);
        CEP.TRC(SCCGWA, DDCSLNPY.LNCNTR_NO);
        CEP.TRC(SCCGWA, DDCSLNPY.LNTX_SEQ);
        CEP.TRC(SCCGWA, DDCSLNPY.INNER_FLG);
        CEP.TRC(SCCGWA, DDCSLNPY.LNCNTR_FLG);
        CEP.TRC(SCCGWA, DDCSLNPY.NUM);
        for (WS_VARIABLES.CNT = 1; ((DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].LMTX_SEQ != 0) 
            && (WS_VARIABLES.CNT <= DDCSLNPY.NUM)); WS_VARIABLES.CNT += 1) {
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].LMTX_SEQ);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].DD_AC);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].PAY_DT);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].ACMT_DT);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].MT_DT);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].LN_AC);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].OTH_SMR);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].LOC_OAC);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].OTH_NAME);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].OTH_BK);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].CCY);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].CCY_TYP);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].ACMT_AMT);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].CHNL_TR);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].PROL_NO);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].SMR);
            CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].STS);
            IBS.init(SCCGWA, WS_VARIABLES.WS_LNPY_INF);
            WS_VARIABLES.WS_LNPY_INF.LNCNTR_NO = DDCSLNPY.LNCNTR_NO;
            WS_VARIABLES.WS_LNPY_INF.LNTX_SEQ = DDCSLNPY.LNTX_SEQ;
            WS_VARIABLES.WS_LNPY_INF.LNPY_INNER_FLG = DDCSLNPY.INNER_FLG;
            WS_VARIABLES.WS_LNPY_INF.LNPY_LNCNTR_FLG = DDCSLNPY.LNCNTR_FLG;
            WS_VARIABLES.WS_LNPY_INF.LNPY_NUM = DDCSLNPY.NUM;
            WS_VARIABLES.WS_LNPY_INF.LMTX_SEQ = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].LMTX_SEQ;
            WS_VARIABLES.WS_LNPY_INF.DD_AC = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].DD_AC;
            WS_VARIABLES.WS_LNPY_INF.PAY_DT = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].PAY_DT;
            WS_VARIABLES.WS_LNPY_INF.ACMT_DT = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].ACMT_DT;
            WS_VARIABLES.WS_LNPY_INF.MT_DT = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].MT_DT;
            WS_VARIABLES.WS_LNPY_INF.LN_AC = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].LN_AC;
            WS_VARIABLES.WS_LNPY_INF.OTH_SMR = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].OTH_SMR;
            WS_VARIABLES.WS_LNPY_INF.LOC_OAC = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].LOC_OAC;
            WS_VARIABLES.WS_LNPY_INF.OTH_NAME = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].OTH_NAME;
            WS_VARIABLES.WS_LNPY_INF.OTH_BK = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].OTH_BK;
            WS_VARIABLES.WS_LNPY_INF.CCY = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].CCY;
            WS_VARIABLES.WS_LNPY_INF.CCY_TYP = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].CCY_TYP;
            WS_VARIABLES.WS_LNPY_INF.ACMT_AMT = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].ACMT_AMT;
            WS_VARIABLES.WS_LNPY_INF.LN_AMT = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].LN_AMT;
            WS_VARIABLES.WS_LNPY_INF.CHNL_TR = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].CHNL_TR;
            WS_VARIABLES.WS_LNPY_INF.PROL_NO = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].PROL_NO;
            WS_VARIABLES.WS_LNPY_INF.SMR = DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].SMR;
            if (DDCSLNPY.FUNC == '1' 
                || DDCSLNPY.FUNC == '2') {
                if (!DDCSLNPY.ITEM_DATA[1-1].DD_AC.equalsIgnoreCase(DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].DD_AC) 
                    && DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].DD_AC.trim().length() > 0) {
                    WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_AC_SAME_M_INPUT;
                    S000_ERR_MSG_PROC();
                }
                if (!DDCSLNPY.ITEM_DATA[1-1].LN_AC.equalsIgnoreCase(DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].LN_AC) 
                    && DDCSLNPY.ITEM_DATA[WS_VARIABLES.CNT-1].LN_AC.trim().length() > 0) {
                    WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_LN_AC_SAME_ERROR;
                    S000_ERR_MSG_PROC();
                }
            }
            if (DDCSLNPY.FUNC == '1') {
                B011_CHECK_INPUT_DATA();
                B080_ADD_LPAY_PROC();
            } else if (DDCSLNPY.FUNC == '2') {
                B012_CHECK_INPUT_DATA();
                B080_MOD_LPAY_PROC();
            } else if (DDCSLNPY.FUNC == '3'
                || DDCSLNPY.FUNC == '5'
                || DDCSLNPY.FUNC == '6'
                || DDCSLNPY.FUNC == '7') {
            } else {
                IBS.init(SCCGWA, SCCEXCP);
                SCCEXCP.MSG_TEXT.KEY_OR_OTHER = "INVALID FUNC(" + DDCSLNPY.FUNC + ")";
                CEP.EXCP(SCCGWA, SCCEXCP.MSG_TEXT.KEY_OR_OTHER);
            }
            if (DDCSLNPY.FUNC == '1' 
                || DDCSLNPY.FUNC == '2') {
                B080_OUTPUT_DATA_PROC();
            }
        }
        if (DDCSLNPY.FUNC == '3') {
            B020_CHECK_INPUT_DATA();
        }
        if (DDCSLNPY.FUNC == '5') {
            B080_INQ_DATA_PROC();
        }
        if ((DDCSLNPY.FUNC == '6' 
            || DDCSLNPY.FUNC == '7')) {
            B080_OTHER_DATA_PROC();
        }
        if (SCCGWA.COMM_AREA.JRN_NO != 0 
            && DDCSLNPY.FUNC != '5') {
            B170_NFIN_TX_HIS_PROC();
        }
    }
    public void B010_CHECK_INPUT_DATA() throws IOException,SQLException,Exception {
        if ((DDCSLNPY.FUNC != '1' 
            && DDCSLNPY.FUNC != '2' 
            && DDCSLNPY.FUNC != '3' 
            && DDCSLNPY.FUNC != '5' 
            && DDCSLNPY.FUNC != '6' 
            && DDCSLNPY.FUNC != '7')) {
            WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_FUNC_M_ERORR;
            S000_ERR_MSG_PROC();
        }
        if ((DDCSLNPY.FUNC == '1' 
            || DDCSLNPY.FUNC == '2') 
            && (DDCSLNPY.NUM == 0 
            || DDCSLNPY.NUM > 8)) {
            WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_NUM_M_INVLID;
            S000_ERR_MSG_PROC();
        }
        if (DDCSLNPY.FUNC != '1') {
            DDCSLNPY.LNCNTR_FLG = 'N';
        }
        WS_VARIABLES.WS_COND_FLAG.DEL_REC_FLG = 'N';
    }
    public void B020_CHECK_INPUT_DATA() throws IOException,SQLException,Exception {
        if (DDCSLNPY.ITEM_DATA[1-1].LN_AC.trim().length() == 0) {
            if (DDCSLNPY.LNCNTR_NO.trim().length() == 0) {
                WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_CNTR_NO_M_INPUT;
                S000_ERR_MSG_PROC();
            }
            if (DDCSLNPY.LNTX_SEQ == 0) {
                WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_LNTX_SEQ_M_INPUT;
                S000_ERR_MSG_PROC();
            }
        }
        IBS.init(SCCGWA, DDRLPAY);
        DDRLPAY.KEY.LNCNTR_NO = DDCSLNPY.LNCNTR_NO;
        DDRLPAY.KEY.LNTX_SEQ = DDCSLNPY.LNTX_SEQ;
        DDRLPAY.DD_AC = DDCSLNPY.ITEM_DATA[1-1].DD_AC;
        CEP.TRC(SCCGWA, DDRLPAY.KEY.LNCNTR_NO);
        CEP.TRC(SCCGWA, DDRLPAY.KEY.LNTX_SEQ);
        T000_STARTBR_DDTLPAY();
        T000_READNEXT_DDTLPAY();
        while (WS_VARIABLES.WS_COND_FLAG.LPAY_FLG != 'N') {
            B030_GET_INF();
            if (WS_VARIABLES.WS_DDTLPAY_INF.H_DD_AC.trim().length() > 0) {
                WS_VARIABLES.AC_NO1 = WS_VARIABLES.WS_DDTLPAY_INF.H_DD_AC;
            }
            DDCSLNPY.LNCNTR_FLG = 'Y';
            B080_CAN_LPAY_PROC();
            T000_READNEXT_DDTLPAY();
        }
    }
    public void B011_CHECK_INPUT_DATA() throws IOException,SQLException,Exception {
        if (WS_VARIABLES.WS_LNPY_INF.LNCNTR_NO.trim().length() == 0) {
            WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_CNTR_NO_M_INPUT;
            S000_ERR_MSG_PROC();
        }
        if (WS_VARIABLES.WS_LNPY_INF.LNTX_SEQ == 0) {
            WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_LNTX_SEQ_M_INPUT;
            S000_ERR_MSG_PROC();
        }
        if (WS_VARIABLES.WS_LNPY_INF.LMTX_SEQ == 0) {
            WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_LMTX_SEQ_INPUT;
            S000_ERR_MSG_PROC();
        }
        if (WS_VARIABLES.WS_LNPY_INF.ACMT_AMT == 0) {
            WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_AMT_M_INPUT;
            S000_ERR_MSG_PROC();
        }
        if (WS_VARIABLES.WS_LNPY_INF.CCY_TYP == ' ' 
            && WS_VARIABLES.WS_LNPY_INF.CCY.equalsIgnoreCase("156")) {
            WS_VARIABLES.WS_LNPY_INF.CCY_TYP = '1';
        }
        B020_INQ_LN_CNTR_INF();
        if (WS_VARIABLES.WS_COND_FLAG.DEL_REC_FLG == 'Y') {
            T000_DELETE_DDTLPAY();
        }
    }
    public void B012_CHECK_INPUT_DATA() throws IOException,SQLException,Exception {
        if (WS_VARIABLES.WS_LNPY_INF.LNCNTR_NO.trim().length() == 0) {
            WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_CNTR_NO_M_INPUT;
            S000_ERR_MSG_PROC();
        }
        if (WS_VARIABLES.WS_LNPY_INF.LNTX_SEQ == 0) {
            WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_LNTX_SEQ_M_INPUT;
            S000_ERR_MSG_PROC();
        }
        if (WS_VARIABLES.WS_LNPY_INF.LMTX_SEQ == 0) {
            WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_LMTX_SEQ_INPUT;
            S000_ERR_MSG_PROC();
        }
        B020_INQ_LN_CNTR_INF();
        if (WS_VARIABLES.WS_COND_FLAG.LPAY_FLG == 'N') {
            WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_REC_UNEXIST;
            S000_ERR_MSG_PROC();
        }
        if (DDCSLNPY.FUNC == '2') {
            if (WS_VARIABLES.WS_LNPY_INF.ACMT_AMT != DDRLPAY.ACMT_AMT 
                && WS_VARIABLES.WS_LNPY_INF.ACMT_AMT != 0) {
                DDRLPAY.ACMT_AMT = WS_VARIABLES.WS_LNPY_INF.ACMT_AMT;
                WS_VARIABLES.MOD_FLG = 'Y';
            }
            if (WS_VARIABLES.WS_LNPY_INF.PAY_DT != DDRLPAY.PAY_DT 
                && WS_VARIABLES.WS_LNPY_INF.PAY_DT != 0) {
                DDRLPAY.PAY_DT = WS_VARIABLES.WS_LNPY_INF.PAY_DT;
                WS_VARIABLES.MOD_FLG = 'Y';
            }
            if (WS_VARIABLES.WS_LNPY_INF.ACMT_DT != DDRLPAY.ACMT_DT 
                && WS_VARIABLES.WS_LNPY_INF.ACMT_DT != 0) {
                DDRLPAY.ACMT_DT = WS_VARIABLES.WS_LNPY_INF.ACMT_DT;
                WS_VARIABLES.MOD_FLG = 'Y';
            }
            if (WS_VARIABLES.WS_LNPY_INF.MT_DT != DDRLPAY.MT_DT 
                && WS_VARIABLES.WS_LNPY_INF.MT_DT != 0) {
                DDRLPAY.MT_DT = WS_VARIABLES.WS_LNPY_INF.MT_DT;
                WS_VARIABLES.MOD_FLG = 'Y';
            }
            if (!WS_VARIABLES.WS_LNPY_INF.OTH_SMR.equalsIgnoreCase(DDRLPAY.OTH_SMR) 
                && WS_VARIABLES.WS_LNPY_INF.OTH_SMR.trim().length() > 0) {
                DDRLPAY.OTH_SMR = WS_VARIABLES.WS_LNPY_INF.OTH_SMR;
                WS_VARIABLES.MOD_FLG = 'Y';
            }
            if (!WS_VARIABLES.WS_LNPY_INF.LOC_OAC.equalsIgnoreCase(DDRLPAY.LOC_OAC) 
                && WS_VARIABLES.WS_LNPY_INF.LOC_OAC.trim().length() > 0) {
                DDRLPAY.LOC_OAC = WS_VARIABLES.WS_LNPY_INF.LOC_OAC;
                WS_VARIABLES.MOD_FLG = 'Y';
            }
            if (!WS_VARIABLES.WS_LNPY_INF.OTH_NAME.equalsIgnoreCase(DDRLPAY.OTH_NAME) 
                && WS_VARIABLES.WS_LNPY_INF.OTH_NAME.trim().length() > 0) {
                DDRLPAY.OTH_NAME = WS_VARIABLES.WS_LNPY_INF.OTH_NAME;
                WS_VARIABLES.MOD_FLG = 'Y';
            }
            if (!WS_VARIABLES.WS_LNPY_INF.OTH_BK.equalsIgnoreCase(DDRLPAY.OTH_BK) 
                && WS_VARIABLES.WS_LNPY_INF.OTH_BK.trim().length() > 0) {
                DDRLPAY.OTH_BK = WS_VARIABLES.WS_LNPY_INF.OTH_BK;
                WS_VARIABLES.MOD_FLG = 'Y';
            }
            if (!WS_VARIABLES.WS_LNPY_INF.CHNL_TR.equalsIgnoreCase(DDRLPAY.CHNL_TR) 
                && WS_VARIABLES.WS_LNPY_INF.CHNL_TR.trim().length() > 0) {
                DDRLPAY.OTH_BK = WS_VARIABLES.WS_LNPY_INF.OTH_BK;
                WS_VARIABLES.MOD_FLG = 'Y';
            }
            if (!WS_VARIABLES.WS_LNPY_INF.PROL_NO.equalsIgnoreCase(DDRLPAY.PROL_NO) 
                && WS_VARIABLES.WS_LNPY_INF.PROL_NO.trim().length() > 0) {
                DDRLPAY.PROL_NO = WS_VARIABLES.WS_LNPY_INF.PROL_NO;
                WS_VARIABLES.MOD_FLG = 'Y';
            }
            if (!WS_VARIABLES.WS_LNPY_INF.SMR.equalsIgnoreCase(DDRLPAY.SMR) 
                && WS_VARIABLES.WS_LNPY_INF.SMR.trim().length() > 0) {
                DDRLPAY.SMR = WS_VARIABLES.WS_LNPY_INF.SMR;
                WS_VARIABLES.MOD_FLG = 'Y';
            }
            if (WS_VARIABLES.MOD_FLG != 'Y') {
                WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_NOT_MODIFY;
                S000_ERR_MSG_PROC();
            }
        }
    }
    public void B030_GET_INF() throws IOException,SQLException,Exception {
        WS_VARIABLES.WS_DDTLPAY_INF.H_LNCNTR_NO = DDRLPAY.KEY.LNCNTR_NO;
        WS_VARIABLES.WS_DDTLPAY_INF.H_LNTX_SEQ = DDRLPAY.KEY.LNTX_SEQ;
        WS_VARIABLES.WS_DDTLPAY_INF.H_LMTX_SEQ = DDRLPAY.KEY.LMTX_SEQ;
        WS_VARIABLES.WS_DDTLPAY_INF.H_LN_AC = DDRLPAY.LN_AC;
        WS_VARIABLES.WS_DDTLPAY_INF.H_PAY_DT = DDRLPAY.PAY_DT;
        WS_VARIABLES.WS_DDTLPAY_INF.H_ACMT_DT = DDRLPAY.ACMT_DT;
        WS_VARIABLES.WS_DDTLPAY_INF.H_MT_DT = DDRLPAY.MT_DT;
        WS_VARIABLES.WS_DDTLPAY_INF.H_DD_AC = DDRLPAY.DD_AC;
        WS_VARIABLES.WS_DDTLPAY_INF.H_OTH_SMR = DDRLPAY.OTH_SMR;
        WS_VARIABLES.WS_DDTLPAY_INF.H_LOC_OAC = DDRLPAY.LOC_OAC;
        WS_VARIABLES.WS_DDTLPAY_INF.H_OTH_NAME = DDRLPAY.OTH_NAME;
        WS_VARIABLES.WS_DDTLPAY_INF.H_OTH_BK = DDRLPAY.OTH_BK;
        WS_VARIABLES.WS_DDTLPAY_INF.H_CCY = DDRLPAY.CCY;
        WS_VARIABLES.WS_DDTLPAY_INF.H_CCY_TYP = DDRLPAY.CCY_TYP;
        WS_VARIABLES.WS_DDTLPAY_INF.H_ACMT_AMT = DDRLPAY.ACMT_AMT;
        WS_VARIABLES.WS_DDTLPAY_INF.H_CHNL_TR = DDRLPAY.CHNL_TR;
        WS_VARIABLES.WS_DDTLPAY_INF.H_PROL_NO = DDRLPAY.PROL_NO;
        WS_VARIABLES.WS_DDTLPAY_INF.H_SMR = DDRLPAY.SMR;
        WS_VARIABLES.WS_DDTLPAY_INF.H_STS = DDRLPAY.STS;
        CEP.TRC(SCCGWA, WS_VARIABLES.WS_DDTLPAY_INF.H_LNCNTR_NO);
        CEP.TRC(SCCGWA, WS_VARIABLES.WS_DDTLPAY_INF.H_LNTX_SEQ);
        CEP.TRC(SCCGWA, WS_VARIABLES.WS_DDTLPAY_INF.H_LMTX_SEQ);
    }
    public void B080_INQ_DATA_PROC() throws IOException,SQLException,Exception {
        B081_CHECK_INQ_DATA();
        B082_TRANS_DATA_PRO();
        B083_GET_PAGE_ROW_INF();
        B084_GET_TOTAL_NUM();
        B095_OUTPUT_FMT();
    }
    public void B081_CHECK_INQ_DATA() throws IOException,SQLException,Exception {
        if (DDCSLNPY.ITEM_DATA[1-1].DD_AC.trim().length() == 0) {
            if (DDCSLNPY.LNCNTR_NO.trim().length() == 0) {
                WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_CNTR_NO_M_INPUT;
                S000_ERR_MSG_PROC();
            }
            if (DDCSLNPY.LNTX_SEQ == 0) {
                WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_LNTX_SEQ_M_INPUT;
                S000_ERR_MSG_PROC();
            }
        }
    }
    public void B082_TRANS_DATA_PRO() throws IOException,SQLException,Exception {
        if (DDCSLNPY.PAGE_ROW == 0) {
            WS_VARIABLES.P_ROW = 10;
        } else {
            WS_VARIABLES.P_ROW = DDCSLNPY.PAGE_ROW;
        }
        if (DDCSLNPY.PAGE_NUM == 0) {
            DDCSLNPY.PAGE_NUM = 1;
        }
        WS_VARIABLES.L_CNT = 0;
    }
    public void B083_GET_PAGE_ROW_INF() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, DDRLPAY);
        DDRLPAY.KEY.LNCNTR_NO = DDCSLNPY.LNCNTR_NO;
        DDRLPAY.KEY.LNTX_SEQ = DDCSLNPY.LNTX_SEQ;
        DDRLPAY.DD_AC = DDCSLNPY.ITEM_DATA[1-1].DD_AC;
        CEP.TRC(SCCGWA, DDRLPAY.KEY.LNCNTR_NO);
        CEP.TRC(SCCGWA, DDRLPAY.KEY.LNTX_SEQ);
        CEP.TRC(SCCGWA, DDRLPAY.DD_AC);
        if (DDCSLNPY.ITEM_DATA[1-1].DD_AC.trim().length() == 0) {
            T000_STARTBR_DDTLPAY();
        } else {
            T000_STARTAC_DDTLPAY();
        }
        T000_READNEXT_DDTLPAY();
        while (WS_VARIABLES.RL_FLAG != 'N') {
            CEP.TRC(SCCGWA, DDRLPAY.KEY.LNCNTR_NO);
            CEP.TRC(SCCGWA, DDRLPAY.KEY.LNTX_SEQ);
            CEP.TRC(SCCGWA, DDRLPAY.KEY.LMTX_SEQ);
            WS_VARIABLES.L_CNT += 1;
            DDCSLNPY.LNCNTR_FLG = 'Y';
            T000_READNEXT_DDTLPAY();
        }
        T000_ENDBR_DDTLPAY();
        CEP.TRC(SCCGWA, WS_VARIABLES.L_CNT);
        if (WS_VARIABLES.L_CNT != 0) {
            IBS.init(SCCGWA, WS_OUPUT_DATA.WS_PAGE_INF);
            WS_OUPUT_DATA.WS_PAGE_INF.TOTAL_NUM = WS_VARIABLES.L_CNT;
            WS_VARIABLES.L_ROW = WS_OUPUT_DATA.WS_PAGE_INF.TOTAL_NUM % WS_VARIABLES.P_ROW;
            WS_VARIABLES.T_PAGE = (int) ((WS_OUPUT_DATA.WS_PAGE_INF.TOTAL_NUM - WS_VARIABLES.L_ROW) / WS_VARIABLES.P_ROW);
            if (WS_VARIABLES.L_ROW == 0) {
                WS_OUPUT_DATA.WS_PAGE_INF.TOTAL_PAGE = WS_VARIABLES.T_PAGE;
            } else {
                WS_OUPUT_DATA.WS_PAGE_INF.TOTAL_PAGE = WS_VARIABLES.T_PAGE + 1;
                CEP.TRC(SCCGWA, WS_OUPUT_DATA.WS_PAGE_INF.TOTAL_PAGE);
                CEP.TRC(SCCGWA, WS_VARIABLES.T_PAGE);
            }
            if (DDCSLNPY.PAGE_NUM >= WS_OUPUT_DATA.WS_PAGE_INF.TOTAL_PAGE) {
                CEP.TRC(SCCGWA, "PAGE NUM LARGE");
                WS_OUPUT_DATA.WS_PAGE_INF.CURR_PAGE = WS_OUPUT_DATA.WS_PAGE_INF.TOTAL_PAGE;
                WS_OUPUT_DATA.WS_PAGE_INF.LAST_PAGE = 'Y';
                CEP.TRC(SCCGWA, WS_VARIABLES.L_ROW);
                if (WS_VARIABLES.L_ROW == 0) {
                    WS_OUPUT_DATA.WS_PAGE_INF.PAGE_ROW = WS_VARIABLES.P_ROW;
                    WS_OUTPUT_DATA = new DDZSLNPY_WS_OUTPUT_DATA();
                    WS_OUPUT_DATA.WS_OUTPUT_DATA_INF.WS_OUTPUT_DATA.add(WS_OUTPUT_DATA);
                    CEP.TRC(SCCGWA, WS_VARIABLES.P_ROW);
                } else {
                    WS_OUPUT_DATA.WS_PAGE_INF.PAGE_ROW = WS_VARIABLES.L_ROW;
                    WS_OUTPUT_DATA = new DDZSLNPY_WS_OUTPUT_DATA();
                    WS_OUPUT_DATA.WS_OUTPUT_DATA_INF.WS_OUTPUT_DATA.add(WS_OUTPUT_DATA);
                    CEP.TRC(SCCGWA, WS_VARIABLES.L_ROW);
                }
            } else {
                CEP.TRC(SCCGWA, "<<<<<<");
                WS_OUPUT_DATA.WS_PAGE_INF.CURR_PAGE = DDCSLNPY.PAGE_NUM;
                WS_OUPUT_DATA.WS_PAGE_INF.LAST_PAGE = 'N';
                WS_OUPUT_DATA.WS_PAGE_INF.PAGE_ROW = WS_VARIABLES.P_ROW;
                WS_OUTPUT_DATA = new DDZSLNPY_WS_OUTPUT_DATA();
                WS_OUPUT_DATA.WS_OUTPUT_DATA_INF.WS_OUTPUT_DATA.add(WS_OUTPUT_DATA);
            }
            if (DDCSLNPY.PAGE_NUM > WS_OUPUT_DATA.WS_PAGE_INF.TOTAL_PAGE) {
                WS_OUPUT_DATA.WS_PAGE_INF.CURR_PAGE = DDCSLNPY.PAGE_NUM;
                WS_OUPUT_DATA.WS_PAGE_INF.PAGE_ROW = 0;
                WS_OUTPUT_DATA = new DDZSLNPY_WS_OUTPUT_DATA();
                WS_OUPUT_DATA.WS_OUTPUT_DATA_INF.WS_OUTPUT_DATA.add(WS_OUTPUT_DATA);
                WS_OUPUT_DATA.WS_PAGE_INF.LAST_PAGE = 'Y';
            } else {
                WS_VARIABLES.STR_NUM = ( WS_OUPUT_DATA.WS_PAGE_INF.CURR_PAGE - 1 ) * WS_VARIABLES.P_ROW;
                CEP.TRC(SCCGWA, WS_VARIABLES.STR_NUM);
                WS_VARIABLES.END_NUM = WS_OUPUT_DATA.WS_PAGE_INF.CURR_PAGE * WS_VARIABLES.P_ROW;
            }
            CEP.TRC(SCCGWA, WS_VARIABLES.END_NUM);
            CEP.TRC(SCCGWA, "PAGE INFO:");
            CEP.TRC(SCCGWA, WS_OUPUT_DATA.WS_PAGE_INF.TOTAL_PAGE);
            CEP.TRC(SCCGWA, WS_OUPUT_DATA.WS_PAGE_INF.TOTAL_NUM);
            CEP.TRC(SCCGWA, WS_OUPUT_DATA.WS_PAGE_INF.CURR_PAGE);
            CEP.TRC(SCCGWA, WS_OUPUT_DATA.WS_PAGE_INF.LAST_PAGE);
            CEP.TRC(SCCGWA, WS_OUPUT_DATA.WS_PAGE_INF.PAGE_ROW);
        } else {
            WS_OUPUT_DATA.WS_PAGE_INF.TOTAL_PAGE = 0;
            WS_OUPUT_DATA.WS_PAGE_INF.TOTAL_NUM = 0;
            WS_OUPUT_DATA.WS_PAGE_INF.CURR_PAGE = 0;
            WS_OUPUT_DATA.WS_PAGE_INF.PAGE_ROW = 0;
            WS_OUTPUT_DATA = new DDZSLNPY_WS_OUTPUT_DATA();
            WS_OUPUT_DATA.WS_OUTPUT_DATA_INF.WS_OUTPUT_DATA.add(WS_OUTPUT_DATA);
        }
    }
    public void B084_GET_TOTAL_NUM() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, DDRLPAY);
        DDRLPAY.KEY.LNCNTR_NO = DDCSLNPY.LNCNTR_NO;
        DDRLPAY.KEY.LNTX_SEQ = DDCSLNPY.LNTX_SEQ;
        DDRLPAY.DD_AC = DDCSLNPY.ITEM_DATA[1-1].DD_AC;
        CEP.TRC(SCCGWA, DDRLPAY.KEY.LNCNTR_NO);
        CEP.TRC(SCCGWA, DDRLPAY.KEY.LNTX_SEQ);
        CEP.TRC(SCCGWA, DDRLPAY.DD_AC);
        if (DDCSLNPY.ITEM_DATA[1-1].DD_AC.trim().length() == 0) {
            T000_STARTBR_DDTLPAY();
        } else {
            T000_STARTAC_DDTLPAY();
        }
        T000_READNEXT_DDTLPAY();
        while (WS_VARIABLES.RL_FLAG != 'N') {
            CEP.TRC(SCCGWA, WS_VARIABLES.STR_NUM);
            CEP.TRC(SCCGWA, WS_VARIABLES.END_NUM);
            CEP.TRC(SCCGWA, WS_VARIABLES.I);
            CEP.TRC(SCCGWA, WS_VARIABLES.CNT);
            WS_VARIABLES.I += 1;
            CEP.TRC(SCCGWA, DDRLPAY.KEY.LNCNTR_NO);
            CEP.TRC(SCCGWA, DDRLPAY.KEY.LNTX_SEQ);
            CEP.TRC(SCCGWA, DDRLPAY.KEY.LMTX_SEQ);
            if (WS_VARIABLES.I > WS_VARIABLES.STR_NUM 
                && WS_VARIABLES.I <= WS_VARIABLES.END_NUM) {
                B085_OUTPUT_LIST();
                WS_VARIABLES.CNT += 1;
            }
            CEP.TRC(SCCGWA, WS_VARIABLES.I);
            CEP.TRC(SCCGWA, WS_VARIABLES.CNT);
            T000_READNEXT_DDTLPAY();
        }
        T000_ENDBR_DDTLPAY();
    }
    public void B085_OUTPUT_LIST() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, "LIST INT1:");
        IBS.init(SCCGWA, WS_OUTPUT_DATA);
        WS_OUTPUT_DATA.O_LNCNTR_NO = DDRLPAY.KEY.LNCNTR_NO;
        WS_OUTPUT_DATA.O_LNTX_SEQ = DDRLPAY.KEY.LNTX_SEQ;
        WS_OUTPUT_DATA.O_LMTX_SEQ = DDRLPAY.KEY.LMTX_SEQ;
        WS_OUTPUT_DATA.O_LN_AC = DDRLPAY.LN_AC;
        WS_OUTPUT_DATA.O_ACMT_DT = DDRLPAY.ACMT_DT;
        WS_OUTPUT_DATA.O_DD_AC = DDRLPAY.DD_AC;
        WS_OUTPUT_DATA.O_OTH_SMR = DDRLPAY.OTH_SMR;
        WS_OUTPUT_DATA.O_OTH_NAME = DDRLPAY.OTH_NAME;
        WS_OUTPUT_DATA.O_CCY = DDRLPAY.CCY;
        WS_OUTPUT_DATA.O_ACMT_AMT = DDRLPAY.ACMT_AMT;
        WS_OUTPUT_DATA.O_CHNL_TR = DDRLPAY.CHNL_TR;
        WS_OUTPUT_DATA.O_PROL_NO = DDRLPAY.PROL_NO;
        WS_OUTPUT_DATA.O_STS = DDRLPAY.STS;
        CEP.TRC(SCCGWA, WS_OUPUT_DATA.WS_OUTPUT_DATA_INF.WS_OUTPUT_DATA.get(WS_VARIABLES.CNT-1));
    }
    public void B080_OUTPUT_DATA_PROC() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, "OUTPUT DATA");
        IBS.init(SCCGWA, WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1]);
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_LMTX_SEQ = WS_VARIABLES.WS_LNPY_INF.LMTX_SEQ;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_LN_AC = WS_VARIABLES.WS_LNPY_INF.LN_AC;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_PAY_DT = WS_VARIABLES.WS_LNPY_INF.PAY_DT;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_ACMT_DT = WS_VARIABLES.WS_LNPY_INF.ACMT_DT;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_MT_DT = WS_VARIABLES.WS_LNPY_INF.MT_DT;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_DD_AC = WS_VARIABLES.WS_LNPY_INF.DD_AC;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_OTH_SMR = WS_VARIABLES.WS_LNPY_INF.OTH_SMR;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_LOC_OAC = WS_VARIABLES.WS_LNPY_INF.LOC_OAC;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_OTH_NAME = WS_VARIABLES.WS_LNPY_INF.OTH_NAME;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_OTH_BK = WS_VARIABLES.WS_LNPY_INF.OTH_BK;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_CCY = WS_VARIABLES.WS_LNPY_INF.CCY;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_CCY_TYP = WS_VARIABLES.WS_LNPY_INF.CCY_TYP;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_ACMT_AMT = WS_VARIABLES.WS_LNPY_INF.ACMT_AMT;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_LN_AMT = WS_VARIABLES.WS_LNPY_INF.LN_AMT;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_CHNL_TR = WS_VARIABLES.WS_LNPY_INF.CHNL_TR;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_PROL_NO = WS_VARIABLES.WS_LNPY_INF.PROL_NO;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_SMR = WS_VARIABLES.WS_LNPY_INF.SMR;
        WS_VARIABLES.WS_OUT_LPAY_INF.WS_OUT_LPAY[WS_VARIABLES.CNT-1].M_STS = WS_VARIABLES.WS_LNPY_INF.STS;
    }
    public void B090_OUTPUT_FMT() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, "LIST INT2:");
        IBS.init(SCCGWA, SCCFMT);
        SCCFMT.FMTID = FMT_CODE;
        SCCFMT.DATA_PTR = WS_VARIABLES.WS_OUT_LPAY_INF;
        SCCFMT.DATA_LEN = 7120;
        CEP.TRC(SCCGWA, SCCFMT.DATA_LEN);
        CEP.TRC(SCCGWA, WS_OUPUT_DATA);
        IBS.FMT(SCCGWA, SCCFMT);
    }
    public void B095_OUTPUT_FMT() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, WS_OUPUT_DATA.WS_PAGE_INF.PAGE_ROW);
        CEP.TRC(SCCGWA, "LIST INT2:");
        IBS.init(SCCGWA, SCCFMT);
        SCCFMT.FMTID = FMT_INQ_CODE;
        SCCFMT.DATA_PTR = WS_OUPUT_DATA;
        SCCFMT.DATA_LEN = 10502;
        CEP.TRC(SCCGWA, SCCFMT.DATA_LEN);
        CEP.TRC(SCCGWA, WS_OUPUT_DATA);
        IBS.FMT(SCCGWA, SCCFMT);
    }
    public void B080_CAN_LPAY_PROC() throws IOException,SQLException,Exception {
        if (WS_VARIABLES.WS_DDTLPAY_INF.H_STS != '1') {
            IBS.init(SCCGWA, DDRLPAY);
            DDRLPAY.KEY.LNCNTR_NO = WS_VARIABLES.WS_DDTLPAY_INF.H_LNCNTR_NO;
            DDRLPAY.KEY.LNTX_SEQ = WS_VARIABLES.WS_DDTLPAY_INF.H_LNTX_SEQ;
            DDRLPAY.KEY.LMTX_SEQ = WS_VARIABLES.WS_DDTLPAY_INF.H_LMTX_SEQ;
            T000_READ_UPDATE_LPAY_PROC();
            DDRLPAY.STS = '3';
            DDRLPAY.UPDTBL_DATE = SCCGWA.COMM_AREA.AC_DATE;
            DDRLPAY.UPDTBL_TLR = SCCGWA.COMM_AREA.TL_ID;
            T000_REWRITE_DDTLPAY();
        } else {
            WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_NO_STS_HLD_ERROR;
            S000_ERR_MSG_PROC();
        }
    }
    public void B020_INQ_LN_CNTR_INF() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, DDRLPAY);
        DDRLPAY.KEY.LNCNTR_NO = WS_VARIABLES.WS_LNPY_INF.LNCNTR_NO;
        DDRLPAY.KEY.LNTX_SEQ = WS_VARIABLES.WS_LNPY_INF.LNTX_SEQ;
        DDRLPAY.KEY.LMTX_SEQ = WS_VARIABLES.WS_LNPY_INF.LMTX_SEQ;
        CEP.TRC(SCCGWA, DDRLPAY.KEY.LNCNTR_NO);
        CEP.TRC(SCCGWA, DDRLPAY.KEY.LNTX_SEQ);
        CEP.TRC(SCCGWA, DDRLPAY.KEY.LMTX_SEQ);
        T000_READ_UPDATE_LPAY_PROC();
    }
    public void B080_ADD_LPAY_PROC() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, DDRLPAY);
        DDRLPAY.KEY.LNCNTR_NO = WS_VARIABLES.WS_LNPY_INF.LNCNTR_NO;
        DDRLPAY.KEY.LNTX_SEQ = WS_VARIABLES.WS_LNPY_INF.LNTX_SEQ;
        DDRLPAY.KEY.LMTX_SEQ = WS_VARIABLES.WS_LNPY_INF.LMTX_SEQ;
        DDRLPAY.LN_AC = WS_VARIABLES.WS_LNPY_INF.LN_AC;
        DDRLPAY.PAY_DT = WS_VARIABLES.WS_LNPY_INF.PAY_DT;
        DDRLPAY.ACMT_DT = WS_VARIABLES.WS_LNPY_INF.ACMT_DT;
        DDRLPAY.MT_DT = WS_VARIABLES.WS_LNPY_INF.MT_DT;
        DDRLPAY.DD_AC = WS_VARIABLES.WS_LNPY_INF.DD_AC;
        DDRLPAY.OTH_SMR = WS_VARIABLES.WS_LNPY_INF.OTH_SMR;
        DDRLPAY.LOC_OAC = WS_VARIABLES.WS_LNPY_INF.LOC_OAC;
        DDRLPAY.OTH_NAME = WS_VARIABLES.WS_LNPY_INF.OTH_NAME;
        DDRLPAY.OTH_BK = WS_VARIABLES.WS_LNPY_INF.OTH_BK;
        DDRLPAY.CCY = WS_VARIABLES.WS_LNPY_INF.CCY;
        DDRLPAY.CCY_TYP = WS_VARIABLES.WS_LNPY_INF.CCY_TYP;
        DDRLPAY.ACMT_AMT = WS_VARIABLES.WS_LNPY_INF.ACMT_AMT;
        DDRLPAY.CHNL_TR = WS_VARIABLES.WS_LNPY_INF.CHNL_TR;
        DDRLPAY.PROL_NO = WS_VARIABLES.WS_LNPY_INF.PROL_NO;
        DDRLPAY.SMR = WS_VARIABLES.WS_LNPY_INF.SMR;
        DDRLPAY.STS = '0';
        DDRLPAY.CRT_DATE = SCCGWA.COMM_AREA.AC_DATE;
        DDRLPAY.CRT_TLR = SCCGWA.COMM_AREA.TL_ID;
        DDRLPAY.UPDTBL_DATE = SCCGWA.COMM_AREA.AC_DATE;
        DDRLPAY.UPDTBL_TLR = SCCGWA.COMM_AREA.TL_ID;
        T000_WRITE_DDTLPAY();
    }
    public void B080_MOD_LPAY_PROC() throws IOException,SQLException,Exception {
        DDRLPAY.UPDTBL_DATE = SCCGWA.COMM_AREA.AC_DATE;
        DDRLPAY.UPDTBL_TLR = SCCGWA.COMM_AREA.TL_ID;
        T000_REWRITE_DDTLPAY();
    }
    public void B080_OTHER_DATA_PROC() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, DDCUUPAY);
        CEP.TRC(SCCGWA, DDCSLNPY.ITEM_DATA[1-1].DD_AC);
        DDCUUPAY.FUNC = DDCSLNPY.FUNC;
        DDCUUPAY.INNER_FLG = DDCSLNPY.INNER_FLG;
        DDCUUPAY.LNCNTR_FLG = DDCSLNPY.LNCNTR_FLG;
        DDCUUPAY.LNCNTR_NO = DDCSLNPY.LNCNTR_NO;
        DDCUUPAY.LNTX_SEQ = DDCSLNPY.LNTX_SEQ;
        DDCUUPAY.LN_AMT = DDCSLNPY.ITEM_DATA[1-1].LN_AMT;
        DDCUUPAY.LMTX_SEQ = DDCSLNPY.ITEM_DATA[1-1].LMTX_SEQ;
        DDCUUPAY.LN_AC = DDCSLNPY.ITEM_DATA[1-1].LN_AC;
        DDCUUPAY.PAY_DT = DDCSLNPY.ITEM_DATA[1-1].PAY_DT;
        DDCUUPAY.ACMT_DT = DDCSLNPY.ITEM_DATA[1-1].ACMT_DT;
        DDCUUPAY.MT_DT = DDCSLNPY.ITEM_DATA[1-1].MT_DT;
        DDCUUPAY.DD_AC = DDCSLNPY.ITEM_DATA[1-1].DD_AC;
        DDCUUPAY.OTH_SMR = DDCSLNPY.ITEM_DATA[1-1].OTH_SMR;
        DDCUUPAY.LOC_OAC = DDCSLNPY.ITEM_DATA[1-1].LOC_OAC;
        DDCUUPAY.OTH_NAME = DDCSLNPY.ITEM_DATA[1-1].OTH_NAME;
        DDCUUPAY.OTH_BK = DDCSLNPY.ITEM_DATA[1-1].OTH_BK;
        DDCUUPAY.CCY = DDCSLNPY.ITEM_DATA[1-1].CCY;
        DDCUUPAY.CCY_TYP = DDCSLNPY.ITEM_DATA[1-1].CCY_TYP;
        DDCUUPAY.ACMT_AMT = DDCSLNPY.ITEM_DATA[1-1].ACMT_AMT;
        DDCUUPAY.PROL_NO = DDCSLNPY.ITEM_DATA[1-1].PROL_NO;
        DDCUUPAY.STS = DDCSLNPY.ITEM_DATA[1-1].STS;
        S000_CALL_DDZUUPAY();
    }
    public void T000_DELETE_DDTLPAY() throws IOException,SQLException,Exception {
        DDTLPAY_RD = new DBParm();
        DDTLPAY_RD.TableName = "DDTLPAY";
        DDTLPAY_RD.where = "LNCNTR_NO = :DDRLPAY.KEY.LNCNTR_NO "
            + "AND LNTX_SEQ = :DDRLPAY.KEY.LNTX_SEQ "
            + "AND LMTX_SEQ = :DDRLPAY.KEY.LMTX_SEQ";
        IBS.DELETE(SCCGWA, DDRLPAY, this, DDTLPAY_RD);
    }
    public void S000_CALL_DDZUUPAY() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "DD-S-MOD-UPAY", DDCUUPAY);
    }
    public void T000_STARTBR_DDTLPAY() throws IOException,SQLException,Exception {
        DDTLPAY_BR.rp = new DBParm();
        DDTLPAY_BR.rp.TableName = "DDTLPAY";
        DDTLPAY_BR.rp.where = "LNCNTR_NO = :DDRLPAY.KEY.LNCNTR_NO "
            + "AND LNTX_SEQ = :DDRLPAY.KEY.LNTX_SEQ";
        DDTLPAY_BR.rp.order = "LMTX_SEQ";
        IBS.STARTBR(SCCGWA, DDRLPAY, this, DDTLPAY_BR);
    }
    public void T000_STARTAC_DDTLPAY() throws IOException,SQLException,Exception {
        DDTLPAY_BR.rp = new DBParm();
        DDTLPAY_BR.rp.TableName = "DDTLPAY";
        DDTLPAY_BR.rp.where = "DD_AC = :DDRLPAY.DD_AC";
        DDTLPAY_BR.rp.order = "LMTX_SEQ";
        IBS.STARTBR(SCCGWA, DDRLPAY, this, DDTLPAY_BR);
    }
    public void T000_READNEXT_DDTLPAY() throws IOException,SQLException,Exception {
        IBS.READNEXT(SCCGWA, DDRLPAY, this, DDTLPAY_BR);
        if (SCCGWA.COMM_AREA.DBIO_FLG == '0') {
            WS_VARIABLES.WS_COND_FLAG.LPAY_FLG = 'F';
            WS_VARIABLES.RL_FLAG = 'Y';
        } else if (SCCGWA.COMM_AREA.DBIO_FLG == '1') {
            WS_VARIABLES.WS_COND_FLAG.LPAY_FLG = 'N';
            WS_VARIABLES.RL_FLAG = 'N';
        } else {
            IBS.init(SCCGWA, SCCEXCP);
            SCCEXCP.MSG_TEXT.MSG_TEXT_D.TABLE_NAME = "DDTLPAY";
            SCCEXCP.MSG_TEXT.SYS_INFO = IBS.CLS2CPY(SCCGWA, SCCEXCP.MSG_TEXT.MSG_TEXT_D);
            SCCEXCP.MSG_TEXT.MSG_TEXT_D.DB_FUNC = "READNEXT";
            B_DB_EXCP();
        }
    }
    public void T000_ENDBR_DDTLPAY() throws IOException,SQLException,Exception {
        IBS.ENDBR(SCCGWA, DDTLPAY_BR);
    }
    public void T000_REWRITE_DDTLPAY() throws IOException,SQLException,Exception {
        DDRLPAY.UPDTBL_DATE = SCCGWA.COMM_AREA.AC_DATE;
        DDRLPAY.UPDTBL_TLR = SCCGWA.COMM_AREA.TL_ID;
        DDTLPAY_RD = new DBParm();
        DDTLPAY_RD.TableName = "DDTLPAY";
        IBS.REWRITE(SCCGWA, DDRLPAY, DDTLPAY_RD);
    }
    public void T000_WRITE_DDTLPAY() throws IOException,SQLException,Exception {
        DDTLPAY_RD = new DBParm();
        DDTLPAY_RD.TableName = "DDTLPAY";
        IBS.WRITE(SCCGWA, DDRLPAY, DDTLPAY_RD);
    }
    public void B170_NFIN_TX_HIS_PROC() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, BPCPNHIS);
        BPCPNHIS.INFO.TX_TYP = 'A';
        BPCPNHIS.INFO.AC = DDCSLNPY.ITEM_DATA[1-1].DD_AC;
        if (DDCSLNPY.FUNC != '5') {
            BPCPNHIS.INFO.TX_CD = HIS_TX_CD;
        } else {
            BPCPNHIS.INFO.TX_CD = HIS_TX_CODE;
        }
        BPCPNHIS.INFO.FMT_ID = HIS_COPYBOOK_NAME;
        BPCPNHIS.INFO.JRNNO = SCCGWA.COMM_AREA.JRN_NO;
        BPCPNHIS.INFO.TX_RMK = HIS_REMARKS;
        S000_CALL_BPZPNHIS();
    }
    public void S000_CALL_BPZPNHIS() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "BP-REC-NHIS", BPCPNHIS);
        CEP.TRC(SCCGWA, BPCPNHIS.RC.RC_CODE);
        if (BPCPNHIS.RC.RC_CODE != 0) {
            WS_VARIABLES.ERR_MSG = IBS.CLS2CPY(SCCGWA, BPCPNHIS.RC);
            S000_ERR_MSG_PROC();
        }
    }
    public void T000_READ_UPDATE_LPAY_PROC() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, SCCGWA.COMM_AREA.DBIO_FLG);
        DDTLPAY_RD = new DBParm();
        DDTLPAY_RD.TableName = "DDTLPAY";
        DDTLPAY_RD.where = "LNCNTR_NO = :DDRLPAY.KEY.LNCNTR_NO "
            + "AND LNTX_SEQ = :DDRLPAY.KEY.LNTX_SEQ "
            + "AND LMTX_SEQ = :DDRLPAY.KEY.LMTX_SEQ";
        DDTLPAY_RD.upd = true;
        IBS.READ(SCCGWA, DDRLPAY, this, DDTLPAY_RD);
        CEP.TRC(SCCGWA, SCCGWA.COMM_AREA.DBIO_FLG);
        if (SCCGWA.COMM_AREA.DBIO_FLG == '1') {
            if (DDCSLNPY.FUNC != '1') {
                WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_LPAY_REC_NOTFND;
                S000_ERR_MSG_PROC();
            }
        } else {
            if (SCCGWA.COMM_AREA.DBIO_FLG == '0') {
                if (DDCSLNPY.FUNC == '1') {
                    if (DDRLPAY.STS != '0') {
                        WS_VARIABLES.ERR_MSG = ERROR_MSG.DD_RECORD_EXIST;
                        S000_ERR_MSG_PROC();
                    } else {
                        WS_VARIABLES.WS_COND_FLAG.DEL_REC_FLG = 'Y';
                    }
                }
                DDCSLNPY.LNCNTR_FLG = 'Y';
            } else {
                SCCEXCP.MSG_TEXT.KEY_OR_OTHER = "READ TABLE DDTLPAY ERROR!";
                SCCEXCP.MSG_TEXT.MSG_TEXT_D.TABLE_NAME = "DDTLPAY";
                SCCEXCP.MSG_TEXT.SYS_INFO = IBS.CLS2CPY(SCCGWA, SCCEXCP.MSG_TEXT.MSG_TEXT_D);
                B_DB_EXCP();
            }
        }
    }
    public void S000_ERR_MSG_PROC() throws IOException,SQLException,Exception {
        CEP.ERR(SCCGWA, WS_VARIABLES.ERR_MSG);
    }
    public void Z_RET() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, WS_VARIABLES.ERR_MSG);
        return;
    }
    public void B_DB_EXCP() throws IOException,SQLException,Exception {
        throw new SQLException(SCCGWA.e);
    }
}
