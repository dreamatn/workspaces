package com.hisun.DD;

import com.hisun.SC.*;
import com.hisun.TC.XStreamUtil;
import com.hisun.CI.*;

import java.io.IOException;
import java.sql.SQLException;

public class DDOT5812 {
    short WS_FLD_NO = 0;
    String WS_ERR_MSG = " ";
    DDCMSG_ERROR_MSG DDCMSG_ERROR_MSG = new DDCMSG_ERROR_MSG();
    SCCMSG SCCMSG = new SCCMSG();
    SCCEXCP SCCEXCP = new SCCEXCP();
    SCCCALL SCCCALL = new SCCCALL();
    DDCSCINM DDCSCINM = new DDCSCINM();
    CICQACAC CICQACAC = new CICQACAC();
    SCCGWA SCCGWA;
    DDB5812_AWA_5812 DDB5812_AWA_5812;
    public void MP(SCCGWA SCCGWA) throws IOException,SQLException,Exception {
        this.SCCGWA = SCCGWA;
        CEP.TRC(SCCGWA);
        A000_INIT_PROCESS();
        B000_MAIN_PROCESS();
        CEP.TRC(SCCGWA, "DDOT5812 return!");
        Z_RET();
    }
    public void A000_INIT_PROCESS() throws IOException,SQLException,Exception {
        SCCGWA.COMM_AREA.AWA_AREA_PTR = SCCGWA.COMM_AREA.AWA_AREA_PTR.replaceAll("BODY>", "DDB5812_AWA_5812>");
        DDB5812_AWA_5812 = (DDB5812_AWA_5812) XStreamUtil.xmlToBean(SCCGWA.COMM_AREA.AWA_AREA_PTR);
    }
    public void B000_MAIN_PROCESS() throws IOException,SQLException,Exception {
        B100_CHECK_INPUT_DATA();
        B150_CHECK_AC_TYPE();
        B200_TRANS_DATA_PROC();
    }
    public void B100_CHECK_INPUT_DATA() throws IOException,SQLException,Exception {
        if (DDB5812_AWA_5812.AC_NO.trim().length() == 0 
            && DDB5812_AWA_5812.CARD_NO.trim().length() == 0) {
            WS_ERR_MSG = DDCMSG_ERROR_MSG.DD_AC_NO_M_INPUT;
            S000_ERR_MSG_PROC_CONTINUE();
        }
        if (DDB5812_AWA_5812.FUNC == ' ') {
            WS_ERR_MSG = DDCMSG_ERROR_MSG.DD_4011;
            S000_ERR_MSG_PROC_CONTINUE();
        }
        WS_ERR_MSG = DDCMSG_ERROR_MSG.DD_INPUT_DATA_ERR;
        S000_ERR_MSG_PROC_LAST();
    }
    public void B150_CHECK_AC_TYPE() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, CICQACAC);
        CICQACAC.FUNC = 'R';
        if (DDB5812_AWA_5812.AC_NO.trim().length() > 0) {
            CICQACAC.DATA.AGR_NO = DDB5812_AWA_5812.AC_NO;
        } else {
            CICQACAC.DATA.AGR_NO = DDB5812_AWA_5812.CARD_NO;
        }
        IBS.CALLCPN(SCCGWA, "CI-INQ-ACAC", CICQACAC);
        if (CICQACAC.RC.RC_CODE != 0) {
            CEP.ERR(SCCGWA, CICQACAC.RC);
        }
        if (CICQACAC.O_DATA.O_ACR_DATA.O_FRM_APP_ACR.equalsIgnoreCase("TD")) {
            CEP.ERR(SCCGWA, DDCMSG_ERROR_MSG.DD_MUST_DD_AC);
        }
    }
    public void B200_TRANS_DATA_PROC() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, DDCSCINM);
        DDCSCINM.INPUT_DATA.CARD_NO = DDB5812_AWA_5812.CARD_NO;
        DDCSCINM.INPUT_DATA.AC_NO = DDB5812_AWA_5812.AC_NO;
        DDCSCINM.INPUT_DATA.FUNC = DDB5812_AWA_5812.FUNC;
        DDCSCINM.INPUT_DATA.CCY = DDB5812_AWA_5812.CCY;
        DDCSCINM.INPUT_DATA.CCY_TYP = DDB5812_AWA_5812.CCY_TYP;
        S000_CALL_DDZSCINM();
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.CI_NO);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.AC_ENM);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.AC_CNM);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.PROD_CODE);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.AC_STS);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.AC_STS_WORD);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.OPEN_DATE);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.EFF_DATE);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.EXP_DATE);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.OPEN_DP);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.OPEN_TLR);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.CLOSE_DATE);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.LAST_TLR);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.LAST_DATE);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.LAST_FN_DATE);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.CARD_FLG);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.FRG_TYPE);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.FRG_CODE);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.FRG_OPEN_NO);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.CROS_DR_FLG);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.CROS_CR_FLG);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.SPC_KIND);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.AC_OIC_NO);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.BASE_AC);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.BASE_NO);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.BASE_AC_AREA);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.BASE_AC_BKNO);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.BASE_AC_OPDT);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.BASE_AC_BK);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.LICENSE_TYPE1);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.LICENSE_NO1);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.LICENSE_DATE1);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.LICENSE_TYPE2);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.LICENSE_NO2);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.LICENSE_DATE2);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.CORP_NAME1);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.CORP_NAME2);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.CORP_NAME3);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.CORP_NAME4);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.CORP_NAME5);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.ADMIN_ORGNAME);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.ADMIN_ORGCODE);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.ADMIN_NO);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.ADMIN_CORP_FLG);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.ADMIN_NAME);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.ADMIN_IDTYPE);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.ADMIN_IDNO);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.ADMIN_DATE);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.STAT_CODE);
        CEP.TRC(SCCGWA, DDCSCINM.OUTPUT_DATA.PAY_MTH);
    }
    public void S000_CALL_DDZSCINM() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "DD-SVR-CI-NAME", DDCSCINM);
    }
    public void S000_ERR_MSG_PROC_CONTINUE() throws IOException,SQLException,Exception {
        CEP.ERRC(SCCGWA, WS_ERR_MSG, WS_FLD_NO);
    }
    public void S000_ERR_MSG_PROC_LAST() throws IOException,SQLException,Exception {
        CEP.ERR(SCCGWA, WS_ERR_MSG);
    }
    public void Z_RET() throws IOException,SQLException,Exception {
        return;
    }
    public void B_DB_EXCP() throws IOException,SQLException,Exception {
        throw new SQLException(SCCGWA.e);
    }
}
