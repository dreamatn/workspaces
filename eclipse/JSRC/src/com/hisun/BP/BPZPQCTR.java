package com.hisun.BP;

import com.hisun.SC.*;

import java.io.IOException;
import java.sql.SQLException;

public class BPZPQCTR {
    int JIBS_tmp_int;
    boolean pgmRtn = false;
    String WS_ERR_MSG = " ";
    char WS_FOUND_FLAG = ' ';
    BPCMSG_ERROR_MSG BPCMSG_ERROR_MSG = new BPCMSG_ERROR_MSG();
    SCCEXCP SCCEXCP = new SCCEXCP();
    SCCCALL SCCCALL = new SCCCALL();
    SCCMSG SCCMSG = new SCCMSG();
    BPRFCTR BPRFCTR = new BPRFCTR();
    BPCRFCTR BPCRFCTR = new BPCRFCTR();
    BPRFSCH BPRFSCH = new BPRFSCH();
    BPCRFSCH BPCRFSCH = new BPCRFSCH();
    BPRFCPH BPRFCPH = new BPRFCPH();
    BPCRCPHM BPCRCPHM = new BPCRCPHM();
    SCCGWA SCCGWA;
    BPCPQCTR BPCPQCTR;
    public void MP(SCCGWA SCCGWA, BPCPQCTR BPCPQCTR) throws IOException,SQLException,Exception {
        this.SCCGWA = SCCGWA;
        this.BPCPQCTR = BPCPQCTR;
        CEP.TRC(SCCGWA);
        A000_INIT_PROC();
        if (pgmRtn) return;
        B000_MAIN_PROC();
        if (pgmRtn) return;
        CEP.TRC(SCCGWA, "BPZPQCTR return!");
        Z_RET();
        if (pgmRtn) return;
    }
    public void A000_INIT_PROC() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, BPCPQCTR.RC);
    }
    public void B000_MAIN_PROC() throws IOException,SQLException,Exception {
        B010_CHECK_INPUT();
        if (pgmRtn) return;
        B020_INQ_FEE_INFO();
        if (pgmRtn) return;
    }
    public void B010_CHECK_INPUT() throws IOException,SQLException,Exception {
        if (BPCPQCTR.KEY.CTRT_NO.trim().length() == 0 
            && BPCPQCTR.KEY.CTRT_NO.equalsIgnoreCase("0")) {
            IBS.CPY2CLS(SCCGWA, BPCMSG_ERROR_MSG.BP_INPUT_ERROR, BPCPQCTR.RC);
            Z_RET();
            if (pgmRtn) return;
        }
    }
    public void B020_INQ_FEE_INFO() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, BPCPQCTR.KEY.CTRT_NO);
        WS_FOUND_FLAG = 'Y';
        if (BPCPQCTR.FLAG.CTRT_FLAG == ' ' 
            || BPCPQCTR.FLAG.CTRT_FLAG == 'C') {
            IBS.init(SCCGWA, BPCRFCTR);
            IBS.init(SCCGWA, BPRFCTR);
            BPRFCTR.KEY.CTRT_NO = BPCPQCTR.KEY.CTRT_NO;
            BPCRFCTR.INFO.FUNC = 'Q';
            S000_CALL_BPZRFCTR();
            if (pgmRtn) return;
            if (WS_FOUND_FLAG == 'Y') {
                BPCPQCTR.FLAG.CTRT_FLAG = 'C';
                B020_01_MOVE_FCTR_DATA();
                if (pgmRtn) return;
            }
        }
        if (BPCPQCTR.FLAG.CTRT_FLAG == ' ' 
            || BPCPQCTR.FLAG.CTRT_FLAG == 'S') {
            BPCPQCTR.RC.RC_RTNCODE = 0;
            if (BPCPQCTR.FLAG.CTRT_FLAG == 'S') {
                WS_FOUND_FLAG = 'N';
            }
            if (WS_FOUND_FLAG == 'N') {
                WS_FOUND_FLAG = 'Y';
                IBS.init(SCCGWA, BPCRFSCH);
                IBS.init(SCCGWA, BPRFSCH);
                BPRFSCH.KEY.CTRT_NO = BPCPQCTR.KEY.CTRT_NO;
                BPCRFSCH.INFO.FUNC = 'Q';
                S000_CALL_BPZRFSCH();
                if (pgmRtn) return;
                if (WS_FOUND_FLAG == 'Y') {
                    BPCPQCTR.FLAG.CTRT_FLAG = 'S';
                    B020_02_MOVE_FSCH_DATA();
                    if (pgmRtn) return;
                }
            }
        }
        if (WS_FOUND_FLAG == 'N') {
            IBS.CPY2CLS(SCCGWA, BPCMSG_ERROR_MSG.BP_F_CTRT_NOTFND, BPCPQCTR.RC);
        }
        if (WS_FOUND_FLAG == 'Y') {
            IBS.init(SCCGWA, BPRFCPH);
            BPRFCPH.KEY.CTRT_NO = BPCPQCTR.KEY.CTRT_NO;
            BPRFCPH.KEY.VALUE_DATE = SCCGWA.COMM_AREA.AC_DATE;
            BPCRCPHM.INFO.FUNC = 'B';
            BPCRCPHM.INFO.OPT = '1';
            S000_CALL_BPZRCPHM();
            if (pgmRtn) return;
            if (WS_FOUND_FLAG == 'Y') {
                B020_03_MOVE_FCPH_DATA();
                if (pgmRtn) return;
            }
        }
        CEP.TRC(SCCGWA, BPCPQCTR.RC);
    }
    public void B020_01_MOVE_FCTR_DATA() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, BPCPQCTR.INFO);
        BPCPQCTR.INFO.CTRT_DESC = BPRFCTR.CTRT_DESC;
        BPCPQCTR.INFO.CI_NO = BPRFCTR.CI_NO;
        BPCPQCTR.INFO.CTRT_TYPE = BPRFCTR.CTRT_TYPE;
        BPCPQCTR.INFO.FEE_TYPE = BPRFCTR.FEE_TYPE;
        BPCPQCTR.INFO.BOOK_CENTRE = BPRFCTR.BOOK_CENTRE;
        BPCPQCTR.INFO.PRD_TYPE = BPRFCTR.PRD_TYPE;
        BPCPQCTR.INFO.START_DATE = BPRFCTR.START_DATE;
        BPCPQCTR.INFO.MATURITY_DATE = BPRFCTR.MATURITY_DATE;
        BPCPQCTR.INFO.HOLI_OVER = BPRFCTR.HOLI_OVER;
        BPCPQCTR.INFO.CAL_CODE1 = BPRFCTR.CAL_CODE1;
        BPCPQCTR.INFO.HOLI_METHOD = BPRFCTR.HOLI_METHOD;
        BPCPQCTR.INFO.CAL_CODE2 = BPRFCTR.CAL_CODE2;
        BPCPQCTR.INFO.PAY_IND = BPRFCTR.PAY_IND;
        BPCPQCTR.INFO.CASHFLOW_IND = BPRFCTR.CASHFLOW_IND;
        BPCPQCTR.INFO.BANK_PORTF = BPRFCTR.BANK_PORTF;
        BPCPQCTR.INFO.PAYMENT_METHOD = BPRFCTR.PAYMENT_METHOD;
        BPCPQCTR.INFO.ACCRUAL_TYPE = BPRFCTR.ACCRUAL_TYPE;
        BPCPQCTR.INFO.PRICE_METHOD = BPRFCTR.PRICE_METHOD;
        BPCPQCTR.INFO.TXN_CCY = BPRFCTR.TXN_CCY;
        BPCPQCTR.INFO.TXN_AMT = BPRFCTR.PRIN_AMT;
        BPCPQCTR.INFO.REL_CTRT_NO = BPRFCTR.REL_CTRT_NO;
        BPCPQCTR.INFO.AMT_TYPE = BPRFCTR.AMT_TYPE;
        BPCPQCTR.INFO.AGGR_TYPE = BPRFCTR.AGGR_TYPE;
        BPCPQCTR.INFO.REF_CCY = BPRFCTR.REF_CCY;
        BPCPQCTR.INFO.REF_METHOD = BPRFCTR.REF_METHOD;
        BPCPQCTR.INFO.CHARGE_CCY = BPRFCTR.CHARGE_CCY;
        BPCPQCTR.INFO.CHARGE_AMT = BPRFCTR.CHARGE_AMT;
        BPCPQCTR.INFO.CHARGE_METHOD = BPRFCTR.CHARGE_METHOD;
        BPCPQCTR.INFO.CR_TO_BR = BPRFCTR.CR_TO_BR;
        BPCPQCTR.INFO.CHARGE_AC = BPRFCTR.CHARGE_AC;
        BPCPQCTR.INFO.CHQ_NO = BPRFCTR.CHQ_NO;
        BPCPQCTR.INFO.NOSTRO_AC = BPRFCTR.NOSTRO_AC;
        BPCPQCTR.INFO.GL_MASTER1 = BPRFCTR.GL_MASTER1;
        BPCPQCTR.INFO.GL_MASTER2 = BPRFCTR.GL_MASTER2;
        BPCPQCTR.INFO.GL_MASTER3 = BPRFCTR.GL_MASTER3;
        BPCPQCTR.INFO.GL_MASTER4 = BPRFCTR.GL_MASTER4;
        BPCPQCTR.INFO.OIC_NO1 = "" + BPRFCTR.OIC_NO1;
        JIBS_tmp_int = BPCPQCTR.INFO.OIC_NO1.length();
        for (int i=0;i<6-JIBS_tmp_int;i++) BPCPQCTR.INFO.OIC_NO1 = "0" + BPCPQCTR.INFO.OIC_NO1;
        if (BPRFCTR.OIC_CENTRE1.trim().length() == 0) BPCPQCTR.INFO.OIC_CENTRE1 = 0;
        else BPCPQCTR.INFO.OIC_CENTRE1 = Integer.parseInt(BPRFCTR.OIC_CENTRE1);
        BPCPQCTR.INFO.OIC_PCT1 = BPRFCTR.OIC_PCT1;
        BPCPQCTR.INFO.OIC_NO2 = "" + BPRFCTR.OIC_NO2;
        JIBS_tmp_int = BPCPQCTR.INFO.OIC_NO2.length();
        for (int i=0;i<6-JIBS_tmp_int;i++) BPCPQCTR.INFO.OIC_NO2 = "0" + BPCPQCTR.INFO.OIC_NO2;
        if (BPRFCTR.OIC_CENTRE2.trim().length() == 0) BPCPQCTR.INFO.OIC_CENTRE2 = 0;
        else BPCPQCTR.INFO.OIC_CENTRE2 = Integer.parseInt(BPRFCTR.OIC_CENTRE2);
        BPCPQCTR.INFO.OIC_PCT2 = BPRFCTR.OIC_PCT2;
        BPCPQCTR.INFO.OIC_NO3 = "" + BPRFCTR.OIC_NO3;
        JIBS_tmp_int = BPCPQCTR.INFO.OIC_NO3.length();
        for (int i=0;i<6-JIBS_tmp_int;i++) BPCPQCTR.INFO.OIC_NO3 = "0" + BPCPQCTR.INFO.OIC_NO3;
        if (BPRFCTR.OIC_CENTRE3.trim().length() == 0) BPCPQCTR.INFO.OIC_CENTRE3 = 0;
        else BPCPQCTR.INFO.OIC_CENTRE3 = Integer.parseInt(BPRFCTR.OIC_CENTRE3);
        BPCPQCTR.INFO.OIC_PCT3 = BPRFCTR.OIC_PCT3;
        BPCPQCTR.INFO.FEE_STATUS = BPRFCTR.FEE_STATUS;
        BPCPQCTR.INFO.REMARK = BPRFCTR.REMARK;
        BPCPQCTR.INFO.JNL_NO = BPRFCTR.JNL_NO;
        BPCPQCTR.INFO.REAL_AC_DATE = BPRFCTR.REAL_AC_DATE;
        BPCPQCTR.INFO.VOUCHER_NO = BPRFCTR.VOUCHER_NO;
        BPCPQCTR.INFO.CREATE_DATE = BPRFCTR.CREATE_DATE;
        BPCPQCTR.INFO.CREATE_TELL = BPRFCTR.CREATE_TELL;
        BPCPQCTR.INFO.UPDTBL_DATE = BPRFCTR.UPDTBL_DATE;
        BPCPQCTR.INFO.LAST_TELL = BPRFCTR.LAST_TELL;
        BPCPQCTR.INFO.SUP_TEL1 = BPRFCTR.SUP_TEL1;
        BPCPQCTR.INFO.SUP_TEL2 = BPRFCTR.SUP_TEL2;
    }
    public void B020_02_MOVE_FSCH_DATA() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, BPCPQCTR.INFO);
        BPCPQCTR.INFO.CTRT_DESC = BPRFSCH.CTRT_DESC;
        BPCPQCTR.INFO.CI_NO = BPRFSCH.CI_NO;
        BPCPQCTR.INFO.CTRT_TYPE = BPRFSCH.CTRT_TYPE;
        BPCPQCTR.INFO.FEE_TYPE = BPRFSCH.FEE_TYPE;
        BPCPQCTR.INFO.BOOK_CENTRE = BPRFSCH.BOOK_CENTRE;
        BPCPQCTR.INFO.PRD_TYPE = BPRFSCH.PRD_TYPE;
        BPCPQCTR.INFO.START_DATE = BPRFSCH.START_DATE;
        BPCPQCTR.INFO.MATURITY_DATE = BPRFSCH.MATURITY_DATE;
        BPCPQCTR.INFO.SETTLE_FREQ = BPRFSCH.SETTLE_FREQ;
        BPCPQCTR.INFO.FREQ_COUNT = BPRFSCH.FREQ_COUNT;
        BPCPQCTR.INFO.FIRST_CHG_DATE = BPRFSCH.FIRST_CHG_DATE;
        BPCPQCTR.INFO.HOLI_OVER = BPRFSCH.HOLI_OVER;
        BPCPQCTR.INFO.CAL_CODE1 = BPRFSCH.CAL_CODE1;
        BPCPQCTR.INFO.HOLI_METHOD = BPRFSCH.HOLI_METHOD;
        BPCPQCTR.INFO.CAL_CODE2 = BPRFSCH.CAL_CODE2;
        BPCPQCTR.INFO.PAY_IND = BPRFSCH.PAY_IND;
        BPCPQCTR.INFO.CASHFLOW_IND = BPRFSCH.CASHFLOW_IND;
        BPCPQCTR.INFO.BANK_PORTF = BPRFSCH.BANK_PORTF;
        BPCPQCTR.INFO.ACCRUAL_TYPE = BPRFSCH.ACCRUAL_TYPE;
        BPCPQCTR.INFO.PRICE_METHOD = BPRFSCH.PRICE_METHOD;
        BPCPQCTR.INFO.TXN_CCY = BPRFSCH.TXN_CCY;
        BPCPQCTR.INFO.TXN_AMT = BPRFSCH.PRIN_AMT;
        BPCPQCTR.INFO.REL_CTRT_NO = BPRFSCH.REL_CTRT_NO;
        BPCPQCTR.INFO.AMT_TYPE = BPRFSCH.AMT_TYPE;
        BPCPQCTR.INFO.AGGR_TYPE = BPRFSCH.AGGR_TYPE;
        BPCPQCTR.INFO.REF_CCY = BPRFSCH.REF_CCY;
        BPCPQCTR.INFO.REF_METHOD = BPRFSCH.REF_METHOD;
        BPCPQCTR.INFO.AUTO_CHG_FLAG = BPRFSCH.AUTO_CHG_FLAG;
        BPCPQCTR.INFO.CHARGE_CCY = BPRFSCH.CHARGE_CCY;
        BPCPQCTR.INFO.CHARGE_AMT = BPRFSCH.CHARGE_AMT;
        BPCPQCTR.INFO.CHARGE_METHOD = BPRFSCH.CHARGE_METHOD;
        BPCPQCTR.INFO.CR_TO_BR = BPRFSCH.CR_TO_BR;
        BPCPQCTR.INFO.CHARGE_AC = BPRFSCH.CHARGE_AC;
        BPCPQCTR.INFO.CHQ_NO = BPRFSCH.CHQ_NO;
        BPCPQCTR.INFO.NOSTRO_AC = BPRFSCH.NOSTRO_AC;
        BPCPQCTR.INFO.GL_MASTER1 = BPRFSCH.GL_MASTER1;
        BPCPQCTR.INFO.GL_MASTER2 = BPRFSCH.GL_MASTER2;
        BPCPQCTR.INFO.GL_MASTER3 = BPRFSCH.GL_MASTER3;
        BPCPQCTR.INFO.GL_MASTER4 = BPRFSCH.GL_MASTER4;
        BPCPQCTR.INFO.FEE_STATUS = BPRFSCH.FEE_STATUS;
        BPCPQCTR.INFO.REMARK = BPRFSCH.REMARK;
        BPCPQCTR.INFO.REAL_AC_DATE = BPRFSCH.LAST_SETT_DATE;
        BPCPQCTR.INFO.CREATE_DATE = BPRFSCH.CREATE_DATE;
        BPCPQCTR.INFO.CREATE_TELL = BPRFSCH.CREATE_TELL;
        BPCPQCTR.INFO.UPDTBL_DATE = BPRFSCH.UPDTBL_DATE;
        BPCPQCTR.INFO.LAST_TELL = BPRFSCH.LAST_TELL;
        BPCPQCTR.INFO.SUP_TEL1 = BPRFSCH.SUP_TEL1;
        BPCPQCTR.INFO.SUP_TEL2 = BPRFSCH.SUP_TEL2;
    }
    public void B020_03_MOVE_FCPH_DATA() throws IOException,SQLException,Exception {
        BPCPQCTR.INFO.MULTI = (short) BPRFCPH.MULTI;
        if (BPRFCPH.INT_BAS.trim().length() == 0) BPCPQCTR.INFO.INT_BAS = 0;
        else BPCPQCTR.INFO.INT_BAS = Short.parseShort(BPRFCPH.INT_BAS);
        BPCPQCTR.INFO.REF_ARRAY[1-1].UP_AMT = BPRFCPH.UP_AMT_1;
        BPCPQCTR.INFO.REF_ARRAY[1-1].UP_PCT = BPRFCPH.UP_PCT_1;
        BPCPQCTR.INFO.REF_ARRAY[1-1].FEE_AMT = BPRFCPH.FEE_AMT_1;
        BPCPQCTR.INFO.REF_ARRAY[1-1].FEE_RATE = BPRFCPH.FEE_RATE_1;
        BPCPQCTR.INFO.REF_ARRAY[2-1].UP_AMT = BPRFCPH.UP_AMT_2;
        BPCPQCTR.INFO.REF_ARRAY[2-1].UP_PCT = BPRFCPH.UP_PCT_2;
        BPCPQCTR.INFO.REF_ARRAY[2-1].FEE_AMT = BPRFCPH.FEE_AMT_2;
        BPCPQCTR.INFO.REF_ARRAY[2-1].FEE_RATE = BPRFCPH.FEE_RATE_2;
        BPCPQCTR.INFO.REF_ARRAY[3-1].UP_AMT = BPRFCPH.UP_AMT_3;
        BPCPQCTR.INFO.REF_ARRAY[3-1].UP_PCT = BPRFCPH.UP_PCT_3;
        BPCPQCTR.INFO.REF_ARRAY[3-1].FEE_AMT = BPRFCPH.FEE_AMT_3;
        BPCPQCTR.INFO.REF_ARRAY[3-1].FEE_RATE = BPRFCPH.FEE_RATE_3;
        BPCPQCTR.INFO.REF_ARRAY[4-1].UP_AMT = BPRFCPH.UP_AMT_4;
        BPCPQCTR.INFO.REF_ARRAY[4-1].UP_PCT = BPRFCPH.UP_PCT_4;
        BPCPQCTR.INFO.REF_ARRAY[4-1].FEE_AMT = BPRFCPH.FEE_AMT_4;
        BPCPQCTR.INFO.REF_ARRAY[4-1].FEE_RATE = BPRFCPH.FEE_RATE_4;
        BPCPQCTR.INFO.REF_ARRAY[5-1].UP_AMT = BPRFCPH.UP_AMT_5;
        BPCPQCTR.INFO.REF_ARRAY[5-1].UP_PCT = BPRFCPH.UP_PCT_5;
        BPCPQCTR.INFO.REF_ARRAY[5-1].FEE_AMT = BPRFCPH.FEE_AMT_5;
        BPCPQCTR.INFO.REF_ARRAY[5-1].FEE_RATE = BPRFCPH.FEE_RATE_5;
    }
    public void S000_CALL_BPZRFCTR() throws IOException,SQLException,Exception {
        BPCRFCTR.INFO.POINTER = BPRFCTR;
        BPCRFCTR.INFO.REC_LEN = 889;
        IBS.CALLCPN(SCCGWA, "BP-R-MGM-FEECTR", BPCRFCTR);
        if (BPCRFCTR.RC.RC_CODE != 0) {
            WS_FOUND_FLAG = 'N';
        }
        if (BPCRFCTR.RETURN_INFO != 'F') {
            WS_FOUND_FLAG = 'N';
        }
    }
    public void S000_CALL_BPZRFSCH() throws IOException,SQLException,Exception {
        BPCRFSCH.INFO.POINTER = BPRFSCH;
        BPCRFSCH.INFO.REC_LEN = 816;
        IBS.CALLCPN(SCCGWA, "BP-R-MGM-FEESCH", BPCRFSCH);
        if (BPCRFSCH.RC.RC_CODE != 0) {
            WS_FOUND_FLAG = 'N';
        }
        if (BPCRFSCH.RETURN_INFO != 'F') {
            WS_FOUND_FLAG = 'N';
        }
    }
    public void S000_CALL_BPZRCPHM() throws IOException,SQLException,Exception {
        BPCRCPHM.INFO.POINTER = BPRFCPH;
        BPCRCPHM.INFO.REC_LEN = 509;
        CEP.TRC(SCCGWA, BPCRCPHM.INFO.REC_LEN);
        IBS.CALLCPN(SCCGWA, "BP-R-MGM-CAL-PARM", BPCRCPHM);
        if (BPCRCPHM.RC.RC_CODE != 0) {
            WS_FOUND_FLAG = 'N';
        }
        if (BPCRCPHM.RETURN_INFO != 'F') {
            WS_FOUND_FLAG = 'N';
        }
    }
    public void S000_ERR_MSG_PROC() throws IOException,SQLException,Exception {
        CEP.ERR(SCCGWA, WS_ERR_MSG);
    }
    public void Z_RET() throws IOException,SQLException,Exception {
    if (SCCGWA.COMM_AREA.BSP_FLG.equalsIgnoreCase("BSP") || SCCGWA.COMM_AREA.CHNL.equalsIgnoreCase("BAT")) { //FROM #IFDEF BAT
        if (BPCPQCTR.RC.RC_RTNCODE != 0) {
            CEP.TRC(SCCGWA, " BPCPQCTR = ");
            CEP.TRC(SCCGWA, BPCPQCTR);
        }
    } //FROM #ENDIF
        pgmRtn = true;
        return;
    }
    public void B_DB_EXCP() throws IOException,SQLException,Exception {
        throw new SQLException(SCCGWA.e);
    }
}
