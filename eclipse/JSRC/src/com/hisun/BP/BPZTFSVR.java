package com.hisun.BP;

import java.io.IOException;
import java.sql.SQLException;

import com.hisun.SC.SCCCALL;
import com.hisun.SC.SCCEXCP;
import com.hisun.SC.SCCGBPA_BP_AREA;
import com.hisun.SC.SCCGSCA_SC_AREA;
import com.hisun.SC.SCCGWA;
import com.hisun.SC.SCCMSG;

public class BPZTFSVR {
    boolean pgmRtn = false;
    char WS_TBL_FARM_FLAG = ' ';
    BPCMSG_ERROR_MSG BPCMSG_ERROR_MSG = new BPCMSG_ERROR_MSG();
    SCCEXCP SCCEXCP = new SCCEXCP();
    SCCCALL SCCCALL = new SCCCALL();
    SCCMSG SCCMSG = new SCCMSG();
    BPRFSVR BPRFSVR = new BPRFSVR();
    SCCGWA SCCGWA;
    SCCGSCA_SC_AREA GWA_SC_AREA;
    SCCGBPA_BP_AREA GWA_BP_AREA;
    BPCTFSVR BPCTFSVR;
    BPVFEXP BPVVSVR;
    public void MP(SCCGWA SCCGWA, BPCTFSVR BPCTFSVR) throws IOException,SQLException,Exception {
        this.SCCGWA = SCCGWA;
        this.BPCTFSVR = BPCTFSVR;
        CEP.TRC(SCCGWA);
        A000_INIT_PROC();
        if (pgmRtn) return;
        B000_MAIN_PROC();
        if (pgmRtn) return;
        CEP.TRC(SCCGWA, "BPZTFSVR return!");
        Z_RET();
        if (pgmRtn) return;
        JIBS_RETURN();
    }
    public void A000_INIT_PROC() throws IOException,SQLException,Exception {
        GWA_BP_AREA = (SCCGBPA_BP_AREA) SCCGWA.BP_AREA_PTR;
        GWA_SC_AREA = (SCCGSCA_SC_AREA) SCCGWA.SC_AREA_PTR;
        BPVVSVR = (BPVFEXP) BPCTFSVR.INFO.POINTER;
        IBS.init(SCCGWA, BPCTFSVR.RC);
        CEP.TRC(SCCGWA, BPCTFSVR.INFO.REC_LEN);
        CEP.TRC(SCCGWA, BPVVSVR);
    }
    public void B000_MAIN_PROC() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, BPCTFSVR.INFO.FUNC);
        R000_TRANS_DATA_TO_BPRFSVR();
        if (pgmRtn) return;
        if (BPCTFSVR.INFO.FUNC == '0') {
            B010_CREATE_RECORD_PROC();
            if (pgmRtn) return;
        } else if (BPCTFSVR.INFO.FUNC == '4') {
            B020_READUPD_RECORD_PROC();
            if (pgmRtn) return;
        } else if (BPCTFSVR.INFO.FUNC == '3') {
            B030_QUERY_RECORD_PROC();
            if (pgmRtn) return;
        } else if (BPCTFSVR.INFO.FUNC == '1') {
            B040_UPDATE_RECORD_PROC();
            if (pgmRtn) return;
        } else if (BPCTFSVR.INFO.FUNC == '2') {
            B050_DELETE_RECORD_PROC();
            if (pgmRtn) return;
        } else if (BPCTFSVR.INFO.FUNC == '5') {
            B060_BROWSE_RECORD_PROC();
            if (pgmRtn) return;
        } else {
            IBS.init(SCCGWA, SCCEXCP);
            SCCEXCP.MSG_TEXT.KEY_OR_OTHER = "INVALID FUNC(" + BPCTFSVR.INFO.FUNC + ")";
            CEP.EXCP(SCCGWA, SCCEXCP.MSG_TEXT.KEY_OR_OTHER);
        }
        R000_TRANS_DATA_TO_BPVFSVR();
        if (pgmRtn) return;
    }
    public void B010_CREATE_RECORD_PROC() throws IOException,SQLException,Exception {
        T000_WRITE_BPTFSVR();
        if (pgmRtn) return;
    }
    public void B020_READUPD_RECORD_PROC() throws IOException,SQLException,Exception {
        T000_READ_BPTFSVR_UPD();
        if (pgmRtn) return;
        if (WS_TBL_FARM_FLAG == 'D') {
            IBS.CPY2CLS(SCCGWA, BPCMSG_ERROR_MSG.BP_FARM_NOTFND, BPCTFSVR.RC);
            Z_RET();
            if (pgmRtn) return;
        }
    }
    public void B030_QUERY_RECORD_PROC() throws IOException,SQLException,Exception {
        T000_READ_BPTFSVR();
        if (pgmRtn) return;
    }
    public void B040_UPDATE_RECORD_PROC() throws IOException,SQLException,Exception {
        T000_REWRITE_BPTFSVR();
        if (pgmRtn) return;
    }
    public void B050_DELETE_RECORD_PROC() throws IOException,SQLException,Exception {
        T000_DELETE_BPTFSVR();
        if (pgmRtn) return;
    }
    public void B060_BROWSE_RECORD_PROC() throws IOException,SQLException,Exception {
        if (BPCTFSVR.INFO.OPT == '0') {
            T000_STARTBR_BPTFSVR();
            if (pgmRtn) return;
        } else if (BPCTFSVR.INFO.OPT == '1') {
            T000_READNEXT_BPTFSVR();
            if (pgmRtn) return;
        } else if (BPCTFSVR.INFO.OPT == '2') {
            T000_ENDBR_BPTFSVR();
            if (pgmRtn) return;
        } else {
            IBS.init(SCCGWA, SCCEXCP);
            SCCEXCP.MSG_TEXT.KEY_OR_OTHER = "INVALID OPT (" + BPCTFSVR.INFO.OPT + ")";
            CEP.EXCP(SCCGWA, SCCEXCP.MSG_TEXT.KEY_OR_OTHER);
        }
    }
    public void R000_TRANS_DATA_TO_BPRFSVR() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, BPRFSVR);
        BPRFSVR.KEY.IBS_AC_BK = SCCGWA.COMM_AREA.TR_BANK;
        BPRFSVR.KEY.SVR_NO = BPVVSVR.KEY.SVR_NO;
        BPRFSVR.FEE_CODE1 = BPVVSVR.VAL.DATA[1-1].FEE_CODE;
        BPRFSVR.PROD_CODE1 = BPVVSVR.VAL.DATA[1-1].PROD_CODE;
        BPRFSVR.BVF_CODE1 = BPVVSVR.VAL.DATA[1-1].BVF_CODE;
        BPRFSVR.FEE_ATTR1 = BPVVSVR.VAL.DATA[1-1].FEE_ATTR;
        BPRFSVR.FEE_CODE2 = BPVVSVR.VAL.DATA[2-1].FEE_CODE;
        BPRFSVR.PROD_CODE2 = BPVVSVR.VAL.DATA[2-1].PROD_CODE;
        BPRFSVR.BVF_CODE2 = BPVVSVR.VAL.DATA[2-1].BVF_CODE;
        BPRFSVR.FEE_ATTR2 = BPVVSVR.VAL.DATA[2-1].FEE_ATTR;
        BPRFSVR.FEE_CODE3 = BPVVSVR.VAL.DATA[3-1].FEE_CODE;
        BPRFSVR.PROD_CODE3 = BPVVSVR.VAL.DATA[3-1].PROD_CODE;
        BPRFSVR.BVF_CODE3 = BPVVSVR.VAL.DATA[3-1].BVF_CODE;
        BPRFSVR.FEE_ATTR3 = BPVVSVR.VAL.DATA[3-1].FEE_ATTR;
        BPRFSVR.FEE_CODE4 = BPVVSVR.VAL.DATA[4-1].FEE_CODE;
        BPRFSVR.PROD_CODE4 = BPVVSVR.VAL.DATA[4-1].PROD_CODE;
        BPRFSVR.BVF_CODE4 = BPVVSVR.VAL.DATA[4-1].BVF_CODE;
        BPRFSVR.FEE_ATTR4 = BPVVSVR.VAL.DATA[4-1].FEE_ATTR;
        BPRFSVR.FEE_CODE5 = BPVVSVR.VAL.DATA[5-1].FEE_CODE;
        BPRFSVR.PROD_CODE5 = BPVVSVR.VAL.DATA[5-1].PROD_CODE;
        BPRFSVR.BVF_CODE5 = BPVVSVR.VAL.DATA[5-1].BVF_CODE;
        BPRFSVR.FEE_ATTR5 = BPVVSVR.VAL.DATA[5-1].FEE_ATTR;
        BPRFSVR.FEE_CODE6 = BPVVSVR.VAL.DATA[6-1].FEE_CODE;
        BPRFSVR.PROD_CODE6 = BPVVSVR.VAL.DATA[6-1].PROD_CODE;
        BPRFSVR.BVF_CODE6 = BPVVSVR.VAL.DATA[6-1].BVF_CODE;
        BPRFSVR.FEE_ATTR6 = BPVVSVR.VAL.DATA[6-1].FEE_ATTR;
        BPRFSVR.FEE_CODE7 = BPVVSVR.VAL.DATA[7-1].FEE_CODE;
        BPRFSVR.PROD_CODE7 = BPVVSVR.VAL.DATA[7-1].PROD_CODE;
        BPRFSVR.BVF_CODE7 = BPVVSVR.VAL.DATA[7-1].BVF_CODE;
        BPRFSVR.FEE_ATTR7 = BPVVSVR.VAL.DATA[7-1].FEE_ATTR;
        BPRFSVR.FEE_CODE8 = BPVVSVR.VAL.DATA[8-1].FEE_CODE;
        BPRFSVR.PROD_CODE8 = BPVVSVR.VAL.DATA[8-1].PROD_CODE;
        BPRFSVR.BVF_CODE8 = BPVVSVR.VAL.DATA[8-1].BVF_CODE;
        BPRFSVR.FEE_ATTR8 = BPVVSVR.VAL.DATA[8-1].FEE_ATTR;
        BPRFSVR.FEE_CODE9 = BPVVSVR.VAL.DATA[9-1].FEE_CODE;
        BPRFSVR.PROD_CODE9 = BPVVSVR.VAL.DATA[9-1].PROD_CODE;
        BPRFSVR.BVF_CODE9 = BPVVSVR.VAL.DATA[9-1].BVF_CODE;
        BPRFSVR.FEE_ATTR9 = BPVVSVR.VAL.DATA[9-1].FEE_ATTR;
        BPRFSVR.FEE_CODE10 = BPVVSVR.VAL.DATA[10-1].FEE_CODE;
        BPRFSVR.PROD_CODE10 = BPVVSVR.VAL.DATA[10-1].PROD_CODE;
        BPRFSVR.BVF_CODE10 = BPVVSVR.VAL.DATA[10-1].BVF_CODE;
        BPRFSVR.FEE_ATTR10 = BPVVSVR.VAL.DATA[10-1].FEE_ATTR;
        BPRFSVR.FEE_CODE11 = BPVVSVR.VAL.DATA[11-1].FEE_CODE;
        BPRFSVR.PROD_CODE11 = BPVVSVR.VAL.DATA[11-1].PROD_CODE;
        BPRFSVR.BVF_CODE11 = BPVVSVR.VAL.DATA[11-1].BVF_CODE;
        BPRFSVR.FEE_ATTR11 = BPVVSVR.VAL.DATA[11-1].FEE_ATTR;
        BPRFSVR.FEE_CODE12 = BPVVSVR.VAL.DATA[12-1].FEE_CODE;
        BPRFSVR.PROD_CODE12 = BPVVSVR.VAL.DATA[12-1].PROD_CODE;
        BPRFSVR.BVF_CODE12 = BPVVSVR.VAL.DATA[12-1].BVF_CODE;
        BPRFSVR.FEE_ATTR12 = BPVVSVR.VAL.DATA[12-1].FEE_ATTR;
        BPRFSVR.FEE_CODE13 = BPVVSVR.VAL.DATA[13-1].FEE_CODE;
        BPRFSVR.PROD_CODE13 = BPVVSVR.VAL.DATA[13-1].PROD_CODE;
        BPRFSVR.BVF_CODE13 = BPVVSVR.VAL.DATA[13-1].BVF_CODE;
        BPRFSVR.FEE_ATTR13 = BPVVSVR.VAL.DATA[13-1].FEE_ATTR;
        BPRFSVR.FEE_CODE14 = BPVVSVR.VAL.DATA[14-1].FEE_CODE;
        BPRFSVR.PROD_CODE14 = BPVVSVR.VAL.DATA[14-1].PROD_CODE;
        BPRFSVR.BVF_CODE14 = BPVVSVR.VAL.DATA[14-1].BVF_CODE;
        BPRFSVR.FEE_ATTR14 = BPVVSVR.VAL.DATA[14-1].FEE_ATTR;
        BPRFSVR.FEE_CODE15 = BPVVSVR.VAL.DATA[15-1].FEE_CODE;
        BPRFSVR.PROD_CODE15 = BPVVSVR.VAL.DATA[15-1].PROD_CODE;
        BPRFSVR.BVF_CODE15 = BPVVSVR.VAL.DATA[15-1].BVF_CODE;
        BPRFSVR.FEE_ATTR15 = BPVVSVR.VAL.DATA[15-1].FEE_ATTR;
        BPRFSVR.FEE_CODE16 = BPVVSVR.VAL.DATA[16-1].FEE_CODE;
        BPRFSVR.PROD_CODE16 = BPVVSVR.VAL.DATA[16-1].PROD_CODE;
        BPRFSVR.BVF_CODE16 = BPVVSVR.VAL.DATA[16-1].BVF_CODE;
        BPRFSVR.FEE_ATTR16 = BPVVSVR.VAL.DATA[16-1].FEE_ATTR;
        BPRFSVR.FEE_CODE17 = BPVVSVR.VAL.DATA[17-1].FEE_CODE;
        BPRFSVR.PROD_CODE17 = BPVVSVR.VAL.DATA[17-1].PROD_CODE;
        BPRFSVR.BVF_CODE17 = BPVVSVR.VAL.DATA[17-1].BVF_CODE;
        BPRFSVR.FEE_ATTR17 = BPVVSVR.VAL.DATA[17-1].FEE_ATTR;
        BPRFSVR.FEE_CODE18 = BPVVSVR.VAL.DATA[18-1].FEE_CODE;
        BPRFSVR.PROD_CODE18 = BPVVSVR.VAL.DATA[18-1].PROD_CODE;
        BPRFSVR.BVF_CODE18 = BPVVSVR.VAL.DATA[18-1].BVF_CODE;
        BPRFSVR.FEE_ATTR18 = BPVVSVR.VAL.DATA[18-1].FEE_ATTR;
        BPRFSVR.FEE_CODE19 = BPVVSVR.VAL.DATA[19-1].FEE_CODE;
        BPRFSVR.PROD_CODE19 = BPVVSVR.VAL.DATA[19-1].PROD_CODE;
        BPRFSVR.BVF_CODE19 = BPVVSVR.VAL.DATA[19-1].BVF_CODE;
        BPRFSVR.FEE_ATTR19 = BPVVSVR.VAL.DATA[19-1].FEE_ATTR;
        BPRFSVR.FEE_CODE20 = BPVVSVR.VAL.DATA[20-1].FEE_CODE;
        BPRFSVR.PROD_CODE20 = BPVVSVR.VAL.DATA[20-1].PROD_CODE;
        BPRFSVR.BVF_CODE20 = BPVVSVR.VAL.DATA[20-1].BVF_CODE;
        BPRFSVR.FEE_ATTR20 = BPVVSVR.VAL.DATA[20-1].FEE_ATTR;
        BPRFSVR.EFF_DATE = BPVVSVR.VAL.EFF_DATE;
        BPRFSVR.EXP_DATE = BPVVSVR.VAL.EXP_DATE;
        BPRFSVR.AUTO_FLG = BPVVSVR.VAL.AUT_FLG;
        BPRFSVR.DRMCR_FLG = BPVVSVR.VAL.DRMCR_FLG;
        BPRFSVR.MATCH_FLG = BPVVSVR.VAL.MATCH_FLG;
    }
    public void R000_TRANS_DATA_TO_BPVFSVR() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, BPVVSVR);
        BPVVSVR.KEY.SVR_NO = BPRFSVR.KEY.SVR_NO;
        BPVVSVR.VAL.DATA[1-1].FEE_CODE = BPRFSVR.FEE_CODE1;
        BPVVSVR.VAL.DATA[1-1].PROD_CODE = BPRFSVR.PROD_CODE1;
        BPVVSVR.VAL.DATA[1-1].BVF_CODE = BPRFSVR.BVF_CODE1;
        BPVVSVR.VAL.DATA[1-1].FEE_ATTR = BPRFSVR.FEE_ATTR1;
