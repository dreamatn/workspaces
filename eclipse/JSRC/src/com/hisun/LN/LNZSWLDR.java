package com.hisun.LN;

import java.io.IOException;
import java.sql.SQLException;

import com.hisun.BP.BPCPNHIS;
import com.hisun.BP.BPCUMPRT;
import com.hisun.SC.SCCCALL;
import com.hisun.SC.SCCEXCP;
import com.hisun.SC.SCCGWA;

public class LNZSWLDR {
    boolean pgmRtn = false;
    String K_AC_TYPE = "13";
    String K_HIS_RMKS = "ACCRUAL DRAWDOWN CONTRACT DELETION";
    String K_HIS_CPB_NM = "LNCHLNCL";
    char WS_CCY_ID = ' ';
    int WS_I = 0;
    int WS_LEN = 0;
    char WS_UPDATE_FLG = ' ';
    char WS_FOUND_FLG = ' ';
    LNCMSG_ERROR_MSG LNCMSG_ERROR_MSG = new LNCMSG_ERROR_MSG();
    SCCEXCP SCCEXCP = new SCCEXCP();
    SCCCALL SCCCALL = new SCCCALL();
    LNCSLNCL LNCSLNCL = new LNCSLNCL();
    LNCSWLDR LNCSDWRV = new LNCSWLDR();
    LNCSPREV LNCSPREV = new LNCSPREV();
    LNCIPART LNCIPART = new LNCIPART();
    LNCHLNCL LNCHLNCL = new LNCHLNCL();
    LNCHLNCL LNCLNCLN = new LNCHLNCL();
    LNCHLNCL LNCLNCLO = new LNCHLNCL();
    LNCICTLM LNCICTLM = new LNCICTLM();
    BPCPNHIS BPCPNHIS = new BPCPNHIS();
    BPCUMPRT BPCUMPRT = new BPCUMPRT();
    SCCGWA SCCGWA;
    LNCSWLDR LNCSWLDR;
    public void MP(SCCGWA SCCGWA, LNCSWLDR LNCSWLDR) throws IOException,SQLException,Exception {
        this.SCCGWA = SCCGWA;
        this.LNCSWLDR = LNCSWLDR;
        CEP.TRC(SCCGWA);
        A00_INIT_PROC();
        if (pgmRtn) return;
        B00_MAIN_PROC();
        if (pgmRtn) return;
        CEP.TRC(SCCGWA, "LNZSWLDR return!");
        Z_RET();
        if (pgmRtn) return;
        JIBS_RETURN();
    }
    public void A00_INIT_PROC() throws IOException,SQLException,Exception {
        LNCSWLDR.RC.RC_APP = "LN";
        LNCSWLDR.RC.RC_RTNCODE = 0;
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.CTA_NO);
    }
    public void B00_MAIN_PROC() throws IOException,SQLException,Exception {
        B000_CHECK();
        if (pgmRtn) return;
        B000_MAIN_PROC();
        if (pgmRtn) return;
    }
    public void B000_CHECK() throws IOException,SQLException,Exception {
        B100_CHECK_INPUT_PROC();
        if (pgmRtn) return;
        B220_GET_ICTL_INF();
        if (pgmRtn) return;
    }
    public void B100_CHECK_INPUT_PROC() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.CTA_NO);
        if (LNCSWLDR.COMM_DATA.CTA_NO.trim().length() == 0) {
            IBS.CPY2CLS(SCCGWA, LNCMSG_ERROR_MSG.LN_CONT_NO_MUST_INPUT, LNCSWLDR.RC);
            Z_RET();
            if (pgmRtn) return;
        }
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.RV_DATE);
        if (LNCSWLDR.COMM_DATA.RV_DATE == 0) {
            IBS.CPY2CLS(SCCGWA, LNCMSG_ERROR_MSG.LN_TRAN_DTE_MUST_INPUT, LNCSWLDR.RC);
            Z_RET();
            if (pgmRtn) return;
        }
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.RV_JNL);
        if (LNCSWLDR.COMM_DATA.RV_JNL == 0) {
            IBS.CPY2CLS(SCCGWA, LNCMSG_ERROR_MSG.LN_TRAN_JRN_MUST_INPUT, LNCSWLDR.RC);
            Z_RET();
            if (pgmRtn) return;
        }
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.CCY);
        if (LNCSWLDR.COMM_DATA.CCY.trim().length() == 0) {
            IBS.CPY2CLS(SCCGWA, LNCMSG_ERROR_MSG.LN_ERR_MUST_I_CCY, LNCSWLDR.RC);
            Z_RET();
            if (pgmRtn) return;
        }
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.PRINCIPAL);
        if (LNCSWLDR.COMM_DATA.PRINCIPAL == 0) {
            IBS.CPY2CLS(SCCGWA, LNCMSG_ERROR_MSG.LN_ERR_MUST_I_AMT, LNCSWLDR.RC);
            Z_RET();
            if (pgmRtn) return;
        }
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.VAL_DT);
        if (LNCSWLDR.COMM_DATA.VAL_DT == 0) {
            IBS.CPY2CLS(SCCGWA, LNCMSG_ERROR_MSG.LN_ERR_VAL_DT_M_INPUT, LNCSWLDR.RC);
            Z_RET();
            if (pgmRtn) return;
        }
    }
    public void B220_GET_ICTL_INF() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, LNCICTLM);
        LNCICTLM.FUNC = '3';
        LNCICTLM.REC_DATA.KEY.CONTRACT_NO = LNCSWLDR.COMM_DATA.CTA_NO;
        LNCICTLM.REC_DATA.KEY.SUB_CTA_NO = 0;
        S000_CALL_LNZICTLM();
        if (pgmRtn) return;
    }
    public void B000_MAIN_PROC() throws IOException,SQLException,Exception {
        if (LNCICTLM.REC_DATA.CTL_STSW == null) LNCICTLM.REC_DATA.CTL_STSW = "";
        JIBS_tmp_int = LNCICTLM.REC_DATA.CTL_STSW.length();
        for (int i=0;i<128-JIBS_tmp_int;i++) LNCICTLM.REC_DATA.CTL_STSW += " ";
        if (LNCICTLM.REC_DATA.CTL_STSW.substring(31 - 1, 31 + 1 - 1).equalsIgnoreCase("0")) {
            B100_LOAN_CANCEL_PROC();
            if (pgmRtn) return;
        } else {
            B200_LOAN_DRAWREV_PROC();
            if (pgmRtn) return;
            R000_GET_PART_INFO_PROC();
            if (pgmRtn) return;
            if (LNCIPART.DATA.IS_SYN != 'N') {
                B300_PART_DRAWREV_PROC();
                if (pgmRtn) return;
            } else {
                if (LNCSWLDR.COMM_DATA.DISB_REF != 0) {
                    IBS.CPY2CLS(SCCGWA, LNCMSG_ERROR_MSG.LN_ERR_NOT_ALLOW_INPUT, LNCSWLDR.RC);
                    Z_RET();
                    if (pgmRtn) return;
                }
            }
        }
        B300_NON_FINANCE_HIS();
        if (pgmRtn) return;
        B400_COUNT_CONTTRACT_NUM();
        if (pgmRtn) return;
    }
    public void B100_LOAN_CANCEL_PROC() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, LNCSLNCL);
        LNCSLNCL.COMM_DATA.LN_AC = LNCSWLDR.COMM_DATA.CTA_NO;
        LNCSLNCL.COMM_DATA.SUF_NO = "" + 0;
        JIBS_tmp_int = LNCSLNCL.COMM_DATA.SUF_NO.length();
        for (int i=0;i<0-JIBS_tmp_int;i++) LNCSLNCL.COMM_DATA.SUF_NO = "0" + LNCSLNCL.COMM_DATA.SUF_NO;
        LNCSLNCL.COMM_DATA.CCY = LNCSWLDR.COMM_DATA.CCY;
        LNCSLNCL.COMM_DATA.PRINCIPAL = LNCSWLDR.COMM_DATA.PRINCIPAL;
        LNCSLNCL.COMM_DATA.VAL_DT = LNCSWLDR.COMM_DATA.VAL_DT;
        LNCSLNCL.COMM_DATA.DUE_DT = LNCSWLDR.COMM_DATA.DUE_DT;
        S000_CALL_LNZSLNCL();
        if (pgmRtn) return;
        LNCSWLDR.COMM_DATA.CTA_NO = LNCSLNCL.COMM_DATA.LN_AC;
        LNCSWLDR.COMM_DATA.CCY = LNCSLNCL.COMM_DATA.CCY;
        LNCSWLDR.COMM_DATA.PRINCIPAL = LNCSLNCL.COMM_DATA.PRINCIPAL;
        LNCSWLDR.COMM_DATA.VAL_DT = LNCSLNCL.COMM_DATA.VAL_DT;
        LNCSWLDR.COMM_DATA.DUE_DT = LNCSLNCL.COMM_DATA.DUE_DT;
    }
    public void B200_LOAN_DRAWREV_PROC() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, LNCSDWRV);
        IBS.CLONE(SCCGWA, LNCSWLDR, LNCSDWRV);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.PAY_SUS_AC);
        S000_CALL_LNZSDWRV();
        if (pgmRtn) return;
        IBS.CLONE(SCCGWA, LNCSDWRV, LNCSWLDR);
        CEP.TRC(SCCGWA, LNCSDWRV.COMM_DATA.PAY_SUS_AC);
    }
    public void B300_NON_FINANCE_HIS() throws IOException,SQLException,Exception {
        B310_MOVE_TO_OLD_HIS();
        if (pgmRtn) return;
        IBS.init(SCCGWA, BPCPNHIS);
        BPCPNHIS.INFO.REF_NO = LNCSWLDR.COMM_DATA.CTA_NO;
        BPCPNHIS.INFO.AC = LNCSWLDR.COMM_DATA.CTA_NO;
        BPCPNHIS.INFO.CI_NO = LNCSWLDR.COMM_DATA.CI_NO;
        BPCPNHIS.INFO.MAKER_TLR = SCCGWA.COMM_AREA.TL_ID;
        BPCPNHIS.INFO.TX_CD = IBS.CLS2CPY(SCCGWA, SCCGWA.COMM_AREA.TR_ID);
        BPCPNHIS.INFO.FMT_ID = K_HIS_CPB_NM;
        BPCPNHIS.INFO.JRNNO = SCCGWA.COMM_AREA.JRN_NO;
        BPCPNHIS.INFO.TX_RMK = K_HIS_RMKS;
        BPCPNHIS.INFO.TX_TYP = 'D';
        BPCPNHIS.INFO.DATA_FLG = 'Y';
        BPCPNHIS.INFO.FMT_ID_LEN = 1665;
        BPCPNHIS.INFO.OLD_DAT_PT = LNCLNCLO;
        BPCPNHIS.INFO.NEW_DAT_PT = LNCLNCLN;
        S000_CALL_BPZPNHIS();
        if (pgmRtn) return;
    }
    public void B310_MOVE_TO_OLD_HIS() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, LNCLNCLN);
        IBS.init(SCCGWA, LNCLNCLO);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.FACILITY_NO);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.TRCHCMMT_NO);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.CTA_NO);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.PROD_CD);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.BOOK_BR);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.CCY);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.PRINCIPAL);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.VAL_DT);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.DUE_DT);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.CI_ATTR);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.CI_NO);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.LMT_NO);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.OIC);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.DOMI_BR);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.EXCH_RATE);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.EQU);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.BK_PORTFOLIO);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.INT_DAY_BASIS);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.ACCRUAL_TYPE);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.HOLIDAY_METH);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.HOLIDAY_OVER);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.REMARK1);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.REMARK2);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.REMARK3);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.REMARK4);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.REMARK5);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.INT_PER_STRT);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.INT_PER_END);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.RATE_FLG);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.COMP_METHOD);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.MAX_RATE);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.MIN_RATE);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.INT_RATE_CODE1);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.RATE_VAR1);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.INT_RATE1);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.INT_RATE_CODE2);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.RATE_VAR2);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.INT_RATE2);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.INT_RATE_CODE3);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.RATE_VAR3);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.INT_RATE3);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.COST_OF_FUND);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.INT_BASE_MEMO);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.PREM_RATE_CODE);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.PREM_RATE);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.ADD_ON_RATE);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.ALL_IN_RATE);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.OVD_KND);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.ACTV_DT);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.EFF_RAT);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.DIF_IRAT_PNT);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.NEXT_REVIEW_DATE);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.PAY_SETTLE_METH);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.PAY_DD_AC);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.PAY_NOS_AC);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.PAY_SUS_AC);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.REC_SETTLE_METH);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.REC_DD_AC);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.REC_NOS_AC);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.REC_SUS_AC);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.PAYEE_NAME);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.CO_REMARK);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.REMIT_REF_NO);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.REVOLVING_FLAG);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.GLM_BR);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.GLM_HO);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.GLM_IAS39);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.GLM_UNUSE);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.DISB_REF);
        CEP.TRC(SCCGWA, LNCSWLDR.COMM_DATA.INT);
        LNCLNCLO.HIST_DATA.FACILITY_NO = LNCSWLDR.COMM_DATA.FACILITY_NO;
        LNCLNCLO.HIST_DATA.TRCHCMMT_NO = LNCSWLDR.COMM_DATA.TRCHCMMT_NO;
        LNCLNCLO.HIST_DATA.CTA_NO = LNCSWLDR.COMM_DATA.CTA_NO;
        LNCLNCLO.HIST_DATA.PROD_CD = LNCSWLDR.COMM_DATA.PROD_CD;
        LNCLNCLO.HIST_DATA.BOOK_BR = LNCSWLDR.COMM_DATA.BOOK_BR;
        LNCLNCLO.HIST_DATA.CCY = LNCSWLDR.COMM_DATA.CCY;
        LNCLNCLO.HIST_DATA.PRINCIPAL = LNCSWLDR.COMM_DATA.PRINCIPAL;
        LNCLNCLO.HIST_DATA.VAL_DT = LNCSWLDR.COMM_DATA.VAL_DT;
        LNCLNCLO.HIST_DATA.DUE_DT = LNCSWLDR.COMM_DATA.DUE_DT;
        LNCLNCLO.HIST_DATA.CI_ATTR = LNCSWLDR.COMM_DATA.CI_ATTR;
        LNCLNCLO.HIST_DATA.CI_NO = LNCSWLDR.COMM_DATA.CI_NO;
        LNCLNCLO.HIST_DATA.LMT_NO = LNCSWLDR.COMM_DATA.LMT_NO;
        LNCLNCLO.HIST_DATA.OIC = LNCSWLDR.COMM_DATA.OIC;
        LNCLNCLO.HIST_DATA.DOMI_BR = LNCSWLDR.COMM_DATA.DOMI_BR;
        LNCLNCLO.HIST_DATA.EXCH_RATE = LNCSWLDR.COMM_DATA.EXCH_RATE;
        LNCLNCLO.HIST_DATA.EQU = LNCSWLDR.COMM_DATA.EQU;
        LNCLNCLO.HIST_DATA.BK_PORTFOLIO = LNCSWLDR.COMM_DATA.BK_PORTFOLIO;
        LNCLNCLO.HIST_DATA.INT_DAY_BASIS = LNCSWLDR.COMM_DATA.INT_DAY_BASIS;
        LNCLNCLO.HIST_DATA.ACCRUAL_TYPE = LNCSWLDR.COMM_DATA.ACCRUAL_TYPE;
        LNCLNCLO.HIST_DATA.HOLIDAY_METH = LNCSWLDR.COMM_DATA.HOLIDAY_METH;
        LNCLNCLO.HIST_DATA.HOLIDAY_OVER = LNCSWLDR.COMM_DATA.HOLIDAY_OVER;
        LNCLNCLO.HIST_DATA.REMARK1 = LNCSWLDR.COMM_DATA.REMARK1;
        LNCLNCLO.HIST_DATA.REMARK2 = LNCSWLDR.COMM_DATA.REMARK2;
        LNCLNCLO.HIST_DATA.REMARK3 = LNCSWLDR.COMM_DATA.REMARK3;
        LNCLNCLO.HIST_DATA.REMARK4 = LNCSWLDR.COMM_DATA.REMARK4;
        LNCLNCLO.HIST_DATA.REMARK5 = LNCSWLDR.COMM_DATA.REMARK5;
        LNCLNCLO.HIST_DATA.INT_PER_STRT = LNCSWLDR.COMM_DATA.INT_PER_STRT;
        LNCLNCLO.HIST_DATA.INT_PER_END = LNCSWLDR.COMM_DATA.INT_PER_END;
        LNCLNCLO.HIST_DATA.RATE_FLG = LNCSWLDR.COMM_DATA.RATE_FLG;
        LNCLNCLO.HIST_DATA.COMP_METHOD = LNCSWLDR.COMM_DATA.COMP_METHOD;
        LNCLNCLO.HIST_DATA.MAX_RATE = LNCSWLDR.COMM_DATA.MAX_RATE;
        LNCLNCLO.HIST_DATA.MIN_RATE = LNCSWLDR.COMM_DATA.MIN_RATE;
        LNCLNCLO.HIST_DATA.INT_RATE_CODE1 = LNCSWLDR.COMM_DATA.INT_RATE_CODE1;
        LNCLNCLO.HIST_DATA.RATE_VAR1 = LNCSWLDR.COMM_DATA.RATE_VAR1;
        LNCLNCLO.HIST_DATA.INT_RATE1 = LNCSWLDR.COMM_DATA.INT_RATE1;
        LNCLNCLO.HIST_DATA.INT_RATE_CODE2 = LNCSWLDR.COMM_DATA.INT_RATE_CODE2;
        LNCLNCLO.HIST_DATA.RATE_VAR2 = LNCSWLDR.COMM_DATA.RATE_VAR2;
        LNCLNCLO.HIST_DATA.INT_RATE2 = LNCSWLDR.COMM_DATA.INT_RATE2;
        LNCLNCLO.HIST_DATA.INT_RATE_CODE3 = LNCSWLDR.COMM_DATA.INT_RATE_CODE3;
        LNCLNCLO.HIST_DATA.RATE_VAR3 = LNCSWLDR.COMM_DATA.RATE_VAR3;
        LNCLNCLO.HIST_DATA.INT_RATE3 = LNCSWLDR.COMM_DATA.INT_RATE3;
        LNCLNCLO.HIST_DATA.COST_OF_FUND = LNCSWLDR.COMM_DATA.COST_OF_FUND;
        LNCLNCLO.HIST_DATA.INT_BASE_MEMO = LNCSWLDR.COMM_DATA.INT_BASE_MEMO;
        LNCLNCLO.HIST_DATA.PREM_RATE_CODE = LNCSWLDR.COMM_DATA.PREM_RATE_CODE;
        LNCLNCLO.HIST_DATA.PREM_RATE = LNCSWLDR.COMM_DATA.PREM_RATE;
        LNCLNCLO.HIST_DATA.ADD_ON_RATE = LNCSWLDR.COMM_DATA.ADD_ON_RATE;
        LNCLNCLO.HIST_DATA.ALL_IN_RATE = LNCSWLDR.COMM_DATA.ALL_IN_RATE;
        LNCLNCLO.HIST_DATA.OVD_KND = LNCSWLDR.COMM_DATA.OVD_KND;
        LNCLNCLO.HIST_DATA.ACTV_DT = LNCSWLDR.COMM_DATA.ACTV_DT;
        LNCLNCLO.HIST_DATA.EFF_RAT = LNCSWLDR.COMM_DATA.EFF_RAT;
        LNCLNCLO.HIST_DATA.DIF_IRAT_PNT = LNCSWLDR.COMM_DATA.DIF_IRAT_PNT;
        LNCLNCLO.HIST_DATA.NEXT_REVIEW_DATE = LNCSWLDR.COMM_DATA.NEXT_REVIEW_DATE;
        LNCLNCLO.HIST_DATA.PAY_SETTLE_METH = LNCSWLDR.COMM_DATA.PAY_SETTLE_METH;
        LNCLNCLO.HIST_DATA.PAY_DD_AC = LNCSWLDR.COMM_DATA.PAY_DD_AC;
        LNCLNCLO.HIST_DATA.PAY_NOS_AC = LNCSWLDR.COMM_DATA.PAY_NOS_AC;
        LNCLNCLO.HIST_DATA.PAY_SUS_AC = LNCSWLDR.COMM_DATA.PAY_SUS_AC;
        LNCLNCLO.HIST_DATA.REC_SETTLE_METH = LNCSWLDR.COMM_DATA.REC_SETTLE_METH;
        LNCLNCLO.HIST_DATA.REC_DD_AC = LNCSWLDR.COMM_DATA.REC_DD_AC;
        LNCLNCLO.HIST_DATA.REC_NOS_AC = LNCSWLDR.COMM_DATA.REC_NOS_AC;
        LNCLNCLO.HIST_DATA.REC_SUS_AC = LNCSWLDR.COMM_DATA.REC_SUS_AC;
        LNCLNCLO.HIST_DATA.PAYEE_NAME = LNCSWLDR.COMM_DATA.PAYEE_NAME;
        LNCLNCLO.HIST_DATA.CO_REMARK = LNCSWLDR.COMM_DATA.CO_REMARK;
        LNCLNCLO.HIST_DATA.REMIT_REF_NO = LNCSWLDR.COMM_DATA.REMIT_REF_NO;
        LNCLNCLO.HIST_DATA.REVOLVING_FLAG = LNCSWLDR.COMM_DATA.REVOLVING_FLAG;
        LNCLNCLO.HIST_DATA.GLM_BR = LNCSWLDR.COMM_DATA.GLM_BR;
        LNCLNCLO.HIST_DATA.GLM_HO = LNCSWLDR.COMM_DATA.GLM_HO;
        LNCLNCLO.HIST_DATA.GLM_IAS39 = LNCSWLDR.COMM_DATA.GLM_IAS39;
        LNCLNCLO.HIST_DATA.GLM_UNUSE = LNCSWLDR.COMM_DATA.GLM_UNUSE;
        LNCLNCLO.HIST_DATA.DISB_REF = LNCSWLDR.COMM_DATA.DISB_REF;
        LNCLNCLO.HIST_DATA.INT = LNCSWLDR.COMM_DATA.INT;
    }
    public void B300_PART_DRAWREV_PROC() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, LNCSPREV);
        LNCSPREV.COMM_DATA.FUNC = 'N';
        LNCSPREV.COMM_DATA.TR_DATE = LNCSWLDR.COMM_DATA.RV_DATE;
        LNCSPREV.COMM_DATA.ACM_EVENT = "ST";
        LNCSPREV.COMM_DATA.TR_JRN_NO = LNCSWLDR.COMM_DATA.RV_JNL;
        LNCSPREV.COMM_DATA.CONTRACT_NO = LNCSWLDR.COMM_DATA.CTA_NO;
        LNCSPREV.COMM_DATA.TRCHCMMT_NO = LNCSWLDR.COMM_DATA.TRCHCMMT_NO;
        LNCSPREV.COMM_DATA.CI_NO = LNCSWLDR.COMM_DATA.CI_NO;
        LNCSPREV.COMM_DATA.CI_ATTR = LNCSWLDR.COMM_DATA.CI_ATTR;
        LNCSPREV.COMM_DATA.LMT_NO = LNCSWLDR.COMM_DATA.LMT_NO;
        LNCSPREV.COMM_DATA.PROD_CD = LNCSWLDR.COMM_DATA.PROD_CD;
        LNCSPREV.COMM_DATA.DRAW_AMT = LNCSWLDR.COMM_DATA.PRINCIPAL;
        LNCSPREV.COMM_DATA.DRAW_EQU = LNCSWLDR.COMM_DATA.EQU;
        LNCSPREV.COMM_DATA.VAL_DT = LNCSWLDR.COMM_DATA.VAL_DT;
        LNCSPREV.COMM_DATA.DUE_DT = LNCSWLDR.COMM_DATA.DUE_DT;
        LNCSPREV.COMM_DATA.CCY = LNCSWLDR.COMM_DATA.CCY;
        LNCSPREV.COMM_DATA.EXCH_RATE = LNCSWLDR.COMM_DATA.EXCH_RATE;
        S000_CALL_LNZSPREV();
        if (pgmRtn) return;
        LNCSWLDR.COMM_DATA.RV_DATE = LNCSPREV.COMM_DATA.TR_DATE;
        LNCSWLDR.COMM_DATA.RV_JNL = LNCSPREV.COMM_DATA.TR_JRN_NO;
        LNCSWLDR.COMM_DATA.CTA_NO = LNCSPREV.COMM_DATA.CONTRACT_NO;
        LNCSWLDR.COMM_DATA.TRCHCMMT_NO = LNCSPREV.COMM_DATA.TRCHCMMT_NO;
        LNCSWLDR.COMM_DATA.CI_NO = LNCSPREV.COMM_DATA.CI_NO;
        LNCSWLDR.COMM_DATA.CI_ATTR = LNCSPREV.COMM_DATA.CI_ATTR;
        LNCSWLDR.COMM_DATA.LMT_NO = LNCSPREV.COMM_DATA.LMT_NO;
        LNCSWLDR.COMM_DATA.PROD_CD = LNCSPREV.COMM_DATA.PROD_CD;
        LNCSWLDR.COMM_DATA.PRINCIPAL = LNCSPREV.COMM_DATA.DRAW_AMT;
        LNCSWLDR.COMM_DATA.EQU = LNCSPREV.COMM_DATA.DRAW_EQU;
        LNCSWLDR.COMM_DATA.VAL_DT = LNCSPREV.COMM_DATA.VAL_DT;
        LNCSWLDR.COMM_DATA.DUE_DT = LNCSPREV.COMM_DATA.DUE_DT;
        LNCSWLDR.COMM_DATA.CCY = LNCSPREV.COMM_DATA.CCY;
        LNCSWLDR.COMM_DATA.EXCH_RATE = LNCSPREV.COMM_DATA.EXCH_RATE;
    }
    public void B400_COUNT_CONTTRACT_NUM() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, BPCUMPRT);
        BPCUMPRT.STUS = 'C';
        BPCUMPRT.KEY.ACCT_CENTRE = LNCSWLDR.COMM_DATA.BOOK_BR;
        BPCUMPRT.KEY.PROD_CODE = LNCSWLDR.COMM_DATA.PROD_CD;
        BPCUMPRT.KEY.CCY = LNCSWLDR.COMM_DATA.CCY;
        BPCUMPRT.KEY.VAL_DATE = LNCSWLDR.COMM_DATA.VAL_DT;
        BPCUMPRT.AMOUNT = LNCSWLDR.COMM_DATA.PRINCIPAL;
        S000_CALL_BPZUMPRT();
        if (pgmRtn) return;
    }
    public void R000_GET_PART_INFO_PROC() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, LNCIPART.DATA);
        IBS.init(SCCGWA, LNCIPART.RC);
        LNCIPART.DATA.FUNC = 'P';
        LNCIPART.DATA.LEVEL = 'C';
        LNCIPART.DATA.CONTRACT_NO = LNCSWLDR.COMM_DATA.TRCHCMMT_NO;
        S000_CALL_LNZIPART();
        if (pgmRtn) return;
    }
    public void S000_CALL_LNZIPART() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "LN-UNT-PARTI-INQ", LNCIPART);
        if (LNCIPART.RC.RC_CODE != 0) {
            JIBS_tmp_str[0] = IBS.CLS2CPY(SCCGWA, LNCIPART.RC);
            IBS.CPY2CLS(SCCGWA, JIBS_tmp_str[0], LNCSWLDR.RC);
            Z_RET();
            if (pgmRtn) return;
        }
    }
    public void S000_CALL_BPZUMPRT() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "BP-U-MPRT-MAINT", BPCUMPRT);
        if (BPCUMPRT.RC.RC_RTNCODE != 0) {
            JIBS_tmp_str[0] = IBS.CLS2CPY(SCCGWA, BPCUMPRT.RC);
            IBS.CPY2CLS(SCCGWA, JIBS_tmp_str[0], LNCSWLDR.RC);
            Z_RET();
            if (pgmRtn) return;
        }
    }
    public void S000_CALL_BPZPNHIS() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "BP-REC-NHIS", BPCPNHIS);
        if (BPCPNHIS.RC.RC_CODE != 0) {
            JIBS_tmp_str[0] = IBS.CLS2CPY(SCCGWA, BPCPNHIS.RC);
            IBS.CPY2CLS(SCCGWA, JIBS_tmp_str[0], LNCSWLDR.RC);
            Z_RET();
            if (pgmRtn) return;
        }
    }
    public void S000_CALL_LNZICTLM() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "LN-SRC-ICTL-MAINT", LNCICTLM);
        if (LNCICTLM.RC.RC_RTNCODE != 0) {
            JIBS_tmp_str[0] = IBS.CLS2CPY(SCCGWA, LNCICTLM.RC);
            IBS.CPY2CLS(SCCGWA, JIBS_tmp_str[0], LNCSWLDR.RC);
            Z_RET();
            if (pgmRtn) return;
        }
    }
    public void S000_CALL_LNZSPREV() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "LN-SVR-LOAN-DDRVPART", LNCSPREV);
        if (LNCSPREV.RC.RC_CODE != 0) {
            JIBS_tmp_str[0] = IBS.CLS2CPY(SCCGWA, LNCSPREV.RC);
            IBS.CPY2CLS(SCCGWA, JIBS_tmp_str[0], LNCSWLDR.RC);
            Z_RET();
            if (pgmRtn) return;
        }
    }
    public void S000_CALL_LNZSLNCL() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "LN-SVR-LOAN-CANCEL", LNCSLNCL);
        if (LNCSLNCL.RC.RC_RTNCODE != 0) {
            JIBS_tmp_str[0] = IBS.CLS2CPY(SCCGWA, LNCSLNCL.RC);
            IBS.CPY2CLS(SCCGWA, JIBS_tmp_str[0], LNCSWLDR.RC);
            Z_RET();
            if (pgmRtn) return;
        }
    }
    public void S000_CALL_LNZSDWRV() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "LN-SVR-DRAW-REV", LNCSDWRV);
        if (LNCSDWRV.RC.RC_RTNCODE != 0) {
