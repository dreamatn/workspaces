package com.hisun.GD;

import com.hisun.DD.*;
import com.hisun.SC.*;
import com.hisun.TC.XStreamUtil;

import java.io.IOException;
import java.sql.SQLException;

public class GDOT1500 {
    short WS_FLD_NO = 0;
    String WS_ERR_MSG = " ";
    short WS_CNT = 0;
    short WS_ABC = 0;
    short WS_XYZ = 0;
    GDCMSG_ERROR_MSG GDCMSG_ERROR_MSG = new GDCMSG_ERROR_MSG();
    DDCMSG_ERROR_MSG DDCMSG_ERROR_MSG = new DDCMSG_ERROR_MSG();
    SCCMSG SCCMSG = new SCCMSG();
    SCCEXCP SCCEXCP = new SCCEXCP();
    SCCCALL SCCCALL = new SCCCALL();
    GDCSCPRL GDCSCPRL = new GDCSCPRL();
    SCCGWA SCCGWA;
    GDB1500_AWA_1500 GDB1500_AWA_1500;
    public void MP(SCCGWA SCCGWA) throws IOException,SQLException,Exception {
        this.SCCGWA = SCCGWA;
        CEP.TRC(SCCGWA);
        A000_INIT_PROCESS();
        B000_MAIN_PROCESS();
        CEP.TRC(SCCGWA, "GDOT1500 return!");
        Z_RET();
    }
    public void A000_INIT_PROCESS() throws IOException,SQLException,Exception {
        SCCGWA.COMM_AREA.AWA_AREA_PTR = SCCGWA.COMM_AREA.AWA_AREA_PTR.replaceAll("BODY>", "GDB1500_AWA_1500>");
        GDB1500_AWA_1500 = (GDB1500_AWA_1500) XStreamUtil.xmlToBean(SCCGWA.COMM_AREA.AWA_AREA_PTR);
    }
    public void B000_MAIN_PROCESS() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[1-1].AC_TYP);
        CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[1-1].FUNC);
        if (GDB1500_AWA_1500.CPRL_CNT[1-1].AC_TYP == ' ') {
            WS_ERR_MSG = GDCMSG_ERROR_MSG.GD_AC_TYPE_M_INPUT;
            S000_ERR_MSG_PROC();
        }
        for (WS_CNT = 1; WS_CNT <= 5 
            && GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].AC_TYP != ' '; WS_CNT += 1) {
            CEP.TRC(SCCGWA, WS_CNT);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].AC_TYP);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].FUNC);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].CI_NO);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].PROD_CD);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].TD_MAC);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].AC);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].SEQ);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].AC_NM);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].CCY);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].CCY_TYP);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].AMT);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].TERM);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].STL_MTH);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].REV_NO);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].FR_AC);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].FR_CD);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].CHQ_NO);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].ISS_DT);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].CVV);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].CUT_AC);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].CUT_BK);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].CUT_NM);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].RAT_TYP);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].PCT_S);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].FLT_RAT);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].RUL_CD);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].INT_RAT);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].ROL_MTH);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].INT_AC);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].RMK);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_CNT-1].MMO);
        }
        CEP.TRC(SCCGWA, GDB1500_AWA_1500.RSEQ);
        CEP.TRC(SCCGWA, GDB1500_AWA_1500.CTA_NO);
        CEP.TRC(SCCGWA, GDB1500_AWA_1500.REF_NO);
        CEP.TRC(SCCGWA, GDB1500_AWA_1500.R_TYP);
        CEP.TRC(SCCGWA, GDB1500_AWA_1500.EXP_DT);
        CEP.TRC(SCCGWA, GDB1500_AWA_1500.BR);
        B100_CHECK_INPUT_DATA();
        B200_TRANS_DATA_PROC();
    }
    public void B100_CHECK_INPUT_DATA() throws IOException,SQLException,Exception {
        for (WS_ABC = 1; WS_ABC <= 5 
            && GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].AC_TYP != ' '; WS_ABC += 1) {
            CEP.TRC(SCCGWA, WS_ABC);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].AC_TYP);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].FUNC);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].CCY);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].AMT);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].ROL_MTH);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].RAT_TYP);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.CTA_NO);
            CEP.TRC(SCCGWA, GDB1500_AWA_1500.R_TYP);
            if (GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].AC_TYP == ' ') {
                WS_ERR_MSG = GDCMSG_ERROR_MSG.GD_AC_TYPE_M_INPUT;
                S000_ERR_MSG_PROC_CONTINUE();
            }
            if (GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].AC_TYP != ' ' 
                && GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].AC_TYP != '0' 
                && GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].AC_TYP != '1') {
                WS_ERR_MSG = GDCMSG_ERROR_MSG.GD_AC_TYPE_INVALID;
                S000_ERR_MSG_PROC_CONTINUE();
            }
            if (GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].FUNC == ' ') {
                WS_ERR_MSG = GDCMSG_ERROR_MSG.GD_FUNC_TYPE_M_INPUT;
                S000_ERR_MSG_PROC_CONTINUE();
            }
            if (GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].FUNC != ' ' 
                && GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].FUNC != '0' 
                && GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].FUNC != '1' 
                && GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].FUNC != '2') {
                WS_ERR_MSG = GDCMSG_ERROR_MSG.GD_FUNC_TYPE_INVALID;
                S000_ERR_MSG_PROC_CONTINUE();
            }
            if (GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].CCY.trim().length() == 0) {
                WS_ERR_MSG = GDCMSG_ERROR_MSG.GD_CCY_M_INPUT;
                S000_ERR_MSG_PROC_CONTINUE();
            }
            if (GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].AMT == 0) {
                WS_ERR_MSG = GDCMSG_ERROR_MSG.GD_RL_AMT_M_INPUT;
                S000_ERR_MSG_PROC_CONTINUE();
            } else {
                if (GDB1500_AWA_1500.CPRL_CNT[WS_ABC-1].AMT < 0) {
                    WS_ERR_MSG = GDCMSG_ERROR_MSG.GD_AMT_INVALID;
                    S000_ERR_MSG_PROC_CONTINUE();
                }
            }
        }
        if (GDB1500_AWA_1500.CTA_NO.trim().length() == 0) {
            WS_ERR_MSG = GDCMSG_ERROR_MSG.GD_CTA_NO_M_INPUT;
            S000_ERR_MSG_PROC_CONTINUE();
        }
        if (GDB1500_AWA_1500.R_TYP.trim().length() == 0) {
            WS_ERR_MSG = GDCMSG_ERROR_MSG.GD_BUSI_TYPE_M_INPUT;
            S000_ERR_MSG_PROC_CONTINUE();
        }
        WS_ERR_MSG = GDCMSG_ERROR_MSG.GD_INPUT_DATA_ERR;
        S000_ERR_MSG_PROC_LAST();
    }
    public void B200_TRANS_DATA_PROC() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, GDCSCPRL);
        for (WS_XYZ = 1; WS_XYZ <= 5 
            && GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].AC_TYP != ' '; WS_XYZ += 1) {
            GDCSCPRL.VAL.CNT[WS_XYZ-1].AC_TYP = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].AC_TYP;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].FUNC = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].FUNC;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].CI_NO = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].CI_NO;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].PROD_CD = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].PROD_CD;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].TD_MAC = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].TD_MAC;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].AC = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].AC;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].AC_SEQ = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].SEQ;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].AC_NM = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].AC_NM;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].CCY = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].CCY;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].CCY_TYP = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].CCY_TYP;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].AMT = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].AMT;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].TERM = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].TERM;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].STL_MTH = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].STL_MTH;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].REV_NO = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].REV_NO;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].FR_AC = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].FR_AC;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].FR_CD = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].FR_CD;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].CHQ_NO = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].CHQ_NO;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].ISS_DT = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].ISS_DT;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].CVV = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].CVV;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].CUT_AC = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].CUT_AC;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].CUT_BK = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].CUT_BK;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].CUT_NM = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].CUT_NM;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].RAT_TYP = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].RAT_TYP;
            if (GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].RAT_TYP == ' ') {
                GDCSCPRL.VAL.CNT[WS_XYZ-1].RAT_TYP = '0';
            }
            GDCSCPRL.VAL.CNT[WS_XYZ-1].PCT_S = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].PCT_S;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].FLT_RAT = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].FLT_RAT;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].RUL_CD = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].RUL_CD;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].INT_RAT = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].INT_RAT;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].ROL_MTH = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].ROL_MTH;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].INT_AC = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].INT_AC;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].RMK = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].RMK;
            GDCSCPRL.VAL.CNT[WS_XYZ-1].MMO = GDB1500_AWA_1500.CPRL_CNT[WS_XYZ-1].MMO;
        }
        GDCSCPRL.VAL.RSEQ = GDB1500_AWA_1500.RSEQ;
        GDCSCPRL.VAL.CTA_NO = GDB1500_AWA_1500.CTA_NO;
        GDCSCPRL.VAL.REF_NO = GDB1500_AWA_1500.REF_NO;
        GDCSCPRL.VAL.BUSI_TYP = GDB1500_AWA_1500.R_TYP;
        GDCSCPRL.VAL.EXP_DT = GDB1500_AWA_1500.EXP_DT;
        GDCSCPRL.VAL.BR = GDB1500_AWA_1500.BR;
        S000_CALL_GDZSCPRL();
    }
    public void S000_CALL_GDZSCPRL() throws IOException,SQLException,Exception {
        IBS.CALLCPN(SCCGWA, "GD-SVR-GDZSCPRL", GDCSCPRL);
    }
    public void S000_ERR_MSG_PROC_CONTINUE() throws IOException,SQLException,Exception {
        CEP.ERRC(SCCGWA, WS_ERR_MSG, WS_FLD_NO);
    }
    public void S000_ERR_MSG_PROC_LAST() throws IOException,SQLException,Exception {
        CEP.ERR(SCCGWA, WS_ERR_MSG);
    }
    public void S000_ERR_MSG_PROC() throws IOException,SQLException,Exception {
        CEP.ERR(SCCGWA, WS_ERR_MSG);
    }
    public void Z_RET() throws IOException,SQLException,Exception {
        return;
    }
    public void B_DB_EXCP() throws IOException,SQLException,Exception {
        throw new SQLException(SCCGWA.e);
    }
}
