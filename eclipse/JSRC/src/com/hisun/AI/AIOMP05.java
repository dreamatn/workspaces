package com.hisun.AI;

import java.io.IOException;
import java.sql.SQLException;

import com.hisun.BP.BPCMSG_ERROR_MSG;
import com.hisun.BP.BPCOQACD;
import com.hisun.BP.BPCOQPCD;
import com.hisun.BP.BPCOVAWR;
import com.hisun.BP.BPCPARM;
import com.hisun.BP.BPCPNHIS;
import com.hisun.BP.BPCPQBAI;
import com.hisun.BP.BPCPQBNK_DATA_INFO;
import com.hisun.BP.BPCPRMB;
import com.hisun.BP.BPCPRMM;
import com.hisun.BP.BPCQBKPM;
import com.hisun.BP.BPCRMBPM;
import com.hisun.BP.BPRACCT;
import com.hisun.BP.BPRCTL;
import com.hisun.BP.BPRPARM;
import com.hisun.BP.BPRPRMT;
import com.hisun.BP.BPRTLT;
import com.hisun.BP.BPRTRT;
import com.hisun.BP.BPRVCHT;
import com.hisun.SC.SCCAWAC;
import com.hisun.SC.SCCCALL;
import com.hisun.SC.SCCEXCP;
import com.hisun.SC.SCCFMT;
import com.hisun.SC.SCCGBPA_BP_AREA;
import com.hisun.SC.SCCGCPT;
import com.hisun.SC.SCCGMSG;
import com.hisun.SC.SCCGSCA_SC_AREA;
import com.hisun.SC.SCCGWA;
import com.hisun.SC.SCCMPAG;
import com.hisun.SC.SCCMSG;
import com.hisun.SC.SCCPRMR;
import com.hisun.SC.SCCSUBS;

public class AIOMP05 {
    boolean pgmRtn = false;
    String CPN_BP_PARM_READ = "BP-PARM-READ";
    String CPN_REC_NHIS = "BP-REC-NHIS";
    String K_HIS_REMARKS = "COA NUMBER ADD   MAINTAIN";
    String CPN_SET_SBUS_TRN = "SC-SET-SUBS-TRANS";
    String K_CPY_AIRITM = "AIRITM";
    String AI_HIS_REMARKS = "GL A/C NO. MAINTAIN HISTORY";
    String K_OUTPUT_FMT = "AIX01";
    String K_PAI05_TYPE = "PAI05";
    String CPN_SL_INQ_SLAC = "SL-INQ-SLAC";
    String TBL_AITCMIB = "AITCMIB";
    BPCOVAWR BPCOVAWR = new BPCOVAWR();
    SCCCALL SCCCALL = new SCCCALL();
    SCCEXCP SCCEXCP = new SCCEXCP();
    SCCMSG SCCMSG = new SCCMSG();
    SCCMPAG SCCMPAG = new SCCMPAG();
    char K_D_TABLE = 'D';
    int K_FLD_CNT = 150;
    int K_HEAD_ITM_NO = 999999;
    int K_BR_ITM_NO = 99999999;
    String K_BR_ITM_NO_10 = "9999999999";
    String WS_ERR_MSG = " ";
    String WS_ERR_INFO = " ";
    int WS_AA = 0;
    int WS_B = 0;
    int WS_U = 0;
    char WS_SIGN = ' ';
    int WS_COA_CNT = 0;
    int WS_COUNT = 0;
    int WS_INT_X = 0;
    int WS_INT_Y = 0;
    int WS_INT_Z = 0;
    AIOMP05_WS_ITM_L WS_ITM_L = new AIOMP05_WS_ITM_L();
    String WK_MST_ITM_NO = " ";
    String WK_CMIB_ITM_NO = " ";
    String WS_MIN_ITM_NO = " ";
    String WS_MAX_ITM_NO = " ";
    String WS_GL_BKFLG = " ";
    AIOMP05_WS_KEY WS_KEY = new AIOMP05_WS_KEY();
    AIOMP05_WS_VAL WS_VAL = new AIOMP05_WS_VAL();
    AIOMP05_WS_ITM_AWA WS_ITM_AWA = new AIOMP05_WS_ITM_AWA();
    String WK_ITM_COA_FLG = " ";
    String WK_ITM_NO = " ";
    char WS_FUNC = ' ';
    char WS_OUTPUT_TYPE = ' ';
    char WS_OUTPUT_TYPE2 = ' ';
    char WS_ODE_FLG = ' ';
    int WS_ITM_LEN = 0;
    int WS_A_ITM_LEN = 0;
    int WS_OVER_LEN = 0;
    String WS_ITM_NO = " ";
    String WS_COA_NO2 = " ";
    String WS_COA_NO_END = " ";
    String WS_ITM_BF = " ";
    String WS_ITM_AF = " ";
    short WS_IDX_X = 0;
    short WS_IDX_Y = 0;
    short WS_LEN_LST = 0;
    short WS_CNT = 0;
    int WS_D_IDX = 0;
    char WS_FLG = ' ';
    int WS_K = 0;
    int WS_J = 0;
    int WS_X = 0;
    int WS_Y = 0;
    int WS_Z = 0;
    int WS_S = 0;
    int WS_N = 0;
    int WS_SAVE_J = 0;
    int WS_I = 0;
    short WS_TOT_LEN = 0;
    short WS_TOT_LEN_1 = 0;
    short WS_TOT_LEN_2 = 0;
    short WS_TSQ_LEN = 0;
    short WS_TSQ_CNT = 0;
    String WS_M_CNAME = " ";
    String WS_Y_CNAME = " ";
    String WS_Z_CNAME = " ";
    AIOMP05_WS_REC_KEY WS_REC_KEY = new AIOMP05_WS_REC_KEY();
    AIOMP05_WS_ITM_CNTR WS_ITM_CNTR = new AIOMP05_WS_ITM_CNTR();
    AIOMP05_WS_TSQ_FLD WS_TSQ_FLD = new AIOMP05_WS_TSQ_FLD();
    AIOMP05_WS_TSQ1_FLD WS_TSQ1_FLD = new AIOMP05_WS_TSQ1_FLD();
    AIOMP05_WS_DATA_ALL WS_DATA_ALL = new AIOMP05_WS_DATA_ALL();
    AIOMP05_WS_OUT_PUT1 WS_OUT_PUT1 = new AIOMP05_WS_OUT_PUT1();
    AIOMP05_WS_OUT_PUT2 WS_OUT_PUT2 = new AIOMP05_WS_OUT_PUT2();
    String WS_T_CTL = " ";
    AIOMP05_REDEFINES174 REDEFINES174 = new AIOMP05_REDEFINES174();
    AIOMP05_REDEFINES183 REDEFINES183 = new AIOMP05_REDEFINES183();
    AIOMP05_WS_D_FLD WS_D_FLD = new AIOMP05_WS_D_FLD();
    char WS_READ_ITM_CTL = ' ';
    char WS_CHK_SIGN_CTL = ' ';
    AIOMP05_WS_COA_RANGE[] WS_COA_RANGE = new AIOMP05_WS_COA_RANGE[10000];
    String WS_ENG_NM = " ";
    String WS_CHN_NM = " ";
    String WS_LKUP_CD = " ";
    String WS_TMP_ENG_NM = " ";
    String WS_TMP_CHN_NM = " ";
    String WS_TMP_LKUP_CD = " ";
    String WS_END_ITM = " ";
    String WS_ITM_NO_FR = " ";
    String WS_ITM_NO_TO = " ";
    char WS_AIRITM_FLG = ' ';
    char WS_AIRITMP_FLG = ' ';
    char WS_AIRCOAP_FLG = ' ';
    char WS_AIRFVCH_FLG = ' ';
    char WS_BPRVCHT_FLG = ' ';
    char WS_AIRITAD_FLG = ' ';
    char WS_AIRMST_FLG = ' ';
    char WS_AIRCMIB_FLG = ' ';
    char WS_AIRMIB_FLG = ' ';
    char WS_AIRGINF_FLG = ' ';
    char WS_AIRHMST_FLG = ' ';
    char WS_REC_FLG = ' ';
    char WS_ACTION_FLG = ' ';
    String WS_TX_CODE_DEF = "       ";
    char WS_AITITAD_FLG = ' ';
    char WS_END_FLG = ' ';
    char WS_INQ_FLG1 = ' ';
    char WS_INQ_FLG2 = ' ';
    char WS_INQ_FLG3 = ' ';
    char WS_MST_BAL_FLG = ' ';
    char WS_GET_LEN_FLG = ' ';
    char WS_AITCMIB_FLG = ' ';
    BPRCTL BPRCTLD = new BPRCTL();
    AICMSG_ERROR_MSG AICMSG_ERROR_MSG = new AICMSG_ERROR_MSG();
    AICOCKOP AICOCKOP = new AICOCKOP();
    BPCOQACD BPCOQACD = new BPCOQACD();
    AIRFVCH AIRFVCH = new AIRFVCH();
    BPRVCHT BPRVCHT = new BPRVCHT();
    BPCOQPCD BPCOQPCD = new BPCOQPCD();
    BPCPRMB BPCPRMB = new BPCPRMB();
    SCCFMT SCCFMT = new SCCFMT();
    BPCPQBAI BPCPQBAI = new BPCPQBAI();
    AIRQ124 AIRQ124 = new AIRQ124();
    AICPCITM AICCITM = new AICPCITM();
    AIRITAD AIRITAD = new AIRITAD();
    AIRPAI5 AIRPAI5 = new AIRPAI5();
    BPRPRMT BPRPRMT = new BPRPRMT();
    BPCMSG_ERROR_MSG BPCMSG_ERROR_MSG = new BPCMSG_ERROR_MSG();
    BPRACCT BPRACCT = new BPRACCT();
    BPCPARM BPCPARM = new BPCPARM();
    BPRPARM BPRPARM = new BPRPARM();
    BPCPRMM BPCPRMM = new BPCPRMM();
    BPCRMBPM BPCRMBPM = new BPCRMBPM();
    AIRITM AIROITM = new AIRITM();
    AIRITM AIRNITM = new AIRITM();
    AIRCOAP AIRCOAP = new AIRCOAP();
    AIRITMP AIRITMP = new AIRITMP();
    BPCPNHIS BPCPNHIS = new BPCPNHIS();
    SCCSUBS SCCSUBS = new SCCSUBS();
    BPCQBKPM BPCQBKPM = new BPCQBKPM();
    AICSCMIB AICSCMIB = new AICSCMIB();
    AICRCMIB AICRCMIB = new AICRCMIB();
    SLCISAC SLCISAC = new SLCISAC();
    AICRMIB AICRMIB = new AICRMIB();
    AIRMIB AIRMIB = new AIRMIB();
    AICSMIB AICSMIB = new AICSMIB();
    AICPZMIB AICPZMIB = new AICPZMIB();
    AIRGINF AIRGINF = new AIRGINF();
    AIRCMIB AIRMCMIB = new AIRCMIB();
    SCCPRMR SCCPRMR = new SCCPRMR();
    AIRITM AIRITM = new AIRITM();
    AIRMST AIRMST = new AIRMST();
    AIRHMST AIRHMST = new AIRHMST();
    AIRCMIB AIRCMIB = new AIRCMIB();
    SCCGWA SCCGWA;
    SCCGSCA_SC_AREA SCCGSCA_SC_AREA;
    SCCGBPA_BP_AREA SCCGBPA_BP_AREA;
    SCCGCPT SCCGCPT;
    SCCGMSG SCCGMSG;
    BPCPQBNK_DATA_INFO BPCRBANK;
    BPRTRT BPRTRTT;
    BPRTLT BPRTLT;
    AIB0005_AWA_0005 AIB0005_AWA_0005;
    SCCAWAC SCCAWAC;
    public AIOMP05() {
        for (int i=0;i<10000;i++) WS_COA_RANGE[i] = new AIOMP05_WS_COA_RANGE();
    }
    public void MP(SCCGWA SCCGWA) throws IOException,SQLException,Exception {
        this.SCCGWA = SCCGWA;
        CEP.TRC(SCCGWA);
        A00_INIT_PROC();
        if (pgmRtn) return;
        B00_MAIN_PROC();
        if (pgmRtn) return;
        CEP.TRC(SCCGWA, "AIOMP05 return!");
        Z_RET();
        if (pgmRtn) return;
        JIBS_RETURN();
    }
    public void A00_INIT_PROC() throws IOException,SQLException,Exception {
        IBS.init(SCCGWA, SCCEXCP);
        SCCGSCA_SC_AREA = (SCCGSCA_SC_AREA) SCCGWA.SC_AREA_PTR;
        SCCGBPA_BP_AREA = (SCCGBPA_BP_AREA) SCCGWA.BP_AREA_PTR;
        SCCGCPT = (SCCGCPT) SCCGSCA_SC_AREA.CMPT_AREA_PTR;
        SCCGMSG = (SCCGMSG) SCCGSCA_SC_AREA.MSG_AREA_PTR;
        BPRTRTT = (BPRTRT) SCCGSCA_SC_AREA.TR_PARM_PTR;
        BPCRBANK = (BPCPQBNK_DATA_INFO) SCCGWA.COMM_AREA.BANK_AREA_PTR;
        BPRTLT = (BPRTLT) SCCGWA.COMM_AREA.TLT_AREA_PTR;
        if (BPRTRTT.DATA_TXT.AWA_IND == 'Y') {
            SCCGWA.COMM_AREA.AWA_AREA_PTR = SCCGWA.COMM_AREA.AWA_AREA_PTR.replaceAll("BODY>", "AIB0005_AWA_0005>");
            AIB0005_AWA_0005 = (AIB0005_AWA_0005) XStreamUtil.xmlToBean(SCCGWA.COMM_AREA.AWA_AREA_PTR);
            SCCAWAC = new SCCAWAC();
            IBS.init(SCCGWA, SCCAWAC);
            IBS.CPY2CLS(SCCGWA, SCCGWA.COMM_AREA.AWAC_AREA_PTR, SCCAWAC);
        }
        IBS.init(SCCGWA, SCCMSG);
        CEP.TRC(SCCGWA, BPRTRTT.DATA_TXT.PGM[SCCGWA.COMM_AREA.PGM_NO-1].PGM_CTL);
        WS_T_CTL = BPRTRTT.DATA_TXT.PGM[SCCGWA.COMM_AREA.PGM_NO-1].PGM_CTL;
        IBS.CPY2CLS(SCCGWA, WS_T_CTL, REDEFINES174);
        IBS.CPY2CLS(SCCGWA, WS_T_CTL, REDEFINES183);
        CEP.TRC(SCCGWA, WS_T_CTL);
    }
    public void B00_MAIN_PROC() throws IOException,SQLException,Exception {
        CEP.TRC(SCCGWA, AIB0005_AWA_0005.COA_FLG);
        CEP.TRC(SCCGWA, AIB0005_AWA_0005.COA_NO);
        B00_01_GET_D_TABLE();
        if (pgmRtn) return;
        for (WS_D_IDX = 1; WS_D_IDX <= BPRCTLD.DATA_TXT.FLD_CNT; WS_D_IDX += 1) {
            IBS.CPY2CLS(SCCGWA, BPRCTLD.DATA_TXT.FLD_TXT.FLD.get(WS_D_IDX-1).FLD_NAME, WS_D_FLD.WS_D_NAME);
            CEP.TRC(SCCGWA, WS_D_FLD.WS_D_NAME);
